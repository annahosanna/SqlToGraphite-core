<!DOCTYPE html PUBLIC "-//W3C//DTD XHTML 1.0 Strict//EN" "http://www.w3.org/TR/xhtml1/DTD/xhtml1-strict.dtd">
<html><head><title>SqlToGraphite.UnitTests.With_ConfigRepository - Coverage Report</title>
<meta http-equiv="content-type" content="text/html; charset=UTF-8" />
<link rel="stylesheet" type="text/css" href="report.css" />

</head><body><div class="container">
<h1>Summary</h1>
<table class="overview">
<colgroup>
<col width="130" />
<col />
</colgroup>
<tr><th>Class:</th><td>SqlToGraphite.UnitTests.With_ConfigRepository</td></tr>
<tr><th>Assembly:</th><td>SqlToGraphite.UnitTests</td></tr>
<tr><th>File(s):</th><td><a href="#CgitperryOfPeekSqlToGraphitetestSqlToGraphiteUnitTestsWith_ConfigRepositorycs">C:\git\perryOfPeek\SqlToGraphite\test\SqlToGraphite.UnitTests\With_ConfigRepository.cs</a></td></tr>
<tr><th>Coverage:</th><td>99.4%</td></tr>
<tr><th>Covered lines:</th><td>519</td></tr>
<tr><th>Coverable lines:</th><td>522</td></tr>
<tr><th>Total lines:</th><td>770</td></tr>
</table>
<h1>Metrics</h1>
<table class="overview">
<tr><th>Method</th><th>Cyclomatic Complexity</th><th>Sequence Coverage</th><th>Branch Coverage</th></tr>
<tr><td title="System.Void SqlToGraphite.UnitTests.With_ConfigRepository::SetUp()">SetUp()</td><td>1</td><td>100</td><td>100</td></tr>
<tr><td title="System.String SqlToGraphite.UnitTests.With_ConfigRepository::Add(System.String,System.String)">Add(...)</td><td>1</td><td>100</td><td>100</td></tr>
<tr><td title="System.Void SqlToGraphite.UnitTests.With_ConfigRepository::Should_save_config()">Should_save_config()</td><td>3</td><td>100</td><td>50</td></tr>
<tr><td title="System.Void SqlToGraphite.UnitTests.With_ConfigRepository::Should_read_config_and_get_clients()">Should_read_config_and_get_clients()</td><td>4</td><td>100</td><td>50</td></tr>
<tr><td title="System.Void SqlToGraphite.UnitTests.With_ConfigRepository::Should_retry_to_read_config_on_getting_error()">Should_retry_to_read_config_on_getting_error()</td><td>5</td><td>100</td><td>50</td></tr>
<tr><td title="System.Void SqlToGraphite.UnitTests.With_ConfigRepository::Should_load_config_and_get_clients()">Should_load_config_and_get_clients()</td><td>3</td><td>100</td><td>50</td></tr>
<tr><td title="System.Void SqlToGraphite.UnitTests.With_ConfigRepository::AddTwoClientsToConfig()">AddTwoClientsToConfig()</td><td>1</td><td>100</td><td>100</td></tr>
<tr><td title="System.Void SqlToGraphite.UnitTests.With_ConfigRepository::Should_add_clients()">Should_add_clients()</td><td>1</td><td>100</td><td>100</td></tr>
<tr><td title="System.Void SqlToGraphite.UnitTests.With_ConfigRepository::Should_add_host()">Should_add_host()</td><td>1</td><td>100</td><td>100</td></tr>
<tr><td title="System.Void SqlToGraphite.UnitTests.With_ConfigRepository::AddNewJob()">AddNewJob()</td><td>1</td><td>100</td><td>100</td></tr>
<tr><td title="System.Void SqlToGraphite.UnitTests.With_ConfigRepository::Should_add_task_to_role()">Should_add_task_to_role()</td><td>1</td><td>100</td><td>100</td></tr>
<tr><td title="System.Void SqlToGraphite.UnitTests.With_ConfigRepository::AssertThatTaskEqualToTaskProperty(SqlToGraphite.Conf.TaskDetails,SqlToGraphite.Config.Task)">AssertThatTaskEqualToTaskProperty(...)</td><td>1</td><td>0</td><td>0</td></tr>
<tr><td title="System.Void SqlToGraphite.UnitTests.With_ConfigRepository::Should_add_task_to_new_role()">Should_add_task_to_new_role()</td><td>1</td><td>100</td><td>100</td></tr>
<tr><td title="System.Void SqlToGraphite.UnitTests.With_ConfigRepository::Should_add_second_task_to_same_role_different_frequency()">Should_add_second_task_to_same_role_different_frequency()</td><td>1</td><td>100</td><td>100</td></tr>
<tr><td title="System.Void SqlToGraphite.UnitTests.With_ConfigRepository::Should_add_second_task_to_same_role_same_frequency()">Should_add_second_task_to_same_role_same_frequency()</td><td>1</td><td>100</td><td>100</td></tr>
<tr><td title="System.Void SqlToGraphite.UnitTests.With_ConfigRepository::Should_read_config_and_get_clients_dictionary()">Should_read_config_and_get_clients_dictionary()</td><td>3</td><td>100</td><td>50</td></tr>
<tr><td title="System.Void SqlToGraphite.UnitTests.With_ConfigRepository::Should_read_config_and_get_Templates()">Should_read_config_and_get_Templates()</td><td>3</td><td>100</td><td>50</td></tr>
<tr><td title="System.Void SqlToGraphite.UnitTests.With_ConfigRepository::Should_read_config_from_cache()">Should_read_config_from_cache()</td><td>4</td><td>100</td><td>50</td></tr>
<tr><td title="System.Void SqlToGraphite.UnitTests.With_ConfigRepository::Should_read_config_and_get_Hosts()">Should_read_config_and_get_Hosts()</td><td>3</td><td>100</td><td>50</td></tr>
<tr><td title="System.Void SqlToGraphite.UnitTests.With_ConfigRepository::Should_not_validate_because_templates_are_not_defined()">Should_not_validate_because_templates_are_not_defined()</td><td>3</td><td>100</td><td>50</td></tr>
<tr><td title="System.Void SqlToGraphite.UnitTests.With_ConfigRepository::Should_not_validate_because_hosts_are_not_defined()">Should_not_validate_because_hosts_are_not_defined()</td><td>3</td><td>100</td><td>50</td></tr>
<tr><td title="System.Void SqlToGraphite.UnitTests.With_ConfigRepository::Should_not_validate_because_clients_are_not_defined()">Should_not_validate_because_clients_are_not_defined()</td><td>3</td><td>100</td><td>50</td></tr>
<tr><td title="System.Void SqlToGraphite.UnitTests.With_ConfigRepository::Should_remove_job_from_role_with_same_frequency()">Should_remove_job_from_role_with_same_frequency()</td><td>3</td><td>100</td><td>50</td></tr>
<tr><td title="System.Void SqlToGraphite.UnitTests.With_ConfigRepository::Should_remove_frequency_from_role()">Should_remove_frequency_from_role()</td><td>3</td><td>100</td><td>50</td></tr>
<tr><td title="System.Void SqlToGraphite.UnitTests.With_ConfigRepository::Should_not_remove_unknown_frequency_from_role()">Should_not_remove_unknown_frequency_from_role()</td><td>3</td><td>100</td><td>50</td></tr>
<tr><td title="System.Void SqlToGraphite.UnitTests.With_ConfigRepository::Should_remove_role()">Should_remove_role()</td><td>3</td><td>100</td><td>50</td></tr>
<tr><td title="System.Void SqlToGraphite.UnitTests.With_ConfigRepository::Should_add_role_frequency()">Should_add_role_frequency()</td><td>3</td><td>100</td><td>50</td></tr>
<tr><td title="System.Void SqlToGraphite.UnitTests.With_ConfigRepository::Should_add_new_role()">Should_add_new_role()</td><td>3</td><td>100</td><td>50</td></tr>
<tr><td title="System.Void SqlToGraphite.UnitTests.With_ConfigRepository::Should_delete_host()">Should_delete_host()</td><td>3</td><td>100</td><td>50</td></tr>
<tr><td title="System.Void SqlToGraphite.UnitTests.With_ConfigRepository::Should_add_role_to_host()">Should_add_role_to_host()</td><td>3</td><td>100</td><td>50</td></tr>
<tr><td title="System.Void SqlToGraphite.UnitTests.With_ConfigRepository::Should_delete_role_from_host()">Should_delete_role_from_host()</td><td>3</td><td>100</td><td>50</td></tr>
<tr><td title="System.Void SqlToGraphite.UnitTests.With_ConfigRepository::Should_throw_exception_trying_delete_role_from_host_where_host_does_not_exsist()">Should_throw_exception_trying_delete_role_from_host_where_host_does_not_exsist()</td><td>3</td><td>100</td><td>50</td></tr>
<tr><td title="System.Void SqlToGraphite.UnitTests.With_ConfigRepository::Should_throw_exception_trying_delete_role_from_host_where_role_does_not_exsist()">Should_throw_exception_trying_delete_role_from_host_where_role_does_not_exsist()</td><td>3</td><td>100</td><td>50</td></tr>
<tr><td title="System.Void SqlToGraphite.UnitTests.With_ConfigRepository::Should_throw_exception_if_host_not_found_tring_to_add_role_to_host()">Should_throw_exception_if_host_not_found_tring_to_add_role_to_host()</td><td>3</td><td>100</td><td>50</td></tr>
<tr><td title="System.Void SqlToGraphite.UnitTests.With_ConfigRepository::Should_throw_exception_if_host_not_found()">Should_throw_exception_if_host_not_found()</td><td>3</td><td>100</td><td>50</td></tr>
<tr><td title="System.Collections.Generic.List`1&lt;SqlToGraphite.Config.Host&gt; SqlToGraphite.UnitTests.With_ConfigRepository::CreateTwoHosts()">CreateTwoHosts()</td><td>1</td><td>100</td><td>100</td></tr>
<tr><td title="System.Void SqlToGraphite.UnitTests.With_ConfigRepository::Should_throw_job_not_found_exception()">Should_throw_job_not_found_exception()</td><td>3</td><td>100</td><td>50</td></tr>
<tr><td title="SqlToGraphite.Config.Template SqlToGraphite.UnitTests.With_ConfigRepository::CreateSingleRoleAndJob(System.String,System.Int32,System.String)">CreateSingleRoleAndJob(...)</td><td>1</td><td>100</td><td>100</td></tr>
<tr><td title="SqlToGraphite.Config.Template SqlToGraphite.UnitTests.With_ConfigRepository::CreateMultipoleRolesAndJobs(System.String,System.String,System.Int32,System.Int32,System.String)">CreateMultipoleRolesAndJobs(...)</td><td>1</td><td>100</td><td>100</td></tr>
<tr><td title="System.Void SqlToGraphite.UnitTests.With_ConfigRepository::Should_validate_sucessfully()">Should_validate_sucessfully()</td><td>3</td><td>100</td><td>50</td></tr>
<tr><td title="System.Void SqlToGraphite.UnitTests.With_ConfigRepository::Should_return_failed_to_load_config_error()">Should_return_failed_to_load_config_error()</td><td>4</td><td>100</td><td>50</td></tr>
</table>
<h1>File(s)</h1>
<h2 id="CgitperryOfPeekSqlToGraphitetestSqlToGraphiteUnitTestsWith_ConfigRepositorycs">C:\git\perryOfPeek\SqlToGraphite\test\SqlToGraphite.UnitTests\With_ConfigRepository.cs</h2>
<table>
<tr><th></th><th>#</th><th>Line</th><th>Coverage</th></tr>
<tr><td class="gray">&nbsp;</td><td class="leftmargin right"></td><td class="right"><code>1</code></td><td class="light"><code>using&nbsp;System;</code></td></tr>
<tr><td class="gray">&nbsp;</td><td class="leftmargin right"></td><td class="right"><code>2</code></td><td class="light"><code>using&nbsp;System.Collections.Generic;</code></td></tr>
<tr><td class="gray">&nbsp;</td><td class="leftmargin right"></td><td class="right"><code>3</code></td><td class="light"><code></code></td></tr>
<tr><td class="gray">&nbsp;</td><td class="leftmargin right"></td><td class="right"><code>4</code></td><td class="light"><code>using&nbsp;log4net;</code></td></tr>
<tr><td class="gray">&nbsp;</td><td class="leftmargin right"></td><td class="right"><code>5</code></td><td class="light"><code>using&nbsp;NUnit.Framework;</code></td></tr>
<tr><td class="gray">&nbsp;</td><td class="leftmargin right"></td><td class="right"><code>6</code></td><td class="light"><code>using&nbsp;Rhino.Mocks;</code></td></tr>
<tr><td class="gray">&nbsp;</td><td class="leftmargin right"></td><td class="right"><code>7</code></td><td class="light"><code>using&nbsp;SqlToGraphite.Conf;</code></td></tr>
<tr><td class="gray">&nbsp;</td><td class="leftmargin right"></td><td class="right"><code>8</code></td><td class="light"><code>using&nbsp;SqlToGraphite.Config;</code></td></tr>
<tr><td class="gray">&nbsp;</td><td class="leftmargin right"></td><td class="right"><code>9</code></td><td class="light"><code>using&nbsp;SqlToGraphite.Plugin.SqlServer;</code></td></tr>
<tr><td class="gray">&nbsp;</td><td class="leftmargin right"></td><td class="right"><code>10</code></td><td class="light"><code></code></td></tr>
<tr><td class="gray">&nbsp;</td><td class="leftmargin right"></td><td class="right"><code>11</code></td><td class="light"><code>namespace&nbsp;SqlToGraphite.UnitTests</code></td></tr>
<tr><td class="gray">&nbsp;</td><td class="leftmargin right"></td><td class="right"><code>12</code></td><td class="light"><code>{</code></td></tr>
<tr><td class="gray">&nbsp;</td><td class="leftmargin right"></td><td class="right"><code>13</code></td><td class="light"><code>&nbsp;&nbsp;&nbsp;&nbsp;//&nbsp;ReSharper&nbsp;disable&nbsp;InconsistentNaming</code></td></tr>
<tr><td class="gray">&nbsp;</td><td class="leftmargin right"></td><td class="right"><code>14</code></td><td class="light"><code>&nbsp;&nbsp;&nbsp;&nbsp;[TestFixture]</code></td></tr>
<tr><td class="gray">&nbsp;</td><td class="leftmargin right"></td><td class="right"><code>15</code></td><td class="light"><code>&nbsp;&nbsp;&nbsp;&nbsp;public&nbsp;class&nbsp;With_ConfigRepository</code></td></tr>
<tr><td class="gray">&nbsp;</td><td class="leftmargin right"></td><td class="right"><code>16</code></td><td class="light"><code>&nbsp;&nbsp;&nbsp;&nbsp;{</code></td></tr>
<tr><td class="gray">&nbsp;</td><td class="leftmargin right"></td><td class="right"><code>17</code></td><td class="light"><code>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;private&nbsp;const&nbsp;string&nbsp;End&nbsp;=&nbsp;&quot;&lt;/SqlToGraphiteConfig&gt;&quot;;</code></td></tr>
<tr><td class="gray">&nbsp;</td><td class="leftmargin right"></td><td class="right"><code>18</code></td><td class="light"><code>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;private&nbsp;const&nbsp;string&nbsp;Blank&nbsp;=&nbsp;&quot;&lt;?xml&nbsp;version=&#39;1.0&#39;&nbsp;encoding=&#39;utf-8&#39;?&gt;&lt;SqlToGraphiteConfig&gt;&lt;/SqlToGraphiteConfig&gt;&quot;</code></td></tr>
<tr><td class="gray">&nbsp;</td><td class="leftmargin right"></td><td class="right"><code>19</code></td><td class="light"><code>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;private&nbsp;const&nbsp;string&nbsp;TwoHosts&nbsp;=&nbsp;&quot;&lt;hosts&gt;&lt;host&nbsp;name=&#39;DEFAULT&#39;&gt;&lt;role&nbsp;name=&#39;Default&#39;/&gt;&lt;role&nbsp;name=&#39;Default&#39;/&gt;&lt;/host&gt;</code></td></tr>
<tr><td class="gray">&nbsp;</td><td class="leftmargin right"></td><td class="right"><code>20</code></td><td class="light"><code>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;private&nbsp;const&nbsp;string&nbsp;TwoClients&nbsp;=&nbsp;&quot;&lt;Clients&gt;&lt;Client&nbsp;name=&#39;statsdUdp&#39;&nbsp;port=&#39;1234&#39;&nbsp;/&gt;&lt;Client&nbsp;name=&#39;graphitetcp&#39;&nbsp;po</code></td></tr>
<tr><td class="gray">&nbsp;</td><td class="leftmargin right"></td><td class="right"><code>21</code></td><td class="light"><code>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;private&nbsp;const&nbsp;string&nbsp;UnknownClient&nbsp;=&nbsp;&quot;&lt;Clients&gt;&lt;Client&nbsp;name=&#39;notknown&#39;&nbsp;port=&#39;1234&#39;&nbsp;/&gt;&lt;Client&nbsp;name=&#39;graphitetcp&#39;&nbsp;</code></td></tr>
<tr><td class="gray">&nbsp;</td><td class="leftmargin right"></td><td class="right"><code>22</code></td><td class="light"><code>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;private&nbsp;const&nbsp;string&nbsp;Templates&nbsp;=&nbsp;&quot;&nbsp;&lt;templates&gt;&lt;WorkItems&nbsp;Role=&#39;Default&#39;&nbsp;&gt;&lt;TaskSet&nbsp;frequency=&#39;1000&#39;&gt;&lt;Task&nbsp;&nbsp;path=&#39;</code></td></tr>
<tr><td class="gray">&nbsp;</td><td class="leftmargin right"></td><td class="right"><code>23</code></td><td class="light"><code></code></td></tr>
<tr><td class="gray">&nbsp;</td><td class="leftmargin right"></td><td class="right"><code>24</code></td><td class="light"><code>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;private&nbsp;IConfigReader&nbsp;reader;</code></td></tr>
<tr><td class="gray">&nbsp;</td><td class="leftmargin right"></td><td class="right"><code>25</code></td><td class="light"><code>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;private&nbsp;ICache&nbsp;cache;</code></td></tr>
<tr><td class="gray">&nbsp;</td><td class="leftmargin right"></td><td class="right"><code>26</code></td><td class="light"><code>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;private&nbsp;ISleep&nbsp;sleep;</code></td></tr>
<tr><td class="gray">&nbsp;</td><td class="leftmargin right"></td><td class="right"><code>27</code></td><td class="light"><code>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;private&nbsp;ILog&nbsp;log;</code></td></tr>
<tr><td class="gray">&nbsp;</td><td class="leftmargin right"></td><td class="right"><code>28</code></td><td class="light"><code>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;private&nbsp;ConfigRepository&nbsp;repository;</code></td></tr>
<tr><td class="gray">&nbsp;</td><td class="leftmargin right"></td><td class="right"><code>29</code></td><td class="light"><code>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;private&nbsp;IConfigPersister&nbsp;configPersister;</code></td></tr>
<tr><td class="gray">&nbsp;</td><td class="leftmargin right"></td><td class="right"><code>30</code></td><td class="light"><code></code></td></tr>
<tr><td class="gray">&nbsp;</td><td class="leftmargin right"></td><td class="right"><code>31</code></td><td class="light"><code>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;private&nbsp;int&nbsp;sleepTime;</code></td></tr>
<tr><td class="gray">&nbsp;</td><td class="leftmargin right"></td><td class="right"><code>32</code></td><td class="light"><code></code></td></tr>
<tr><td class="gray">&nbsp;</td><td class="leftmargin right"></td><td class="right"><code>33</code></td><td class="light"><code>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;private&nbsp;IGenericSerializer&nbsp;genericSerializer;</code></td></tr>
<tr><td class="gray">&nbsp;</td><td class="leftmargin right"></td><td class="right"><code>34</code></td><td class="light"><code></code></td></tr>
<tr><td class="gray">&nbsp;</td><td class="leftmargin right"></td><td class="right"><code>35</code></td><td class="light"><code>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;private&nbsp;SqlToGraphiteConfig&nbsp;config;</code></td></tr>
<tr><td class="gray">&nbsp;</td><td class="leftmargin right"></td><td class="right"><code>36</code></td><td class="light"><code></code></td></tr>
<tr><td class="gray">&nbsp;</td><td class="leftmargin right"></td><td class="right"><code>37</code></td><td class="light"><code>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;private&nbsp;IAssemblyResolver&nbsp;assemblyResolver;</code></td></tr>
<tr><td class="gray">&nbsp;</td><td class="leftmargin right"></td><td class="right"><code>38</code></td><td class="light"><code></code></td></tr>
<tr><td class="gray">&nbsp;</td><td class="leftmargin right"></td><td class="right"><code>39</code></td><td class="light"><code>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;[SetUp]</code></td></tr>
<tr><td class="gray">&nbsp;</td><td class="leftmargin right"></td><td class="right"><code>40</code></td><td class="light"><code>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;public&nbsp;void&nbsp;SetUp()</code></td></tr>
<tr><td class="green">&nbsp;</td><td class="leftmargin right">34</td><td class="right"><code>41</code></td><td><code>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;{</code></td></tr>
<tr><td class="green">&nbsp;</td><td class="leftmargin right">34</td><td class="right"><code>42</code></td><td><code>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;sleepTime&nbsp;=&nbsp;1000;</code></td></tr>
<tr><td class="green">&nbsp;</td><td class="leftmargin right">34</td><td class="right"><code>43</code></td><td><code>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;assemblyResolver&nbsp;=&nbsp;MockRepository.GenerateMock&lt;IAssemblyResolver&gt;();</code></td></tr>
<tr><td class="green">&nbsp;</td><td class="leftmargin right">34</td><td class="right"><code>44</code></td><td><code>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;config&nbsp;=&nbsp;new&nbsp;SqlToGraphiteConfig(assemblyResolver);</code></td></tr>
<tr><td class="green">&nbsp;</td><td class="leftmargin right">34</td><td class="right"><code>45</code></td><td><code>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;reader&nbsp;=&nbsp;MockRepository.GenerateMock&lt;IConfigReader&gt;();</code></td></tr>
<tr><td class="green">&nbsp;</td><td class="leftmargin right">34</td><td class="right"><code>46</code></td><td><code>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;cache&nbsp;=&nbsp;MockRepository.GenerateMock&lt;ICache&gt;();</code></td></tr>
<tr><td class="green">&nbsp;</td><td class="leftmargin right">34</td><td class="right"><code>47</code></td><td><code>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;sleep&nbsp;=&nbsp;MockRepository.GenerateMock&lt;ISleep&gt;();</code></td></tr>
<tr><td class="green">&nbsp;</td><td class="leftmargin right">34</td><td class="right"><code>48</code></td><td><code>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;log&nbsp;=&nbsp;MockRepository.GenerateMock&lt;ILog&gt;();</code></td></tr>
<tr><td class="green">&nbsp;</td><td class="leftmargin right">34</td><td class="right"><code>49</code></td><td><code>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;configPersister&nbsp;=&nbsp;MockRepository.GenerateMock&lt;IConfigPersister&gt;();</code></td></tr>
<tr><td class="green">&nbsp;</td><td class="leftmargin right">34</td><td class="right"><code>50</code></td><td><code>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;genericSerializer&nbsp;=&nbsp;MockRepository.GenerateMock&lt;IGenericSerializer&gt;();</code></td></tr>
<tr><td class="green">&nbsp;</td><td class="leftmargin right">34</td><td class="right"><code>51</code></td><td><code>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;repository&nbsp;=&nbsp;new&nbsp;ConfigRepository(this.reader,&nbsp;this.cache,&nbsp;this.sleep,&nbsp;this.log,&nbsp;this.sleepTime,&nbsp;this.config</code></td></tr>
<tr><td class="green">&nbsp;</td><td class="leftmargin right">34</td><td class="right"><code>52</code></td><td><code>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;}</code></td></tr>
<tr><td class="gray">&nbsp;</td><td class="leftmargin right"></td><td class="right"><code>53</code></td><td class="light"><code></code></td></tr>
<tr><td class="gray">&nbsp;</td><td class="leftmargin right"></td><td class="right"><code>54</code></td><td class="light"><code>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;private&nbsp;string&nbsp;Add(string&nbsp;input,&nbsp;string&nbsp;data)</code></td></tr>
<tr><td class="green">&nbsp;</td><td class="leftmargin right">32</td><td class="right"><code>55</code></td><td><code>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;{</code></td></tr>
<tr><td class="green">&nbsp;</td><td class="leftmargin right">32</td><td class="right"><code>56</code></td><td><code>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;return&nbsp;input.Replace(End,&nbsp;string.Format(&quot;{0}{1}&quot;,&nbsp;data,&nbsp;End));</code></td></tr>
<tr><td class="green">&nbsp;</td><td class="leftmargin right">32</td><td class="right"><code>57</code></td><td><code>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;}</code></td></tr>
<tr><td class="gray">&nbsp;</td><td class="leftmargin right"></td><td class="right"><code>58</code></td><td class="light"><code></code></td></tr>
<tr><td class="gray">&nbsp;</td><td class="leftmargin right"></td><td class="right"><code>59</code></td><td class="light"><code>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;[Test]</code></td></tr>
<tr><td class="gray">&nbsp;</td><td class="leftmargin right"></td><td class="right"><code>60</code></td><td class="light"><code>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;public&nbsp;void&nbsp;Should_save_config()</code></td></tr>
<tr><td class="green">&nbsp;</td><td class="leftmargin right">1</td><td class="right"><code>61</code></td><td><code>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;{</code></td></tr>
<tr><td class="green">&nbsp;</td><td class="leftmargin right">1</td><td class="right"><code>62</code></td><td><code>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;var&nbsp;configXml&nbsp;=&nbsp;this.Add(Blank,&nbsp;TwoClients);</code></td></tr>
<tr><td class="green">&nbsp;</td><td class="leftmargin right">2</td><td class="right"><code>63</code></td><td><code>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;cache.Expect(x&nbsp;=&gt;&nbsp;x.HasExpired()).Return(true).Repeat.Once();</code></td></tr>
<tr><td class="green">&nbsp;</td><td class="leftmargin right">2</td><td class="right"><code>64</code></td><td><code>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;reader.Expect(x&nbsp;=&gt;&nbsp;x.GetXml()).Return(configXml);</code></td></tr>
<tr><td class="green">&nbsp;</td><td class="leftmargin right">1</td><td class="right"><code>65</code></td><td><code>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;this.AddTwoClientsToConfig();</code></td></tr>
<tr><td class="green">&nbsp;</td><td class="leftmargin right">2</td><td class="right"><code>66</code></td><td><code>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;genericSerializer.Expect(x&nbsp;=&gt;&nbsp;x.Deserialize&lt;SqlToGraphiteConfig&gt;(configXml)).Return(config);</code></td></tr>
<tr><td class="green">&nbsp;</td><td class="leftmargin right">2</td><td class="right"><code>67</code></td><td><code>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;configPersister.Expect(x&nbsp;=&gt;&nbsp;x.Save(config));</code></td></tr>
<tr><td class="green">&nbsp;</td><td class="leftmargin right">1</td><td class="right"><code>68</code></td><td><code>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;repository.Load();</code></td></tr>
<tr><td class="gray">&nbsp;</td><td class="leftmargin right"></td><td class="right"><code>69</code></td><td class="light"><code>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;//Act</code></td></tr>
<tr><td class="green">&nbsp;</td><td class="leftmargin right">1</td><td class="right"><code>70</code></td><td><code>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;repository.Save();</code></td></tr>
<tr><td class="gray">&nbsp;</td><td class="leftmargin right"></td><td class="right"><code>71</code></td><td class="light"><code>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;//Assert.</code></td></tr>
<tr><td class="green">&nbsp;</td><td class="leftmargin right">1</td><td class="right"><code>72</code></td><td><code>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;configPersister.VerifyAllExpectations();</code></td></tr>
<tr><td class="green">&nbsp;</td><td class="leftmargin right">1</td><td class="right"><code>73</code></td><td><code>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;genericSerializer.VerifyAllExpectations();</code></td></tr>
<tr><td class="green">&nbsp;</td><td class="leftmargin right">1</td><td class="right"><code>74</code></td><td><code>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;}</code></td></tr>
<tr><td class="gray">&nbsp;</td><td class="leftmargin right"></td><td class="right"><code>75</code></td><td class="light"><code></code></td></tr>
<tr><td class="gray">&nbsp;</td><td class="leftmargin right"></td><td class="right"><code>76</code></td><td class="light"><code>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;[Test]</code></td></tr>
<tr><td class="gray">&nbsp;</td><td class="leftmargin right"></td><td class="right"><code>77</code></td><td class="light"><code>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;public&nbsp;void&nbsp;Should_read_config_and_get_clients()</code></td></tr>
<tr><td class="green">&nbsp;</td><td class="leftmargin right">1</td><td class="right"><code>78</code></td><td><code>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;{</code></td></tr>
<tr><td class="green">&nbsp;</td><td class="leftmargin right">1</td><td class="right"><code>79</code></td><td><code>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;var&nbsp;configXml&nbsp;=&nbsp;this.Add(Blank,&nbsp;TwoClients);</code></td></tr>
<tr><td class="green">&nbsp;</td><td class="leftmargin right">1</td><td class="right"><code>80</code></td><td><code>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;this.AddTwoClientsToConfig();</code></td></tr>
<tr><td class="green">&nbsp;</td><td class="leftmargin right">2</td><td class="right"><code>81</code></td><td><code>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;genericSerializer.Expect(x&nbsp;=&gt;&nbsp;x.Deserialize&lt;SqlToGraphiteConfig&gt;(configXml)).Return(config);</code></td></tr>
<tr><td class="green">&nbsp;</td><td class="leftmargin right">2</td><td class="right"><code>82</code></td><td><code>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;reader.Expect(x&nbsp;=&gt;&nbsp;x.GetXml()).Return(configXml);</code></td></tr>
<tr><td class="green">&nbsp;</td><td class="leftmargin right">2</td><td class="right"><code>83</code></td><td><code>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;cache.Expect(x&nbsp;=&gt;&nbsp;x.HasExpired()).Return(true).Repeat.Once();</code></td></tr>
<tr><td class="green">&nbsp;</td><td class="leftmargin right">2</td><td class="right"><code>84</code></td><td><code>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;cache.Expect(x&nbsp;=&gt;&nbsp;x.ResetCache()).Repeat.Once();</code></td></tr>
<tr><td class="green">&nbsp;</td><td class="leftmargin right">1</td><td class="right"><code>85</code></td><td><code>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;repository.Load();</code></td></tr>
<tr><td class="green">&nbsp;</td><td class="leftmargin right">1</td><td class="right"><code>86</code></td><td><code>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;Assert.That(repository.GetClients().Count,&nbsp;Is.EqualTo(2));</code></td></tr>
<tr><td class="green">&nbsp;</td><td class="leftmargin right">1</td><td class="right"><code>87</code></td><td><code>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;reader.VerifyAllExpectations();</code></td></tr>
<tr><td class="green">&nbsp;</td><td class="leftmargin right">1</td><td class="right"><code>88</code></td><td><code>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;cache.VerifyAllExpectations();</code></td></tr>
<tr><td class="green">&nbsp;</td><td class="leftmargin right">1</td><td class="right"><code>89</code></td><td><code>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;genericSerializer.VerifyAllExpectations();</code></td></tr>
<tr><td class="green">&nbsp;</td><td class="leftmargin right">1</td><td class="right"><code>90</code></td><td><code>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;}</code></td></tr>
<tr><td class="gray">&nbsp;</td><td class="leftmargin right"></td><td class="right"><code>91</code></td><td class="light"><code></code></td></tr>
<tr><td class="gray">&nbsp;</td><td class="leftmargin right"></td><td class="right"><code>92</code></td><td class="light"><code>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;[Test]</code></td></tr>
<tr><td class="gray">&nbsp;</td><td class="leftmargin right"></td><td class="right"><code>93</code></td><td class="light"><code>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;public&nbsp;void&nbsp;Should_retry_to_read_config_on_getting_error()</code></td></tr>
<tr><td class="green">&nbsp;</td><td class="leftmargin right">1</td><td class="right"><code>94</code></td><td><code>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;{</code></td></tr>
<tr><td class="green">&nbsp;</td><td class="leftmargin right">1</td><td class="right"><code>95</code></td><td><code>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;var&nbsp;configXml&nbsp;=&nbsp;this.Add(Blank,&nbsp;TwoClients);</code></td></tr>
<tr><td class="green">&nbsp;</td><td class="leftmargin right">1</td><td class="right"><code>96</code></td><td><code>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;this.AddTwoClientsToConfig();</code></td></tr>
<tr><td class="green">&nbsp;</td><td class="leftmargin right">2</td><td class="right"><code>97</code></td><td><code>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;genericSerializer.Expect(x&nbsp;=&gt;&nbsp;x.Deserialize&lt;SqlToGraphiteConfig&gt;(configXml)).Return(config);</code></td></tr>
<tr><td class="green">&nbsp;</td><td class="leftmargin right">2</td><td class="right"><code>98</code></td><td><code>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;reader.Expect(x&nbsp;=&gt;&nbsp;x.GetXml()).Throw(new&nbsp;ApplicationException()).Repeat.Once();</code></td></tr>
<tr><td class="green">&nbsp;</td><td class="leftmargin right">2</td><td class="right"><code>99</code></td><td><code>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;reader.Expect(x&nbsp;=&gt;&nbsp;x.GetXml()).Return(configXml).Repeat.Once();</code></td></tr>
<tr><td class="green">&nbsp;</td><td class="leftmargin right">2</td><td class="right"><code>100</code></td><td><code>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;cache.Expect(x&nbsp;=&gt;&nbsp;x.HasExpired()).Return(true).Repeat.Once();</code></td></tr>
<tr><td class="green">&nbsp;</td><td class="leftmargin right">2</td><td class="right"><code>101</code></td><td><code>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;cache.Expect(x&nbsp;=&gt;&nbsp;x.ResetCache()).Repeat.Once();</code></td></tr>
<tr><td class="green">&nbsp;</td><td class="leftmargin right">2</td><td class="right"><code>102</code></td><td><code>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;sleep.Expect(x&nbsp;=&gt;&nbsp;x.Sleep(sleepTime));</code></td></tr>
<tr><td class="green">&nbsp;</td><td class="leftmargin right">1</td><td class="right"><code>103</code></td><td><code>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;repository.Load();</code></td></tr>
<tr><td class="green">&nbsp;</td><td class="leftmargin right">1</td><td class="right"><code>104</code></td><td><code>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;Assert.That(repository.GetClients().Count,&nbsp;Is.EqualTo(2));</code></td></tr>
<tr><td class="green">&nbsp;</td><td class="leftmargin right">1</td><td class="right"><code>105</code></td><td><code>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;reader.VerifyAllExpectations();</code></td></tr>
<tr><td class="green">&nbsp;</td><td class="leftmargin right">1</td><td class="right"><code>106</code></td><td><code>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;cache.VerifyAllExpectations();</code></td></tr>
<tr><td class="green">&nbsp;</td><td class="leftmargin right">1</td><td class="right"><code>107</code></td><td><code>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;sleep.VerifyAllExpectations();</code></td></tr>
<tr><td class="green">&nbsp;</td><td class="leftmargin right">1</td><td class="right"><code>108</code></td><td><code>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;genericSerializer.VerifyAllExpectations();</code></td></tr>
<tr><td class="green">&nbsp;</td><td class="leftmargin right">1</td><td class="right"><code>109</code></td><td><code>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;}</code></td></tr>
<tr><td class="gray">&nbsp;</td><td class="leftmargin right"></td><td class="right"><code>110</code></td><td class="light"><code></code></td></tr>
<tr><td class="gray">&nbsp;</td><td class="leftmargin right"></td><td class="right"><code>111</code></td><td class="light"><code>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;[Test]</code></td></tr>
<tr><td class="gray">&nbsp;</td><td class="leftmargin right"></td><td class="right"><code>112</code></td><td class="light"><code>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;public&nbsp;void&nbsp;Should_load_config_and_get_clients()</code></td></tr>
<tr><td class="green">&nbsp;</td><td class="leftmargin right">1</td><td class="right"><code>113</code></td><td><code>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;{</code></td></tr>
<tr><td class="green">&nbsp;</td><td class="leftmargin right">1</td><td class="right"><code>114</code></td><td><code>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;this.AddTwoClientsToConfig();</code></td></tr>
<tr><td class="green">&nbsp;</td><td class="leftmargin right">1</td><td class="right"><code>115</code></td><td><code>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;string&nbsp;configXml&nbsp;=&nbsp;this.Add(Blank,&nbsp;TwoClients);</code></td></tr>
<tr><td class="green">&nbsp;</td><td class="leftmargin right">2</td><td class="right"><code>116</code></td><td><code>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;genericSerializer.Expect(x&nbsp;=&gt;&nbsp;x.Deserialize&lt;SqlToGraphiteConfig&gt;(configXml)).Return(config);</code></td></tr>
<tr><td class="green">&nbsp;</td><td class="leftmargin right">2</td><td class="right"><code>117</code></td><td><code>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;reader.Expect(x&nbsp;=&gt;&nbsp;x.GetXml()).Return(configXml);</code></td></tr>
<tr><td class="green">&nbsp;</td><td class="leftmargin right">2</td><td class="right"><code>118</code></td><td><code>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;cache.Expect(x&nbsp;=&gt;&nbsp;x.HasExpired()).Return(true).Repeat.Once();</code></td></tr>
<tr><td class="green">&nbsp;</td><td class="leftmargin right">1</td><td class="right"><code>119</code></td><td><code>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;repository.Load();</code></td></tr>
<tr><td class="green">&nbsp;</td><td class="leftmargin right">1</td><td class="right"><code>120</code></td><td><code>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;Assert.That(repository.GetClients().Count,&nbsp;Is.EqualTo(2));</code></td></tr>
<tr><td class="green">&nbsp;</td><td class="leftmargin right">1</td><td class="right"><code>121</code></td><td><code>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;reader.VerifyAllExpectations();</code></td></tr>
<tr><td class="green">&nbsp;</td><td class="leftmargin right">1</td><td class="right"><code>122</code></td><td><code>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;cache.VerifyAllExpectations();</code></td></tr>
<tr><td class="green">&nbsp;</td><td class="leftmargin right">1</td><td class="right"><code>123</code></td><td><code>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;}</code></td></tr>
<tr><td class="gray">&nbsp;</td><td class="leftmargin right"></td><td class="right"><code>124</code></td><td class="light"><code></code></td></tr>
<tr><td class="gray">&nbsp;</td><td class="leftmargin right"></td><td class="right"><code>125</code></td><td class="light"><code>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;private&nbsp;void&nbsp;AddTwoClientsToConfig()</code></td></tr>
<tr><td class="green">&nbsp;</td><td class="leftmargin right">6</td><td class="right"><code>126</code></td><td><code>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;{</code></td></tr>
<tr><td class="green">&nbsp;</td><td class="leftmargin right">6</td><td class="right"><code>127</code></td><td><code>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;var&nbsp;c1&nbsp;=&nbsp;new&nbsp;GraphiteTcpClient&nbsp;{&nbsp;ClientName&nbsp;=&nbsp;&quot;ClientName&quot;&nbsp;};</code></td></tr>
<tr><td class="green">&nbsp;</td><td class="leftmargin right">6</td><td class="right"><code>128</code></td><td><code>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;this.config.Clients.Add(c1);</code></td></tr>
<tr><td class="green">&nbsp;</td><td class="leftmargin right">6</td><td class="right"><code>129</code></td><td><code>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;this.config.Clients.Add(new&nbsp;GraphiteUdpClient());</code></td></tr>
<tr><td class="green">&nbsp;</td><td class="leftmargin right">6</td><td class="right"><code>130</code></td><td><code>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;}</code></td></tr>
<tr><td class="gray">&nbsp;</td><td class="leftmargin right"></td><td class="right"><code>131</code></td><td class="light"><code></code></td></tr>
<tr><td class="gray">&nbsp;</td><td class="leftmargin right"></td><td class="right"><code>132</code></td><td class="light"><code>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;[Test]</code></td></tr>
<tr><td class="gray">&nbsp;</td><td class="leftmargin right"></td><td class="right"><code>133</code></td><td class="light"><code>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;public&nbsp;void&nbsp;Should_add_clients()</code></td></tr>
<tr><td class="green">&nbsp;</td><td class="leftmargin right">1</td><td class="right"><code>134</code></td><td><code>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;{</code></td></tr>
<tr><td class="green">&nbsp;</td><td class="leftmargin right">1</td><td class="right"><code>135</code></td><td><code>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;repository.AddClient(new&nbsp;GraphiteTcpClient&nbsp;{&nbsp;ClientName&nbsp;=&nbsp;&quot;abc&quot;,&nbsp;Port&nbsp;=&nbsp;123&nbsp;});</code></td></tr>
<tr><td class="green">&nbsp;</td><td class="leftmargin right">1</td><td class="right"><code>136</code></td><td><code>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;var&nbsp;clients&nbsp;=&nbsp;repository.GetClients();</code></td></tr>
<tr><td class="green">&nbsp;</td><td class="leftmargin right">1</td><td class="right"><code>137</code></td><td><code>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;Assert.That(clients.Count,&nbsp;Is.EqualTo(1));</code></td></tr>
<tr><td class="green">&nbsp;</td><td class="leftmargin right">1</td><td class="right"><code>138</code></td><td><code>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;}</code></td></tr>
<tr><td class="gray">&nbsp;</td><td class="leftmargin right"></td><td class="right"><code>139</code></td><td class="light"><code></code></td></tr>
<tr><td class="gray">&nbsp;</td><td class="leftmargin right"></td><td class="right"><code>140</code></td><td class="light"><code>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;[Test]</code></td></tr>
<tr><td class="gray">&nbsp;</td><td class="leftmargin right"></td><td class="right"><code>141</code></td><td class="light"><code>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;public&nbsp;void&nbsp;Should_add_host()</code></td></tr>
<tr><td class="green">&nbsp;</td><td class="leftmargin right">1</td><td class="right"><code>142</code></td><td><code>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;{</code></td></tr>
<tr><td class="green">&nbsp;</td><td class="leftmargin right">1</td><td class="right"><code>143</code></td><td><code>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;var&nbsp;role1&nbsp;=&nbsp;&quot;a1&quot;;</code></td></tr>
<tr><td class="green">&nbsp;</td><td class="leftmargin right">1</td><td class="right"><code>144</code></td><td><code>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;var&nbsp;role2&nbsp;=&nbsp;&quot;a2&quot;;</code></td></tr>
<tr><td class="gray">&nbsp;</td><td class="leftmargin right"></td><td class="right"><code>145</code></td><td class="light"><code></code></td></tr>
<tr><td class="green">&nbsp;</td><td class="leftmargin right">1</td><td class="right"><code>146</code></td><td><code>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;var&nbsp;name&nbsp;=&nbsp;Guid.NewGuid().ToString();</code></td></tr>
<tr><td class="green">&nbsp;</td><td class="leftmargin right">1</td><td class="right"><code>147</code></td><td><code>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;var&nbsp;roles&nbsp;=&nbsp;new&nbsp;List&lt;Role&gt;&nbsp;{&nbsp;new&nbsp;Role()&nbsp;{&nbsp;Name&nbsp;=&nbsp;role1&nbsp;},&nbsp;new&nbsp;Role()&nbsp;{&nbsp;Name&nbsp;=&nbsp;role2&nbsp;}&nbsp;};</code></td></tr>
<tr><td class="gray">&nbsp;</td><td class="leftmargin right"></td><td class="right"><code>148</code></td><td class="light"><code>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;//Test</code></td></tr>
<tr><td class="green">&nbsp;</td><td class="leftmargin right">1</td><td class="right"><code>149</code></td><td><code>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;repository.AddHost(name,&nbsp;roles);</code></td></tr>
<tr><td class="gray">&nbsp;</td><td class="leftmargin right"></td><td class="right"><code>150</code></td><td class="light"><code>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;//Assert</code></td></tr>
<tr><td class="green">&nbsp;</td><td class="leftmargin right">1</td><td class="right"><code>151</code></td><td><code>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;var&nbsp;hosts&nbsp;=&nbsp;repository.GetHosts();</code></td></tr>
<tr><td class="green">&nbsp;</td><td class="leftmargin right">1</td><td class="right"><code>152</code></td><td><code>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;Assert.That(hosts.Count,&nbsp;Is.EqualTo(1));</code></td></tr>
<tr><td class="green">&nbsp;</td><td class="leftmargin right">1</td><td class="right"><code>153</code></td><td><code>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;Assert.That(hosts[0].Name,&nbsp;Is.EqualTo(name));</code></td></tr>
<tr><td class="green">&nbsp;</td><td class="leftmargin right">1</td><td class="right"><code>154</code></td><td><code>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;Assert.That(hosts[0].Roles[0].Name,&nbsp;Is.EqualTo(role1));</code></td></tr>
<tr><td class="green">&nbsp;</td><td class="leftmargin right">1</td><td class="right"><code>155</code></td><td><code>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;Assert.That(hosts[0].Roles[1].Name,&nbsp;Is.EqualTo(role2));</code></td></tr>
<tr><td class="green">&nbsp;</td><td class="leftmargin right">1</td><td class="right"><code>156</code></td><td><code>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;}</code></td></tr>
<tr><td class="gray">&nbsp;</td><td class="leftmargin right"></td><td class="right"><code>157</code></td><td class="light"><code></code></td></tr>
<tr><td class="gray">&nbsp;</td><td class="leftmargin right"></td><td class="right"><code>158</code></td><td class="light"><code>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;[Test]</code></td></tr>
<tr><td class="gray">&nbsp;</td><td class="leftmargin right"></td><td class="right"><code>159</code></td><td class="light"><code>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;public&nbsp;void&nbsp;AddNewJob()</code></td></tr>
<tr><td class="green">&nbsp;</td><td class="leftmargin right">1</td><td class="right"><code>160</code></td><td><code>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;{</code></td></tr>
<tr><td class="green">&nbsp;</td><td class="leftmargin right">1</td><td class="right"><code>161</code></td><td><code>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;var&nbsp;jobName&nbsp;=&nbsp;&quot;job1&quot;;</code></td></tr>
<tr><td class="green">&nbsp;</td><td class="leftmargin right">1</td><td class="right"><code>162</code></td><td><code>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;var&nbsp;job&nbsp;=&nbsp;new&nbsp;SqlServerClient();</code></td></tr>
<tr><td class="green">&nbsp;</td><td class="leftmargin right">1</td><td class="right"><code>163</code></td><td><code>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;job.Name&nbsp;=&nbsp;jobName;</code></td></tr>
<tr><td class="green">&nbsp;</td><td class="leftmargin right">1</td><td class="right"><code>164</code></td><td><code>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;job.ClientName&nbsp;=&nbsp;&quot;TcpGraphite&quot;;</code></td></tr>
<tr><td class="green">&nbsp;</td><td class="leftmargin right">1</td><td class="right"><code>165</code></td><td><code>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;repository.AddJob(job);</code></td></tr>
<tr><td class="green">&nbsp;</td><td class="leftmargin right">1</td><td class="right"><code>166</code></td><td><code>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;var&nbsp;jobs&nbsp;=&nbsp;repository.GetJobs();</code></td></tr>
<tr><td class="green">&nbsp;</td><td class="leftmargin right">1</td><td class="right"><code>167</code></td><td><code>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;Assert.That(jobs.Count,&nbsp;Is.EqualTo(1));</code></td></tr>
<tr><td class="green">&nbsp;</td><td class="leftmargin right">1</td><td class="right"><code>168</code></td><td><code>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;}</code></td></tr>
<tr><td class="gray">&nbsp;</td><td class="leftmargin right"></td><td class="right"><code>169</code></td><td class="light"><code></code></td></tr>
<tr><td class="gray">&nbsp;</td><td class="leftmargin right"></td><td class="right"><code>170</code></td><td class="light"><code>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;[Test]</code></td></tr>
<tr><td class="gray">&nbsp;</td><td class="leftmargin right"></td><td class="right"><code>171</code></td><td class="light"><code>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;public&nbsp;void&nbsp;Should_add_task_to_role()</code></td></tr>
<tr><td class="green">&nbsp;</td><td class="leftmargin right">1</td><td class="right"><code>172</code></td><td><code>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;{</code></td></tr>
<tr><td class="green">&nbsp;</td><td class="leftmargin right">1</td><td class="right"><code>173</code></td><td><code>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;var&nbsp;roleName&nbsp;=&nbsp;&quot;someRole&quot;;</code></td></tr>
<tr><td class="green">&nbsp;</td><td class="leftmargin right">1</td><td class="right"><code>174</code></td><td><code>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;var&nbsp;frequency&nbsp;=&nbsp;1000;</code></td></tr>
<tr><td class="green">&nbsp;</td><td class="leftmargin right">1</td><td class="right"><code>175</code></td><td><code>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;var&nbsp;jobName&nbsp;=&nbsp;&quot;jobName&quot;;</code></td></tr>
<tr><td class="green">&nbsp;</td><td class="leftmargin right">1</td><td class="right"><code>176</code></td><td><code>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;var&nbsp;t&nbsp;=&nbsp;new&nbsp;TaskDetails(roleName,&nbsp;frequency,&nbsp;jobName);</code></td></tr>
<tr><td class="gray">&nbsp;</td><td class="leftmargin right"></td><td class="right"><code>177</code></td><td class="light"><code></code></td></tr>
<tr><td class="gray">&nbsp;</td><td class="leftmargin right"></td><td class="right"><code>178</code></td><td class="light"><code>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;//Test</code></td></tr>
<tr><td class="green">&nbsp;</td><td class="leftmargin right">1</td><td class="right"><code>179</code></td><td><code>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;repository.AddTask(t);</code></td></tr>
<tr><td class="gray">&nbsp;</td><td class="leftmargin right"></td><td class="right"><code>180</code></td><td class="light"><code>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;//Assert</code></td></tr>
<tr><td class="green">&nbsp;</td><td class="leftmargin right">1</td><td class="right"><code>181</code></td><td><code>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;var&nbsp;templates&nbsp;=&nbsp;repository.GetTemplates();</code></td></tr>
<tr><td class="green">&nbsp;</td><td class="leftmargin right">1</td><td class="right"><code>182</code></td><td><code>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;Assert.That(templates.Count,&nbsp;Is.EqualTo(1));</code></td></tr>
<tr><td class="green">&nbsp;</td><td class="leftmargin right">1</td><td class="right"><code>183</code></td><td><code>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;Assert.That(templates[0].WorkItems[0].RoleName,&nbsp;Is.EqualTo(t.Role));</code></td></tr>
<tr><td class="green">&nbsp;</td><td class="leftmargin right">1</td><td class="right"><code>184</code></td><td><code>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;Assert.That(templates[0].WorkItems[0].TaskSet[0].Frequency,&nbsp;Is.EqualTo(t.Frequency));</code></td></tr>
<tr><td class="green">&nbsp;</td><td class="leftmargin right">1</td><td class="right"><code>185</code></td><td><code>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;Assert.That(templates[0].WorkItems[0].TaskSet[0].Tasks[0].JobName,&nbsp;Is.EqualTo(jobName));</code></td></tr>
<tr><td class="green">&nbsp;</td><td class="leftmargin right">1</td><td class="right"><code>186</code></td><td><code>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;}</code></td></tr>
<tr><td class="gray">&nbsp;</td><td class="leftmargin right"></td><td class="right"><code>187</code></td><td class="light"><code></code></td></tr>
<tr><td class="gray">&nbsp;</td><td class="leftmargin right"></td><td class="right"><code>188</code></td><td class="light"><code>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;private&nbsp;static&nbsp;void&nbsp;AssertThatTaskEqualToTaskProperty(TaskDetails&nbsp;t,&nbsp;Task&nbsp;task)</code></td></tr>
<tr><td class="red">&nbsp;</td><td class="leftmargin right">0</td><td class="right"><code>189</code></td><td><code>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;{</code></td></tr>
<tr><td class="red">&nbsp;</td><td class="leftmargin right">0</td><td class="right"><code>190</code></td><td><code>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;Assert.Fail(&quot;commented&nbsp;out&nbsp;shit&quot;);</code></td></tr>
<tr><td class="gray">&nbsp;</td><td class="leftmargin right"></td><td class="right"><code>191</code></td><td class="light"><code>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;//Assert.That(task.client,&nbsp;Is.EqualTo(t.Client));</code></td></tr>
<tr><td class="gray">&nbsp;</td><td class="leftmargin right"></td><td class="right"><code>192</code></td><td class="light"><code>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;//Assert.That(task.connectionstring,&nbsp;Is.EqualTo(t.Connectionstring));</code></td></tr>
<tr><td class="gray">&nbsp;</td><td class="leftmargin right"></td><td class="right"><code>193</code></td><td class="light"><code>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;//Assert.That(task.name,&nbsp;Is.EqualTo(t.Name));</code></td></tr>
<tr><td class="gray">&nbsp;</td><td class="leftmargin right"></td><td class="right"><code>194</code></td><td class="light"><code>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;//Assert.That(task.path,&nbsp;Is.EqualTo(t.Path));</code></td></tr>
<tr><td class="gray">&nbsp;</td><td class="leftmargin right"></td><td class="right"><code>195</code></td><td class="light"><code>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;//Assert.That(task.port,&nbsp;Is.EqualTo(t.Port));</code></td></tr>
<tr><td class="gray">&nbsp;</td><td class="leftmargin right"></td><td class="right"><code>196</code></td><td class="light"><code>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;//Assert.That(task.sql,&nbsp;Is.EqualTo(t.Sql));</code></td></tr>
<tr><td class="gray">&nbsp;</td><td class="leftmargin right"></td><td class="right"><code>197</code></td><td class="light"><code>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;//Assert.That(task.type,&nbsp;Is.EqualTo(t.Type));</code></td></tr>
<tr><td class="red">&nbsp;</td><td class="leftmargin right">0</td><td class="right"><code>198</code></td><td><code>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;}</code></td></tr>
<tr><td class="gray">&nbsp;</td><td class="leftmargin right"></td><td class="right"><code>199</code></td><td class="light"><code></code></td></tr>
<tr><td class="gray">&nbsp;</td><td class="leftmargin right"></td><td class="right"><code>200</code></td><td class="light"><code>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;[Test]</code></td></tr>
<tr><td class="gray">&nbsp;</td><td class="leftmargin right"></td><td class="right"><code>201</code></td><td class="light"><code>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;public&nbsp;void&nbsp;Should_add_task_to_new_role()</code></td></tr>
<tr><td class="green">&nbsp;</td><td class="leftmargin right">1</td><td class="right"><code>202</code></td><td><code>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;{</code></td></tr>
<tr><td class="green">&nbsp;</td><td class="leftmargin right">1</td><td class="right"><code>203</code></td><td><code>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;var&nbsp;t0&nbsp;=&nbsp;new&nbsp;TaskDetails(&quot;someRole1&quot;,&nbsp;1000,&nbsp;&quot;job1&quot;);</code></td></tr>
<tr><td class="green">&nbsp;</td><td class="leftmargin right">1</td><td class="right"><code>204</code></td><td><code>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;var&nbsp;t1&nbsp;=&nbsp;new&nbsp;TaskDetails(&quot;someRole2&quot;,&nbsp;1000,&nbsp;&quot;client&quot;);</code></td></tr>
<tr><td class="gray">&nbsp;</td><td class="leftmargin right"></td><td class="right"><code>205</code></td><td class="light"><code>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;//Test</code></td></tr>
<tr><td class="green">&nbsp;</td><td class="leftmargin right">1</td><td class="right"><code>206</code></td><td><code>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;repository.AddTask(t0);</code></td></tr>
<tr><td class="green">&nbsp;</td><td class="leftmargin right">1</td><td class="right"><code>207</code></td><td><code>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;repository.AddTask(t1);</code></td></tr>
<tr><td class="gray">&nbsp;</td><td class="leftmargin right"></td><td class="right"><code>208</code></td><td class="light"><code>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;//Assert</code></td></tr>
<tr><td class="green">&nbsp;</td><td class="leftmargin right">1</td><td class="right"><code>209</code></td><td><code>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;var&nbsp;templates&nbsp;=&nbsp;repository.GetTemplates();</code></td></tr>
<tr><td class="green">&nbsp;</td><td class="leftmargin right">1</td><td class="right"><code>210</code></td><td><code>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;Assert.That(templates[0].WorkItems.Count,&nbsp;Is.EqualTo(2));</code></td></tr>
<tr><td class="gray">&nbsp;</td><td class="leftmargin right"></td><td class="right"><code>211</code></td><td class="light"><code></code></td></tr>
<tr><td class="green">&nbsp;</td><td class="leftmargin right">1</td><td class="right"><code>212</code></td><td><code>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;Assert.That(templates[0].WorkItems[0].RoleName,&nbsp;Is.EqualTo(t0.Role));</code></td></tr>
<tr><td class="green">&nbsp;</td><td class="leftmargin right">1</td><td class="right"><code>213</code></td><td><code>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;Assert.That(templates[0].WorkItems[0].TaskSet[0].Frequency,&nbsp;Is.EqualTo(t0.Frequency));</code></td></tr>
<tr><td class="green">&nbsp;</td><td class="leftmargin right">1</td><td class="right"><code>214</code></td><td><code>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;Assert.That(templates[0].WorkItems[0].TaskSet[0].Tasks[0].JobName,&nbsp;Is.EqualTo(t0.JobName));</code></td></tr>
<tr><td class="green">&nbsp;</td><td class="leftmargin right">1</td><td class="right"><code>215</code></td><td><code>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;Assert.That(templates[0].WorkItems[1].RoleName,&nbsp;Is.EqualTo(t1.Role));</code></td></tr>
<tr><td class="green">&nbsp;</td><td class="leftmargin right">1</td><td class="right"><code>216</code></td><td><code>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;Assert.That(templates[0].WorkItems[1].TaskSet[0].Frequency,&nbsp;Is.EqualTo(t1.Frequency));</code></td></tr>
<tr><td class="green">&nbsp;</td><td class="leftmargin right">1</td><td class="right"><code>217</code></td><td><code>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;Assert.That(templates[0].WorkItems[1].TaskSet[0].Tasks[0].JobName,&nbsp;Is.EqualTo(t1.JobName));</code></td></tr>
<tr><td class="green">&nbsp;</td><td class="leftmargin right">1</td><td class="right"><code>218</code></td><td><code>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;}</code></td></tr>
<tr><td class="gray">&nbsp;</td><td class="leftmargin right"></td><td class="right"><code>219</code></td><td class="light"><code></code></td></tr>
<tr><td class="gray">&nbsp;</td><td class="leftmargin right"></td><td class="right"><code>220</code></td><td class="light"><code>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;[Test]</code></td></tr>
<tr><td class="gray">&nbsp;</td><td class="leftmargin right"></td><td class="right"><code>221</code></td><td class="light"><code>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;public&nbsp;void&nbsp;Should_add_second_task_to_same_role_different_frequency()</code></td></tr>
<tr><td class="green">&nbsp;</td><td class="leftmargin right">1</td><td class="right"><code>222</code></td><td><code>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;{</code></td></tr>
<tr><td class="green">&nbsp;</td><td class="leftmargin right">1</td><td class="right"><code>223</code></td><td><code>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;var&nbsp;t0&nbsp;=&nbsp;new&nbsp;TaskDetails(&quot;someRole1&quot;,&nbsp;1000,&nbsp;&quot;job1&quot;);</code></td></tr>
<tr><td class="green">&nbsp;</td><td class="leftmargin right">1</td><td class="right"><code>224</code></td><td><code>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;var&nbsp;t1&nbsp;=&nbsp;new&nbsp;TaskDetails(&quot;someRole2&quot;,&nbsp;2000,&nbsp;&quot;client&quot;);</code></td></tr>
<tr><td class="gray">&nbsp;</td><td class="leftmargin right"></td><td class="right"><code>225</code></td><td class="light"><code>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;//Test</code></td></tr>
<tr><td class="green">&nbsp;</td><td class="leftmargin right">1</td><td class="right"><code>226</code></td><td><code>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;repository.AddTask(t0);</code></td></tr>
<tr><td class="green">&nbsp;</td><td class="leftmargin right">1</td><td class="right"><code>227</code></td><td><code>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;repository.AddTask(t1);</code></td></tr>
<tr><td class="gray">&nbsp;</td><td class="leftmargin right"></td><td class="right"><code>228</code></td><td class="light"><code>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;//Assert</code></td></tr>
<tr><td class="green">&nbsp;</td><td class="leftmargin right">1</td><td class="right"><code>229</code></td><td><code>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;var&nbsp;templates&nbsp;=&nbsp;repository.GetTemplates();</code></td></tr>
<tr><td class="green">&nbsp;</td><td class="leftmargin right">1</td><td class="right"><code>230</code></td><td><code>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;Assert.That(templates.Count,&nbsp;Is.EqualTo(1));</code></td></tr>
<tr><td class="green">&nbsp;</td><td class="leftmargin right">1</td><td class="right"><code>231</code></td><td><code>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;Assert.That(templates[0].WorkItems[0].RoleName,&nbsp;Is.EqualTo(t0.Role));</code></td></tr>
<tr><td class="green">&nbsp;</td><td class="leftmargin right">1</td><td class="right"><code>232</code></td><td><code>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;Assert.That(templates[0].WorkItems[0].TaskSet[0].Frequency,&nbsp;Is.EqualTo(t0.Frequency));</code></td></tr>
<tr><td class="green">&nbsp;</td><td class="leftmargin right">1</td><td class="right"><code>233</code></td><td><code>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;Assert.That(templates[0].WorkItems[0].TaskSet[0].Tasks[0].JobName,&nbsp;Is.EqualTo(t0.JobName));</code></td></tr>
<tr><td class="green">&nbsp;</td><td class="leftmargin right">1</td><td class="right"><code>234</code></td><td><code>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;Assert.That(templates[0].WorkItems[1].RoleName,&nbsp;Is.EqualTo(t1.Role));</code></td></tr>
<tr><td class="green">&nbsp;</td><td class="leftmargin right">1</td><td class="right"><code>235</code></td><td><code>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;Assert.That(templates[0].WorkItems[1].TaskSet[0].Frequency,&nbsp;Is.EqualTo(t1.Frequency));</code></td></tr>
<tr><td class="green">&nbsp;</td><td class="leftmargin right">1</td><td class="right"><code>236</code></td><td><code>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;Assert.That(templates[0].WorkItems[1].TaskSet[0].Tasks[0].JobName,&nbsp;Is.EqualTo(t1.JobName));</code></td></tr>
<tr><td class="green">&nbsp;</td><td class="leftmargin right">1</td><td class="right"><code>237</code></td><td><code>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;}</code></td></tr>
<tr><td class="gray">&nbsp;</td><td class="leftmargin right"></td><td class="right"><code>238</code></td><td class="light"><code></code></td></tr>
<tr><td class="gray">&nbsp;</td><td class="leftmargin right"></td><td class="right"><code>239</code></td><td class="light"><code>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;[Test]</code></td></tr>
<tr><td class="gray">&nbsp;</td><td class="leftmargin right"></td><td class="right"><code>240</code></td><td class="light"><code>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;public&nbsp;void&nbsp;Should_add_second_task_to_same_role_same_frequency()</code></td></tr>
<tr><td class="green">&nbsp;</td><td class="leftmargin right">1</td><td class="right"><code>241</code></td><td><code>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;{</code></td></tr>
<tr><td class="green">&nbsp;</td><td class="leftmargin right">1</td><td class="right"><code>242</code></td><td><code>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;var&nbsp;t0&nbsp;=&nbsp;new&nbsp;TaskDetails(&quot;someRole1&quot;,&nbsp;1000,&nbsp;&quot;job1&quot;);</code></td></tr>
<tr><td class="green">&nbsp;</td><td class="leftmargin right">1</td><td class="right"><code>243</code></td><td><code>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;var&nbsp;t1&nbsp;=&nbsp;new&nbsp;TaskDetails(&quot;someRole1&quot;,&nbsp;1000,&nbsp;&quot;client&quot;);</code></td></tr>
<tr><td class="gray">&nbsp;</td><td class="leftmargin right"></td><td class="right"><code>244</code></td><td class="light"><code>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;//Test</code></td></tr>
<tr><td class="green">&nbsp;</td><td class="leftmargin right">1</td><td class="right"><code>245</code></td><td><code>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;repository.AddTask(t0);</code></td></tr>
<tr><td class="green">&nbsp;</td><td class="leftmargin right">1</td><td class="right"><code>246</code></td><td><code>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;repository.AddTask(t1);</code></td></tr>
<tr><td class="gray">&nbsp;</td><td class="leftmargin right"></td><td class="right"><code>247</code></td><td class="light"><code>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;//Assert</code></td></tr>
<tr><td class="green">&nbsp;</td><td class="leftmargin right">1</td><td class="right"><code>248</code></td><td><code>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;var&nbsp;templates&nbsp;=&nbsp;repository.GetTemplates();</code></td></tr>
<tr><td class="green">&nbsp;</td><td class="leftmargin right">1</td><td class="right"><code>249</code></td><td><code>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;Assert.That(templates.Count,&nbsp;Is.EqualTo(1));</code></td></tr>
<tr><td class="green">&nbsp;</td><td class="leftmargin right">1</td><td class="right"><code>250</code></td><td><code>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;Assert.That(templates[0].WorkItems[0].RoleName,&nbsp;Is.EqualTo(t0.Role));</code></td></tr>
<tr><td class="green">&nbsp;</td><td class="leftmargin right">1</td><td class="right"><code>251</code></td><td><code>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;Assert.That(templates[0].WorkItems[0].TaskSet[0].Frequency,&nbsp;Is.EqualTo(t0.Frequency));</code></td></tr>
<tr><td class="green">&nbsp;</td><td class="leftmargin right">1</td><td class="right"><code>252</code></td><td><code>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;Assert.That(templates[0].WorkItems[0].TaskSet[0].Tasks[0].JobName,&nbsp;Is.EqualTo(t0.JobName));</code></td></tr>
<tr><td class="green">&nbsp;</td><td class="leftmargin right">1</td><td class="right"><code>253</code></td><td><code>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;Assert.That(templates[0].WorkItems[0].TaskSet[0].Tasks[1].JobName,&nbsp;Is.EqualTo(t1.JobName));</code></td></tr>
<tr><td class="green">&nbsp;</td><td class="leftmargin right">1</td><td class="right"><code>254</code></td><td><code>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;}</code></td></tr>
<tr><td class="gray">&nbsp;</td><td class="leftmargin right"></td><td class="right"><code>255</code></td><td class="light"><code></code></td></tr>
<tr><td class="gray">&nbsp;</td><td class="leftmargin right"></td><td class="right"><code>256</code></td><td class="light"><code>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;[Test]</code></td></tr>
<tr><td class="gray">&nbsp;</td><td class="leftmargin right"></td><td class="right"><code>257</code></td><td class="light"><code>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;public&nbsp;void&nbsp;Should_read_config_and_get_clients_dictionary()</code></td></tr>
<tr><td class="green">&nbsp;</td><td class="leftmargin right">1</td><td class="right"><code>258</code></td><td><code>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;{</code></td></tr>
<tr><td class="green">&nbsp;</td><td class="leftmargin right">1</td><td class="right"><code>259</code></td><td><code>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;string&nbsp;namec1&nbsp;=&nbsp;&quot;c1Name&quot;;</code></td></tr>
<tr><td class="green">&nbsp;</td><td class="leftmargin right">1</td><td class="right"><code>260</code></td><td><code>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;string&nbsp;namec2&nbsp;=&nbsp;&quot;c2Name&quot;;</code></td></tr>
<tr><td class="gray">&nbsp;</td><td class="leftmargin right"></td><td class="right"><code>261</code></td><td class="light"><code></code></td></tr>
<tr><td class="green">&nbsp;</td><td class="leftmargin right">1</td><td class="right"><code>262</code></td><td><code>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;config.Clients.Add(new&nbsp;GraphiteTcpClient&nbsp;{&nbsp;ClientName&nbsp;=&nbsp;namec1&nbsp;});</code></td></tr>
<tr><td class="green">&nbsp;</td><td class="leftmargin right">1</td><td class="right"><code>263</code></td><td><code>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;config.Clients.Add(new&nbsp;GraphiteUdpClient&nbsp;{&nbsp;ClientName&nbsp;=&nbsp;namec2&nbsp;});</code></td></tr>
<tr><td class="green">&nbsp;</td><td class="leftmargin right">1</td><td class="right"><code>264</code></td><td><code>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;string&nbsp;configXml&nbsp;=&nbsp;this.Add(Blank,&nbsp;TwoClients);</code></td></tr>
<tr><td class="green">&nbsp;</td><td class="leftmargin right">2</td><td class="right"><code>265</code></td><td><code>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;genericSerializer.Expect(x&nbsp;=&gt;&nbsp;x.Deserialize&lt;SqlToGraphiteConfig&gt;(configXml)).Return(config);</code></td></tr>
<tr><td class="green">&nbsp;</td><td class="leftmargin right">2</td><td class="right"><code>266</code></td><td><code>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;reader.Expect(x&nbsp;=&gt;&nbsp;x.GetXml()).Return(configXml);</code></td></tr>
<tr><td class="green">&nbsp;</td><td class="leftmargin right">2</td><td class="right"><code>267</code></td><td><code>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;cache.Expect(x&nbsp;=&gt;&nbsp;x.HasExpired()).Return(true).Repeat.Once();</code></td></tr>
<tr><td class="gray">&nbsp;</td><td class="leftmargin right"></td><td class="right"><code>268</code></td><td class="light"><code>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;//Test</code></td></tr>
<tr><td class="green">&nbsp;</td><td class="leftmargin right">1</td><td class="right"><code>269</code></td><td><code>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;repository.Load();</code></td></tr>
<tr><td class="gray">&nbsp;</td><td class="leftmargin right"></td><td class="right"><code>270</code></td><td class="light"><code>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;//Assert</code></td></tr>
<tr><td class="green">&nbsp;</td><td class="leftmargin right">1</td><td class="right"><code>271</code></td><td><code>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;Assert.That(repository.GetClients().Count,&nbsp;Is.EqualTo(2));</code></td></tr>
<tr><td class="green">&nbsp;</td><td class="leftmargin right">1</td><td class="right"><code>272</code></td><td><code>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;reader.VerifyAllExpectations();</code></td></tr>
<tr><td class="green">&nbsp;</td><td class="leftmargin right">1</td><td class="right"><code>273</code></td><td><code>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;cache.VerifyAllExpectations();</code></td></tr>
<tr><td class="green">&nbsp;</td><td class="leftmargin right">1</td><td class="right"><code>274</code></td><td><code>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;genericSerializer.VerifyAllExpectations();</code></td></tr>
<tr><td class="green">&nbsp;</td><td class="leftmargin right">1</td><td class="right"><code>275</code></td><td><code>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;}</code></td></tr>
<tr><td class="gray">&nbsp;</td><td class="leftmargin right"></td><td class="right"><code>276</code></td><td class="light"><code></code></td></tr>
<tr><td class="gray">&nbsp;</td><td class="leftmargin right"></td><td class="right"><code>277</code></td><td class="light"><code>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;//I&nbsp;don&#39;t&nbsp;this&nbsp;this&nbsp;is&nbsp;relevant&nbsp;with&nbsp;plug-in&nbsp;clients.</code></td></tr>
<tr><td class="gray">&nbsp;</td><td class="leftmargin right"></td><td class="right"><code>278</code></td><td class="light"><code>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;//[Test]</code></td></tr>
<tr><td class="gray">&nbsp;</td><td class="leftmargin right"></td><td class="right"><code>279</code></td><td class="light"><code>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;//public&nbsp;void&nbsp;Should_read_config_and_get_error_with_clients_dictionary()</code></td></tr>
<tr><td class="gray">&nbsp;</td><td class="leftmargin right"></td><td class="right"><code>280</code></td><td class="light"><code>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;//{</code></td></tr>
<tr><td class="gray">&nbsp;</td><td class="leftmargin right"></td><td class="right"><code>281</code></td><td class="light"><code>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;//&nbsp;&nbsp;&nbsp;&nbsp;var&nbsp;config&nbsp;=&nbsp;new&nbsp;SqlToGraphiteConfig();</code></td></tr>
<tr><td class="gray">&nbsp;</td><td class="leftmargin right"></td><td class="right"><code>282</code></td><td class="light"><code>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;//&nbsp;&nbsp;&nbsp;&nbsp;string&nbsp;configXml&nbsp;=&nbsp;this.Add(Blank,&nbsp;UnknownClient);</code></td></tr>
<tr><td class="gray">&nbsp;</td><td class="leftmargin right"></td><td class="right"><code>283</code></td><td class="light"><code>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;//&nbsp;&nbsp;&nbsp;&nbsp;genericSerializer.Expect(x&nbsp;=&gt;&nbsp;x.Deserialize&lt;SqlToGraphiteConfig&gt;(configXml)).Return(config).Repeat.Once();</code></td></tr>
<tr><td class="gray">&nbsp;</td><td class="leftmargin right"></td><td class="right"><code>284</code></td><td class="light"><code>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;//&nbsp;&nbsp;&nbsp;&nbsp;reader.Expect(x&nbsp;=&gt;&nbsp;x.GetXml()).Return(configXml);</code></td></tr>
<tr><td class="gray">&nbsp;</td><td class="leftmargin right"></td><td class="right"><code>285</code></td><td class="light"><code>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;//&nbsp;&nbsp;&nbsp;&nbsp;cache.Expect(x&nbsp;=&gt;&nbsp;x.HasExpired()).Return(true).Repeat.Once();</code></td></tr>
<tr><td class="gray">&nbsp;</td><td class="leftmargin right"></td><td class="right"><code>286</code></td><td class="light"><code>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;//&nbsp;&nbsp;&nbsp;&nbsp;repository.Load();</code></td></tr>
<tr><td class="gray">&nbsp;</td><td class="leftmargin right"></td><td class="right"><code>287</code></td><td class="light"><code>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;//&nbsp;&nbsp;&nbsp;&nbsp;Assert.That(repository.Errors.Count,&nbsp;Is.EqualTo(1));</code></td></tr>
<tr><td class="gray">&nbsp;</td><td class="leftmargin right"></td><td class="right"><code>288</code></td><td class="light"><code>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;//&nbsp;&nbsp;&nbsp;&nbsp;Assert.That(repository.Errors[0].Contains(ConfigRepository.UnknownClient),&nbsp;Is.EqualTo(true));</code></td></tr>
<tr><td class="gray">&nbsp;</td><td class="leftmargin right"></td><td class="right"><code>289</code></td><td class="light"><code>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;//&nbsp;&nbsp;&nbsp;&nbsp;Assert.That(repository.Validate(),&nbsp;Is.EqualTo(false));</code></td></tr>
<tr><td class="gray">&nbsp;</td><td class="leftmargin right"></td><td class="right"><code>290</code></td><td class="light"><code>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;//&nbsp;&nbsp;&nbsp;&nbsp;reader.VerifyAllExpectations();</code></td></tr>
<tr><td class="gray">&nbsp;</td><td class="leftmargin right"></td><td class="right"><code>291</code></td><td class="light"><code>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;//&nbsp;&nbsp;&nbsp;&nbsp;cache.VerifyAllExpectations();</code></td></tr>
<tr><td class="gray">&nbsp;</td><td class="leftmargin right"></td><td class="right"><code>292</code></td><td class="light"><code>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;//&nbsp;&nbsp;&nbsp;&nbsp;genericSerializer.VerifyAllExpectations();</code></td></tr>
<tr><td class="gray">&nbsp;</td><td class="leftmargin right"></td><td class="right"><code>293</code></td><td class="light"><code>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;//}</code></td></tr>
<tr><td class="gray">&nbsp;</td><td class="leftmargin right"></td><td class="right"><code>294</code></td><td class="light"><code>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;[Test]</code></td></tr>
<tr><td class="gray">&nbsp;</td><td class="leftmargin right"></td><td class="right"><code>295</code></td><td class="light"><code>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;public&nbsp;void&nbsp;Should_read_config_and_get_Templates()</code></td></tr>
<tr><td class="green">&nbsp;</td><td class="leftmargin right">1</td><td class="right"><code>296</code></td><td><code>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;{</code></td></tr>
<tr><td class="green">&nbsp;</td><td class="leftmargin right">1</td><td class="right"><code>297</code></td><td><code>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;config.Templates.Add(new&nbsp;Template());</code></td></tr>
<tr><td class="green">&nbsp;</td><td class="leftmargin right">1</td><td class="right"><code>298</code></td><td><code>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;config.Templates.Add(new&nbsp;Template());</code></td></tr>
<tr><td class="green">&nbsp;</td><td class="leftmargin right">1</td><td class="right"><code>299</code></td><td><code>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;string&nbsp;configXml&nbsp;=&nbsp;this.Add(Blank,&nbsp;Templates);</code></td></tr>
<tr><td class="green">&nbsp;</td><td class="leftmargin right">2</td><td class="right"><code>300</code></td><td><code>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;genericSerializer.Expect(x&nbsp;=&gt;&nbsp;x.Deserialize&lt;SqlToGraphiteConfig&gt;(configXml)).Return(config).Repeat.Once();</code></td></tr>
<tr><td class="green">&nbsp;</td><td class="leftmargin right">2</td><td class="right"><code>301</code></td><td><code>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;reader.Expect(x&nbsp;=&gt;&nbsp;x.GetXml()).Return(configXml);</code></td></tr>
<tr><td class="green">&nbsp;</td><td class="leftmargin right">2</td><td class="right"><code>302</code></td><td><code>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;cache.Expect(x&nbsp;=&gt;&nbsp;x.HasExpired()).Return(true).Repeat.Once();</code></td></tr>
<tr><td class="gray">&nbsp;</td><td class="leftmargin right"></td><td class="right"><code>303</code></td><td class="light"><code>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;//Test</code></td></tr>
<tr><td class="green">&nbsp;</td><td class="leftmargin right">1</td><td class="right"><code>304</code></td><td><code>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;repository.Load();</code></td></tr>
<tr><td class="gray">&nbsp;</td><td class="leftmargin right"></td><td class="right"><code>305</code></td><td class="light"><code>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;//Assert</code></td></tr>
<tr><td class="green">&nbsp;</td><td class="leftmargin right">1</td><td class="right"><code>306</code></td><td><code>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;Assert.That(repository.GetTemplates().Count,&nbsp;Is.EqualTo(2));</code></td></tr>
<tr><td class="green">&nbsp;</td><td class="leftmargin right">1</td><td class="right"><code>307</code></td><td><code>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;reader.VerifyAllExpectations();</code></td></tr>
<tr><td class="green">&nbsp;</td><td class="leftmargin right">1</td><td class="right"><code>308</code></td><td><code>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;cache.VerifyAllExpectations();</code></td></tr>
<tr><td class="green">&nbsp;</td><td class="leftmargin right">1</td><td class="right"><code>309</code></td><td><code>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;genericSerializer.VerifyAllExpectations();</code></td></tr>
<tr><td class="green">&nbsp;</td><td class="leftmargin right">1</td><td class="right"><code>310</code></td><td><code>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;}</code></td></tr>
<tr><td class="gray">&nbsp;</td><td class="leftmargin right"></td><td class="right"><code>311</code></td><td class="light"><code></code></td></tr>
<tr><td class="gray">&nbsp;</td><td class="leftmargin right"></td><td class="right"><code>312</code></td><td class="light"><code>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;[Test]</code></td></tr>
<tr><td class="gray">&nbsp;</td><td class="leftmargin right"></td><td class="right"><code>313</code></td><td class="light"><code>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;public&nbsp;void&nbsp;Should_read_config_from_cache()</code></td></tr>
<tr><td class="green">&nbsp;</td><td class="leftmargin right">1</td><td class="right"><code>314</code></td><td><code>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;{</code></td></tr>
<tr><td class="green">&nbsp;</td><td class="leftmargin right">1</td><td class="right"><code>315</code></td><td><code>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;config.Templates.Add(new&nbsp;Template());</code></td></tr>
<tr><td class="green">&nbsp;</td><td class="leftmargin right">1</td><td class="right"><code>316</code></td><td><code>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;config.Templates.Add(new&nbsp;Template());</code></td></tr>
<tr><td class="green">&nbsp;</td><td class="leftmargin right">1</td><td class="right"><code>317</code></td><td><code>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;string&nbsp;configXml&nbsp;=&nbsp;this.Add(Blank,&nbsp;Templates);</code></td></tr>
<tr><td class="green">&nbsp;</td><td class="leftmargin right">2</td><td class="right"><code>318</code></td><td><code>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;genericSerializer.Expect(x&nbsp;=&gt;&nbsp;x.Deserialize&lt;SqlToGraphiteConfig&gt;(configXml)).Return(config).Repeat.Once();</code></td></tr>
<tr><td class="green">&nbsp;</td><td class="leftmargin right">2</td><td class="right"><code>319</code></td><td><code>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;reader.Expect(x&nbsp;=&gt;&nbsp;x.GetXml()).Return(configXml).Repeat.Once();</code></td></tr>
<tr><td class="green">&nbsp;</td><td class="leftmargin right">2</td><td class="right"><code>320</code></td><td><code>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;cache.Expect(x&nbsp;=&gt;&nbsp;x.HasExpired()).Return(true).Repeat.Once();</code></td></tr>
<tr><td class="green">&nbsp;</td><td class="leftmargin right">2</td><td class="right"><code>321</code></td><td><code>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;cache.Expect(x&nbsp;=&gt;&nbsp;x.HasExpired()).Return(false).Repeat.Once();</code></td></tr>
<tr><td class="gray">&nbsp;</td><td class="leftmargin right"></td><td class="right"><code>322</code></td><td class="light"><code>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;//Test</code></td></tr>
<tr><td class="green">&nbsp;</td><td class="leftmargin right">1</td><td class="right"><code>323</code></td><td><code>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;repository.Load();</code></td></tr>
<tr><td class="green">&nbsp;</td><td class="leftmargin right">1</td><td class="right"><code>324</code></td><td><code>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;repository.Load();</code></td></tr>
<tr><td class="gray">&nbsp;</td><td class="leftmargin right"></td><td class="right"><code>325</code></td><td class="light"><code>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;//Assert</code></td></tr>
<tr><td class="green">&nbsp;</td><td class="leftmargin right">1</td><td class="right"><code>326</code></td><td><code>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;Assert.That(repository.GetTemplates().Count,&nbsp;Is.EqualTo(2));</code></td></tr>
<tr><td class="green">&nbsp;</td><td class="leftmargin right">1</td><td class="right"><code>327</code></td><td><code>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;reader.VerifyAllExpectations();</code></td></tr>
<tr><td class="green">&nbsp;</td><td class="leftmargin right">1</td><td class="right"><code>328</code></td><td><code>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;cache.VerifyAllExpectations();</code></td></tr>
<tr><td class="green">&nbsp;</td><td class="leftmargin right">1</td><td class="right"><code>329</code></td><td><code>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;genericSerializer.VerifyAllExpectations();</code></td></tr>
<tr><td class="green">&nbsp;</td><td class="leftmargin right">1</td><td class="right"><code>330</code></td><td><code>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;}</code></td></tr>
<tr><td class="gray">&nbsp;</td><td class="leftmargin right"></td><td class="right"><code>331</code></td><td class="light"><code></code></td></tr>
<tr><td class="gray">&nbsp;</td><td class="leftmargin right"></td><td class="right"><code>332</code></td><td class="light"><code>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;[Test]</code></td></tr>
<tr><td class="gray">&nbsp;</td><td class="leftmargin right"></td><td class="right"><code>333</code></td><td class="light"><code>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;public&nbsp;void&nbsp;Should_read_config_and_get_Hosts()</code></td></tr>
<tr><td class="green">&nbsp;</td><td class="leftmargin right">1</td><td class="right"><code>334</code></td><td><code>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;{</code></td></tr>
<tr><td class="green">&nbsp;</td><td class="leftmargin right">1</td><td class="right"><code>335</code></td><td><code>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;string&nbsp;configXml&nbsp;=&nbsp;this.Add(Blank,&nbsp;TwoHosts);</code></td></tr>
<tr><td class="green">&nbsp;</td><td class="leftmargin right">1</td><td class="right"><code>336</code></td><td><code>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;config.Hosts.Add(new&nbsp;Host());</code></td></tr>
<tr><td class="green">&nbsp;</td><td class="leftmargin right">1</td><td class="right"><code>337</code></td><td><code>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;config.Hosts.Add(new&nbsp;Host());</code></td></tr>
<tr><td class="green">&nbsp;</td><td class="leftmargin right">2</td><td class="right"><code>338</code></td><td><code>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;genericSerializer.Expect(x&nbsp;=&gt;&nbsp;x.Deserialize&lt;SqlToGraphiteConfig&gt;(configXml)).Return(config);</code></td></tr>
<tr><td class="green">&nbsp;</td><td class="leftmargin right">2</td><td class="right"><code>339</code></td><td><code>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;reader.Expect(x&nbsp;=&gt;&nbsp;x.GetXml()).Return(configXml);</code></td></tr>
<tr><td class="green">&nbsp;</td><td class="leftmargin right">2</td><td class="right"><code>340</code></td><td><code>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;cache.Expect(x&nbsp;=&gt;&nbsp;x.HasExpired()).Return(true).Repeat.Once();</code></td></tr>
<tr><td class="gray">&nbsp;</td><td class="leftmargin right"></td><td class="right"><code>341</code></td><td class="light"><code>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;//Test</code></td></tr>
<tr><td class="green">&nbsp;</td><td class="leftmargin right">1</td><td class="right"><code>342</code></td><td><code>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;repository.Load();</code></td></tr>
<tr><td class="gray">&nbsp;</td><td class="leftmargin right"></td><td class="right"><code>343</code></td><td class="light"><code>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;//Assert</code></td></tr>
<tr><td class="green">&nbsp;</td><td class="leftmargin right">1</td><td class="right"><code>344</code></td><td><code>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;Assert.That(repository.GetHosts().Count,&nbsp;Is.EqualTo(2));</code></td></tr>
<tr><td class="green">&nbsp;</td><td class="leftmargin right">1</td><td class="right"><code>345</code></td><td><code>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;reader.VerifyAllExpectations();</code></td></tr>
<tr><td class="green">&nbsp;</td><td class="leftmargin right">1</td><td class="right"><code>346</code></td><td><code>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;cache.VerifyAllExpectations();</code></td></tr>
<tr><td class="green">&nbsp;</td><td class="leftmargin right">1</td><td class="right"><code>347</code></td><td><code>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;genericSerializer.VerifyAllExpectations();</code></td></tr>
<tr><td class="green">&nbsp;</td><td class="leftmargin right">1</td><td class="right"><code>348</code></td><td><code>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;}</code></td></tr>
<tr><td class="gray">&nbsp;</td><td class="leftmargin right"></td><td class="right"><code>349</code></td><td class="light"><code></code></td></tr>
<tr><td class="gray">&nbsp;</td><td class="leftmargin right"></td><td class="right"><code>350</code></td><td class="light"><code>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;[Test]</code></td></tr>
<tr><td class="gray">&nbsp;</td><td class="leftmargin right"></td><td class="right"><code>351</code></td><td class="light"><code>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;public&nbsp;void&nbsp;Should_not_validate_because_templates_are_not_defined()</code></td></tr>
<tr><td class="green">&nbsp;</td><td class="leftmargin right">1</td><td class="right"><code>352</code></td><td><code>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;{</code></td></tr>
<tr><td class="green">&nbsp;</td><td class="leftmargin right">1</td><td class="right"><code>353</code></td><td><code>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;string&nbsp;configXml&nbsp;=&nbsp;this.Add(Add(Blank,&nbsp;TwoClients),&nbsp;TwoHosts);</code></td></tr>
<tr><td class="green">&nbsp;</td><td class="leftmargin right">2</td><td class="right"><code>354</code></td><td><code>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;genericSerializer.Expect(x&nbsp;=&gt;&nbsp;x.Deserialize&lt;SqlToGraphiteConfig&gt;(configXml)).Return(new&nbsp;SqlToGraphiteConfig(</code></td></tr>
<tr><td class="green">&nbsp;</td><td class="leftmargin right">2</td><td class="right"><code>355</code></td><td><code>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;reader.Expect(x&nbsp;=&gt;&nbsp;x.GetXml()).Return(configXml);</code></td></tr>
<tr><td class="green">&nbsp;</td><td class="leftmargin right">2</td><td class="right"><code>356</code></td><td><code>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;cache.Expect(x&nbsp;=&gt;&nbsp;x.HasExpired()).Return(true).Repeat.Once();</code></td></tr>
<tr><td class="gray">&nbsp;</td><td class="leftmargin right"></td><td class="right"><code>357</code></td><td class="light"><code>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;//Test</code></td></tr>
<tr><td class="green">&nbsp;</td><td class="leftmargin right">1</td><td class="right"><code>358</code></td><td><code>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;repository.Load();</code></td></tr>
<tr><td class="gray">&nbsp;</td><td class="leftmargin right"></td><td class="right"><code>359</code></td><td class="light"><code>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;//Assert</code></td></tr>
<tr><td class="green">&nbsp;</td><td class="leftmargin right">1</td><td class="right"><code>360</code></td><td><code>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;Assert.That(repository.Validate(),&nbsp;Is.EqualTo(false));</code></td></tr>
<tr><td class="green">&nbsp;</td><td class="leftmargin right">1</td><td class="right"><code>361</code></td><td><code>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;Assert.That(repository.Errors.Contains(ConfigRepository.FailedToFindTemplates),&nbsp;Is.EqualTo(true));</code></td></tr>
<tr><td class="green">&nbsp;</td><td class="leftmargin right">1</td><td class="right"><code>362</code></td><td><code>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;reader.VerifyAllExpectations();</code></td></tr>
<tr><td class="green">&nbsp;</td><td class="leftmargin right">1</td><td class="right"><code>363</code></td><td><code>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;cache.VerifyAllExpectations();</code></td></tr>
<tr><td class="green">&nbsp;</td><td class="leftmargin right">1</td><td class="right"><code>364</code></td><td><code>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;genericSerializer.VerifyAllExpectations();</code></td></tr>
<tr><td class="green">&nbsp;</td><td class="leftmargin right">1</td><td class="right"><code>365</code></td><td><code>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;}</code></td></tr>
<tr><td class="gray">&nbsp;</td><td class="leftmargin right"></td><td class="right"><code>366</code></td><td class="light"><code></code></td></tr>
<tr><td class="gray">&nbsp;</td><td class="leftmargin right"></td><td class="right"><code>367</code></td><td class="light"><code>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;[Test]</code></td></tr>
<tr><td class="gray">&nbsp;</td><td class="leftmargin right"></td><td class="right"><code>368</code></td><td class="light"><code>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;public&nbsp;void&nbsp;Should_not_validate_because_hosts_are_not_defined()</code></td></tr>
<tr><td class="green">&nbsp;</td><td class="leftmargin right">1</td><td class="right"><code>369</code></td><td><code>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;{</code></td></tr>
<tr><td class="green">&nbsp;</td><td class="leftmargin right">1</td><td class="right"><code>370</code></td><td><code>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;string&nbsp;configXml&nbsp;=&nbsp;this.Add(Add(Blank,&nbsp;TwoClients),&nbsp;Templates);</code></td></tr>
<tr><td class="green">&nbsp;</td><td class="leftmargin right">2</td><td class="right"><code>371</code></td><td><code>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;genericSerializer.Expect(x&nbsp;=&gt;&nbsp;x.Deserialize&lt;SqlToGraphiteConfig&gt;(configXml)).Return(new&nbsp;SqlToGraphiteConfig(</code></td></tr>
<tr><td class="green">&nbsp;</td><td class="leftmargin right">2</td><td class="right"><code>372</code></td><td><code>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;reader.Expect(x&nbsp;=&gt;&nbsp;x.GetXml()).Return(configXml);</code></td></tr>
<tr><td class="green">&nbsp;</td><td class="leftmargin right">2</td><td class="right"><code>373</code></td><td><code>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;cache.Expect(x&nbsp;=&gt;&nbsp;x.HasExpired()).Return(true).Repeat.Once();</code></td></tr>
<tr><td class="gray">&nbsp;</td><td class="leftmargin right"></td><td class="right"><code>374</code></td><td class="light"><code>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;//Test</code></td></tr>
<tr><td class="green">&nbsp;</td><td class="leftmargin right">1</td><td class="right"><code>375</code></td><td><code>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;repository.Load();</code></td></tr>
<tr><td class="gray">&nbsp;</td><td class="leftmargin right"></td><td class="right"><code>376</code></td><td class="light"><code>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;//Assert</code></td></tr>
<tr><td class="green">&nbsp;</td><td class="leftmargin right">1</td><td class="right"><code>377</code></td><td><code>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;Assert.That(repository.Validate(),&nbsp;Is.EqualTo(false));</code></td></tr>
<tr><td class="green">&nbsp;</td><td class="leftmargin right">1</td><td class="right"><code>378</code></td><td><code>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;Assert.That(repository.Errors.Contains(ConfigRepository.FailedToFindHosts),&nbsp;Is.EqualTo(true));</code></td></tr>
<tr><td class="green">&nbsp;</td><td class="leftmargin right">1</td><td class="right"><code>379</code></td><td><code>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;reader.VerifyAllExpectations();</code></td></tr>
<tr><td class="green">&nbsp;</td><td class="leftmargin right">1</td><td class="right"><code>380</code></td><td><code>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;cache.VerifyAllExpectations();</code></td></tr>
<tr><td class="green">&nbsp;</td><td class="leftmargin right">1</td><td class="right"><code>381</code></td><td><code>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;genericSerializer.VerifyAllExpectations();</code></td></tr>
<tr><td class="green">&nbsp;</td><td class="leftmargin right">1</td><td class="right"><code>382</code></td><td><code>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;}</code></td></tr>
<tr><td class="gray">&nbsp;</td><td class="leftmargin right"></td><td class="right"><code>383</code></td><td class="light"><code></code></td></tr>
<tr><td class="gray">&nbsp;</td><td class="leftmargin right"></td><td class="right"><code>384</code></td><td class="light"><code>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;[Test]</code></td></tr>
<tr><td class="gray">&nbsp;</td><td class="leftmargin right"></td><td class="right"><code>385</code></td><td class="light"><code>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;public&nbsp;void&nbsp;Should_not_validate_because_clients_are_not_defined()</code></td></tr>
<tr><td class="green">&nbsp;</td><td class="leftmargin right">1</td><td class="right"><code>386</code></td><td><code>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;{</code></td></tr>
<tr><td class="green">&nbsp;</td><td class="leftmargin right">1</td><td class="right"><code>387</code></td><td><code>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;string&nbsp;configXml&nbsp;=&nbsp;this.Add(Add(Blank,&nbsp;TwoHosts),&nbsp;Templates);</code></td></tr>
<tr><td class="green">&nbsp;</td><td class="leftmargin right">2</td><td class="right"><code>388</code></td><td><code>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;genericSerializer.Expect(x&nbsp;=&gt;&nbsp;x.Deserialize&lt;SqlToGraphiteConfig&gt;(configXml)).Return(new&nbsp;SqlToGraphiteConfig(</code></td></tr>
<tr><td class="green">&nbsp;</td><td class="leftmargin right">2</td><td class="right"><code>389</code></td><td><code>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;reader.Expect(x&nbsp;=&gt;&nbsp;x.GetXml()).Return(configXml);</code></td></tr>
<tr><td class="green">&nbsp;</td><td class="leftmargin right">2</td><td class="right"><code>390</code></td><td><code>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;cache.Expect(x&nbsp;=&gt;&nbsp;x.HasExpired()).Return(true).Repeat.Once();</code></td></tr>
<tr><td class="gray">&nbsp;</td><td class="leftmargin right"></td><td class="right"><code>391</code></td><td class="light"><code>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;//Test</code></td></tr>
<tr><td class="green">&nbsp;</td><td class="leftmargin right">1</td><td class="right"><code>392</code></td><td><code>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;repository.Load();</code></td></tr>
<tr><td class="gray">&nbsp;</td><td class="leftmargin right"></td><td class="right"><code>393</code></td><td class="light"><code>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;//Assert</code></td></tr>
<tr><td class="green">&nbsp;</td><td class="leftmargin right">1</td><td class="right"><code>394</code></td><td><code>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;Assert.That(repository.Validate(),&nbsp;Is.EqualTo(false));</code></td></tr>
<tr><td class="green">&nbsp;</td><td class="leftmargin right">1</td><td class="right"><code>395</code></td><td><code>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;Assert.That(repository.Errors.Contains(ConfigRepository.FailedToFindClients),&nbsp;Is.EqualTo(true));</code></td></tr>
<tr><td class="green">&nbsp;</td><td class="leftmargin right">1</td><td class="right"><code>396</code></td><td><code>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;reader.VerifyAllExpectations();</code></td></tr>
<tr><td class="green">&nbsp;</td><td class="leftmargin right">1</td><td class="right"><code>397</code></td><td><code>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;cache.VerifyAllExpectations();</code></td></tr>
<tr><td class="green">&nbsp;</td><td class="leftmargin right">1</td><td class="right"><code>398</code></td><td><code>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;genericSerializer.VerifyAllExpectations();</code></td></tr>
<tr><td class="green">&nbsp;</td><td class="leftmargin right">1</td><td class="right"><code>399</code></td><td><code>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;}</code></td></tr>
<tr><td class="gray">&nbsp;</td><td class="leftmargin right"></td><td class="right"><code>400</code></td><td class="light"><code></code></td></tr>
<tr><td class="gray">&nbsp;</td><td class="leftmargin right"></td><td class="right"><code>401</code></td><td class="light"><code>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;[Test]</code></td></tr>
<tr><td class="gray">&nbsp;</td><td class="leftmargin right"></td><td class="right"><code>402</code></td><td class="light"><code>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;public&nbsp;void&nbsp;Should_remove_job_from_role_with_same_frequency()</code></td></tr>
<tr><td class="green">&nbsp;</td><td class="leftmargin right">1</td><td class="right"><code>403</code></td><td><code>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;{</code></td></tr>
<tr><td class="green">&nbsp;</td><td class="leftmargin right">1</td><td class="right"><code>404</code></td><td><code>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;string&nbsp;jobName&nbsp;=&nbsp;&quot;jobName&quot;;</code></td></tr>
<tr><td class="green">&nbsp;</td><td class="leftmargin right">1</td><td class="right"><code>405</code></td><td><code>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;int&nbsp;frequency&nbsp;=&nbsp;123;</code></td></tr>
<tr><td class="green">&nbsp;</td><td class="leftmargin right">1</td><td class="right"><code>406</code></td><td><code>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;string&nbsp;roleName&nbsp;=&nbsp;&quot;roleName&quot;;</code></td></tr>
<tr><td class="green">&nbsp;</td><td class="leftmargin right">1</td><td class="right"><code>407</code></td><td><code>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;var&nbsp;template&nbsp;=&nbsp;this.CreateSingleRoleAndJob(jobName,&nbsp;frequency,&nbsp;roleName);</code></td></tr>
<tr><td class="green">&nbsp;</td><td class="leftmargin right">2</td><td class="right"><code>408</code></td><td><code>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;cache.Expect(x&nbsp;=&gt;&nbsp;x.HasExpired()).Return(true).Repeat.Once();</code></td></tr>
<tr><td class="green">&nbsp;</td><td class="leftmargin right">1</td><td class="right"><code>409</code></td><td><code>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;string&nbsp;configXml&nbsp;=&nbsp;this.Add(Add(Blank,&nbsp;TwoClients),&nbsp;Templates);</code></td></tr>
<tr><td class="green">&nbsp;</td><td class="leftmargin right">2</td><td class="right"><code>410</code></td><td><code>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;genericSerializer.Expect(x&nbsp;=&gt;&nbsp;x.Deserialize&lt;SqlToGraphiteConfig&gt;(configXml)).Return(config);</code></td></tr>
<tr><td class="green">&nbsp;</td><td class="leftmargin right">2</td><td class="right"><code>411</code></td><td><code>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;reader.Expect(x&nbsp;=&gt;&nbsp;x.GetXml()).Return(configXml);</code></td></tr>
<tr><td class="green">&nbsp;</td><td class="leftmargin right">1</td><td class="right"><code>412</code></td><td><code>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;repository.Load();</code></td></tr>
<tr><td class="gray">&nbsp;</td><td class="leftmargin right"></td><td class="right"><code>413</code></td><td class="light"><code></code></td></tr>
<tr><td class="gray">&nbsp;</td><td class="leftmargin right"></td><td class="right"><code>414</code></td><td class="light"><code>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;//Test</code></td></tr>
<tr><td class="green">&nbsp;</td><td class="leftmargin right">1</td><td class="right"><code>415</code></td><td><code>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;repository.DeleteJobFromRole(jobName,&nbsp;frequency,&nbsp;roleName);</code></td></tr>
<tr><td class="green">&nbsp;</td><td class="leftmargin right">1</td><td class="right"><code>416</code></td><td><code>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;Assert.That(template.WorkItems[0].TaskSet[0].Tasks.Count,&nbsp;Is.EqualTo(0));</code></td></tr>
<tr><td class="green">&nbsp;</td><td class="leftmargin right">1</td><td class="right"><code>417</code></td><td><code>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;cache.VerifyAllExpectations();</code></td></tr>
<tr><td class="green">&nbsp;</td><td class="leftmargin right">1</td><td class="right"><code>418</code></td><td><code>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;genericSerializer.VerifyAllExpectations();</code></td></tr>
<tr><td class="green">&nbsp;</td><td class="leftmargin right">1</td><td class="right"><code>419</code></td><td><code>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;}</code></td></tr>
<tr><td class="gray">&nbsp;</td><td class="leftmargin right"></td><td class="right"><code>420</code></td><td class="light"><code></code></td></tr>
<tr><td class="gray">&nbsp;</td><td class="leftmargin right"></td><td class="right"><code>421</code></td><td class="light"><code>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;[Test]</code></td></tr>
<tr><td class="gray">&nbsp;</td><td class="leftmargin right"></td><td class="right"><code>422</code></td><td class="light"><code>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;public&nbsp;void&nbsp;Should_remove_frequency_from_role()</code></td></tr>
<tr><td class="green">&nbsp;</td><td class="leftmargin right">1</td><td class="right"><code>423</code></td><td><code>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;{</code></td></tr>
<tr><td class="green">&nbsp;</td><td class="leftmargin right">1</td><td class="right"><code>424</code></td><td><code>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;int&nbsp;frequency&nbsp;=&nbsp;123;</code></td></tr>
<tr><td class="green">&nbsp;</td><td class="leftmargin right">1</td><td class="right"><code>425</code></td><td><code>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;int&nbsp;frequency1&nbsp;=&nbsp;321;</code></td></tr>
<tr><td class="green">&nbsp;</td><td class="leftmargin right">1</td><td class="right"><code>426</code></td><td><code>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;string&nbsp;roleName&nbsp;=&nbsp;&quot;roleName&quot;;</code></td></tr>
<tr><td class="green">&nbsp;</td><td class="leftmargin right">1</td><td class="right"><code>427</code></td><td><code>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;var&nbsp;template&nbsp;=&nbsp;this.CreateMultipoleRolesAndJobs(&quot;none&quot;,&nbsp;&quot;job1&quot;,&nbsp;frequency,&nbsp;frequency1,&nbsp;roleName);</code></td></tr>
<tr><td class="green">&nbsp;</td><td class="leftmargin right">2</td><td class="right"><code>428</code></td><td><code>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;cache.Expect(x&nbsp;=&gt;&nbsp;x.HasExpired()).Return(true).Repeat.Once();</code></td></tr>
<tr><td class="green">&nbsp;</td><td class="leftmargin right">1</td><td class="right"><code>429</code></td><td><code>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;string&nbsp;configXml&nbsp;=&nbsp;this.Add(Add(Blank,&nbsp;TwoClients),&nbsp;Templates);</code></td></tr>
<tr><td class="green">&nbsp;</td><td class="leftmargin right">2</td><td class="right"><code>430</code></td><td><code>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;genericSerializer.Expect(x&nbsp;=&gt;&nbsp;x.Deserialize&lt;SqlToGraphiteConfig&gt;(configXml)).Return(config);</code></td></tr>
<tr><td class="green">&nbsp;</td><td class="leftmargin right">2</td><td class="right"><code>431</code></td><td><code>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;reader.Expect(x&nbsp;=&gt;&nbsp;x.GetXml()).Return(configXml);</code></td></tr>
<tr><td class="green">&nbsp;</td><td class="leftmargin right">1</td><td class="right"><code>432</code></td><td><code>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;repository.Load();</code></td></tr>
<tr><td class="gray">&nbsp;</td><td class="leftmargin right"></td><td class="right"><code>433</code></td><td class="light"><code></code></td></tr>
<tr><td class="gray">&nbsp;</td><td class="leftmargin right"></td><td class="right"><code>434</code></td><td class="light"><code>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;//Test</code></td></tr>
<tr><td class="green">&nbsp;</td><td class="leftmargin right">1</td><td class="right"><code>435</code></td><td><code>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;repository.DeleteRoleFrequency(roleName,&nbsp;frequency);</code></td></tr>
<tr><td class="gray">&nbsp;</td><td class="leftmargin right"></td><td class="right"><code>436</code></td><td class="light"><code>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;//Assert</code></td></tr>
<tr><td class="green">&nbsp;</td><td class="leftmargin right">1</td><td class="right"><code>437</code></td><td><code>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;Assert.That(template.WorkItems.Count,&nbsp;Is.EqualTo(1));</code></td></tr>
<tr><td class="green">&nbsp;</td><td class="leftmargin right">1</td><td class="right"><code>438</code></td><td><code>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;Assert.That(template.WorkItems[0].TaskSet.Count,&nbsp;Is.EqualTo(1));</code></td></tr>
<tr><td class="green">&nbsp;</td><td class="leftmargin right">1</td><td class="right"><code>439</code></td><td><code>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;Assert.That(template.WorkItems[0].TaskSet[0].Tasks.Count,&nbsp;Is.EqualTo(1));</code></td></tr>
<tr><td class="green">&nbsp;</td><td class="leftmargin right">1</td><td class="right"><code>440</code></td><td><code>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;Assert.That(template.WorkItems[0].TaskSet[0].Tasks[0].JobName,&nbsp;Is.EqualTo(&quot;job1&quot;));</code></td></tr>
<tr><td class="green">&nbsp;</td><td class="leftmargin right">1</td><td class="right"><code>441</code></td><td><code>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;Assert.That(template.WorkItems[0].TaskSet[0].Frequency,&nbsp;Is.EqualTo(frequency1));</code></td></tr>
<tr><td class="green">&nbsp;</td><td class="leftmargin right">1</td><td class="right"><code>442</code></td><td><code>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;cache.VerifyAllExpectations();</code></td></tr>
<tr><td class="green">&nbsp;</td><td class="leftmargin right">1</td><td class="right"><code>443</code></td><td><code>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;genericSerializer.VerifyAllExpectations();</code></td></tr>
<tr><td class="green">&nbsp;</td><td class="leftmargin right">1</td><td class="right"><code>444</code></td><td><code>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;}</code></td></tr>
<tr><td class="gray">&nbsp;</td><td class="leftmargin right"></td><td class="right"><code>445</code></td><td class="light"><code></code></td></tr>
<tr><td class="gray">&nbsp;</td><td class="leftmargin right"></td><td class="right"><code>446</code></td><td class="light"><code>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;[Test]</code></td></tr>
<tr><td class="gray">&nbsp;</td><td class="leftmargin right"></td><td class="right"><code>447</code></td><td class="light"><code>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;public&nbsp;void&nbsp;Should_not_remove_unknown_frequency_from_role()</code></td></tr>
<tr><td class="green">&nbsp;</td><td class="leftmargin right">1</td><td class="right"><code>448</code></td><td><code>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;{</code></td></tr>
<tr><td class="green">&nbsp;</td><td class="leftmargin right">1</td><td class="right"><code>449</code></td><td><code>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;int&nbsp;frequency&nbsp;=&nbsp;333;</code></td></tr>
<tr><td class="green">&nbsp;</td><td class="leftmargin right">1</td><td class="right"><code>450</code></td><td><code>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;int&nbsp;frequency1&nbsp;=&nbsp;321;</code></td></tr>
<tr><td class="green">&nbsp;</td><td class="leftmargin right">1</td><td class="right"><code>451</code></td><td><code>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;string&nbsp;roleName&nbsp;=&nbsp;&quot;roleName&quot;;</code></td></tr>
<tr><td class="green">&nbsp;</td><td class="leftmargin right">1</td><td class="right"><code>452</code></td><td><code>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;var&nbsp;template&nbsp;=&nbsp;this.CreateMultipoleRolesAndJobs(&quot;none&quot;,&nbsp;&quot;job1&quot;,&nbsp;frequency,&nbsp;frequency1,&nbsp;roleName);</code></td></tr>
<tr><td class="green">&nbsp;</td><td class="leftmargin right">2</td><td class="right"><code>453</code></td><td><code>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;cache.Expect(x&nbsp;=&gt;&nbsp;x.HasExpired()).Return(true).Repeat.Once();</code></td></tr>
<tr><td class="green">&nbsp;</td><td class="leftmargin right">1</td><td class="right"><code>454</code></td><td><code>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;string&nbsp;configXml&nbsp;=&nbsp;this.Add(Add(Blank,&nbsp;TwoClients),&nbsp;Templates);</code></td></tr>
<tr><td class="green">&nbsp;</td><td class="leftmargin right">2</td><td class="right"><code>455</code></td><td><code>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;genericSerializer.Expect(x&nbsp;=&gt;&nbsp;x.Deserialize&lt;SqlToGraphiteConfig&gt;(configXml)).Return(config);</code></td></tr>
<tr><td class="green">&nbsp;</td><td class="leftmargin right">2</td><td class="right"><code>456</code></td><td><code>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;reader.Expect(x&nbsp;=&gt;&nbsp;x.GetXml()).Return(configXml);</code></td></tr>
<tr><td class="green">&nbsp;</td><td class="leftmargin right">1</td><td class="right"><code>457</code></td><td><code>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;repository.Load();</code></td></tr>
<tr><td class="gray">&nbsp;</td><td class="leftmargin right"></td><td class="right"><code>458</code></td><td class="light"><code></code></td></tr>
<tr><td class="gray">&nbsp;</td><td class="leftmargin right"></td><td class="right"><code>459</code></td><td class="light"><code>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;//Test</code></td></tr>
<tr><td class="green">&nbsp;</td><td class="leftmargin right">1</td><td class="right"><code>460</code></td><td><code>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;repository.DeleteRoleFrequency(roleName,&nbsp;444);</code></td></tr>
<tr><td class="gray">&nbsp;</td><td class="leftmargin right"></td><td class="right"><code>461</code></td><td class="light"><code>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;//Assert</code></td></tr>
<tr><td class="green">&nbsp;</td><td class="leftmargin right">1</td><td class="right"><code>462</code></td><td><code>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;Assert.That(template.WorkItems.Count,&nbsp;Is.EqualTo(1));</code></td></tr>
<tr><td class="green">&nbsp;</td><td class="leftmargin right">1</td><td class="right"><code>463</code></td><td><code>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;Assert.That(template.WorkItems[0].TaskSet.Count,&nbsp;Is.EqualTo(2));</code></td></tr>
<tr><td class="green">&nbsp;</td><td class="leftmargin right">1</td><td class="right"><code>464</code></td><td><code>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;Assert.That(template.WorkItems[0].TaskSet[0].Tasks[0].JobName,&nbsp;Is.EqualTo(&quot;none&quot;));</code></td></tr>
<tr><td class="green">&nbsp;</td><td class="leftmargin right">1</td><td class="right"><code>465</code></td><td><code>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;Assert.That(template.WorkItems[0].TaskSet[0].Frequency,&nbsp;Is.EqualTo(frequency));</code></td></tr>
<tr><td class="green">&nbsp;</td><td class="leftmargin right">1</td><td class="right"><code>466</code></td><td><code>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;cache.VerifyAllExpectations();</code></td></tr>
<tr><td class="green">&nbsp;</td><td class="leftmargin right">1</td><td class="right"><code>467</code></td><td><code>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;genericSerializer.VerifyAllExpectations();</code></td></tr>
<tr><td class="green">&nbsp;</td><td class="leftmargin right">1</td><td class="right"><code>468</code></td><td><code>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;}</code></td></tr>
<tr><td class="gray">&nbsp;</td><td class="leftmargin right"></td><td class="right"><code>469</code></td><td class="light"><code></code></td></tr>
<tr><td class="gray">&nbsp;</td><td class="leftmargin right"></td><td class="right"><code>470</code></td><td class="light"><code>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;[Test]</code></td></tr>
<tr><td class="gray">&nbsp;</td><td class="leftmargin right"></td><td class="right"><code>471</code></td><td class="light"><code>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;public&nbsp;void&nbsp;Should_remove_role()</code></td></tr>
<tr><td class="green">&nbsp;</td><td class="leftmargin right">1</td><td class="right"><code>472</code></td><td><code>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;{</code></td></tr>
<tr><td class="green">&nbsp;</td><td class="leftmargin right">1</td><td class="right"><code>473</code></td><td><code>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;int&nbsp;frequency&nbsp;=&nbsp;123;</code></td></tr>
<tr><td class="green">&nbsp;</td><td class="leftmargin right">1</td><td class="right"><code>474</code></td><td><code>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;string&nbsp;roleName&nbsp;=&nbsp;&quot;roleName&quot;;</code></td></tr>
<tr><td class="green">&nbsp;</td><td class="leftmargin right">1</td><td class="right"><code>475</code></td><td><code>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;var&nbsp;template&nbsp;=&nbsp;this.CreateSingleRoleAndJob(&quot;none&quot;,&nbsp;frequency,&nbsp;roleName);</code></td></tr>
<tr><td class="green">&nbsp;</td><td class="leftmargin right">2</td><td class="right"><code>476</code></td><td><code>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;cache.Expect(x&nbsp;=&gt;&nbsp;x.HasExpired()).Return(true).Repeat.Once();</code></td></tr>
<tr><td class="green">&nbsp;</td><td class="leftmargin right">1</td><td class="right"><code>477</code></td><td><code>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;string&nbsp;configXml&nbsp;=&nbsp;this.Add(Add(Blank,&nbsp;TwoClients),&nbsp;Templates);</code></td></tr>
<tr><td class="green">&nbsp;</td><td class="leftmargin right">2</td><td class="right"><code>478</code></td><td><code>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;genericSerializer.Expect(x&nbsp;=&gt;&nbsp;x.Deserialize&lt;SqlToGraphiteConfig&gt;(configXml)).Return(config);</code></td></tr>
<tr><td class="green">&nbsp;</td><td class="leftmargin right">2</td><td class="right"><code>479</code></td><td><code>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;reader.Expect(x&nbsp;=&gt;&nbsp;x.GetXml()).Return(configXml);</code></td></tr>
<tr><td class="green">&nbsp;</td><td class="leftmargin right">1</td><td class="right"><code>480</code></td><td><code>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;repository.Load();</code></td></tr>
<tr><td class="gray">&nbsp;</td><td class="leftmargin right"></td><td class="right"><code>481</code></td><td class="light"><code></code></td></tr>
<tr><td class="gray">&nbsp;</td><td class="leftmargin right"></td><td class="right"><code>482</code></td><td class="light"><code>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;//Test</code></td></tr>
<tr><td class="green">&nbsp;</td><td class="leftmargin right">1</td><td class="right"><code>483</code></td><td><code>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;repository.DeleteRole(roleName);</code></td></tr>
<tr><td class="green">&nbsp;</td><td class="leftmargin right">1</td><td class="right"><code>484</code></td><td><code>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;Assert.That(template.WorkItems.Count,&nbsp;Is.EqualTo(0));</code></td></tr>
<tr><td class="green">&nbsp;</td><td class="leftmargin right">1</td><td class="right"><code>485</code></td><td><code>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;cache.VerifyAllExpectations();</code></td></tr>
<tr><td class="green">&nbsp;</td><td class="leftmargin right">1</td><td class="right"><code>486</code></td><td><code>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;genericSerializer.VerifyAllExpectations();</code></td></tr>
<tr><td class="green">&nbsp;</td><td class="leftmargin right">1</td><td class="right"><code>487</code></td><td><code>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;}</code></td></tr>
<tr><td class="gray">&nbsp;</td><td class="leftmargin right"></td><td class="right"><code>488</code></td><td class="light"><code></code></td></tr>
<tr><td class="gray">&nbsp;</td><td class="leftmargin right"></td><td class="right"><code>489</code></td><td class="light"><code>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;[Test]</code></td></tr>
<tr><td class="gray">&nbsp;</td><td class="leftmargin right"></td><td class="right"><code>490</code></td><td class="light"><code>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;public&nbsp;void&nbsp;Should_add_role_frequency()</code></td></tr>
<tr><td class="green">&nbsp;</td><td class="leftmargin right">1</td><td class="right"><code>491</code></td><td><code>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;{</code></td></tr>
<tr><td class="green">&nbsp;</td><td class="leftmargin right">1</td><td class="right"><code>492</code></td><td><code>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;int&nbsp;frequency&nbsp;=&nbsp;123;</code></td></tr>
<tr><td class="green">&nbsp;</td><td class="leftmargin right">1</td><td class="right"><code>493</code></td><td><code>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;string&nbsp;roleName&nbsp;=&nbsp;&quot;roleName&quot;;</code></td></tr>
<tr><td class="green">&nbsp;</td><td class="leftmargin right">1</td><td class="right"><code>494</code></td><td><code>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;var&nbsp;template&nbsp;=&nbsp;this.CreateSingleRoleAndJob(&quot;none&quot;,&nbsp;frequency,&nbsp;roleName);</code></td></tr>
<tr><td class="green">&nbsp;</td><td class="leftmargin right">2</td><td class="right"><code>495</code></td><td><code>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;cache.Expect(x&nbsp;=&gt;&nbsp;x.HasExpired()).Return(true).Repeat.Once();</code></td></tr>
<tr><td class="green">&nbsp;</td><td class="leftmargin right">1</td><td class="right"><code>496</code></td><td><code>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;string&nbsp;configXml&nbsp;=&nbsp;this.Add(Add(Blank,&nbsp;TwoClients),&nbsp;Templates);</code></td></tr>
<tr><td class="green">&nbsp;</td><td class="leftmargin right">2</td><td class="right"><code>497</code></td><td><code>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;genericSerializer.Expect(x&nbsp;=&gt;&nbsp;x.Deserialize&lt;SqlToGraphiteConfig&gt;(configXml)).Return(config);</code></td></tr>
<tr><td class="green">&nbsp;</td><td class="leftmargin right">2</td><td class="right"><code>498</code></td><td><code>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;reader.Expect(x&nbsp;=&gt;&nbsp;x.GetXml()).Return(configXml);</code></td></tr>
<tr><td class="green">&nbsp;</td><td class="leftmargin right">1</td><td class="right"><code>499</code></td><td><code>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;repository.Load();</code></td></tr>
<tr><td class="gray">&nbsp;</td><td class="leftmargin right"></td><td class="right"><code>500</code></td><td class="light"><code></code></td></tr>
<tr><td class="gray">&nbsp;</td><td class="leftmargin right"></td><td class="right"><code>501</code></td><td class="light"><code>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;//Test</code></td></tr>
<tr><td class="green">&nbsp;</td><td class="leftmargin right">1</td><td class="right"><code>502</code></td><td><code>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;repository.AddRoleFrequency(frequency,&nbsp;roleName);</code></td></tr>
<tr><td class="green">&nbsp;</td><td class="leftmargin right">1</td><td class="right"><code>503</code></td><td><code>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;Assert.That(template.WorkItems.Count,&nbsp;Is.EqualTo(1));</code></td></tr>
<tr><td class="green">&nbsp;</td><td class="leftmargin right">1</td><td class="right"><code>504</code></td><td><code>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;Assert.That(template.WorkItems[0].TaskSet[1].Frequency,&nbsp;Is.EqualTo(frequency));</code></td></tr>
<tr><td class="gray">&nbsp;</td><td class="leftmargin right"></td><td class="right"><code>505</code></td><td class="light"><code></code></td></tr>
<tr><td class="green">&nbsp;</td><td class="leftmargin right">1</td><td class="right"><code>506</code></td><td><code>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;cache.VerifyAllExpectations();</code></td></tr>
<tr><td class="green">&nbsp;</td><td class="leftmargin right">1</td><td class="right"><code>507</code></td><td><code>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;genericSerializer.VerifyAllExpectations();</code></td></tr>
<tr><td class="green">&nbsp;</td><td class="leftmargin right">1</td><td class="right"><code>508</code></td><td><code>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;}</code></td></tr>
<tr><td class="gray">&nbsp;</td><td class="leftmargin right"></td><td class="right"><code>509</code></td><td class="light"><code></code></td></tr>
<tr><td class="gray">&nbsp;</td><td class="leftmargin right"></td><td class="right"><code>510</code></td><td class="light"><code>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;[Test]</code></td></tr>
<tr><td class="gray">&nbsp;</td><td class="leftmargin right"></td><td class="right"><code>511</code></td><td class="light"><code>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;public&nbsp;void&nbsp;Should_add_new_role()</code></td></tr>
<tr><td class="green">&nbsp;</td><td class="leftmargin right">1</td><td class="right"><code>512</code></td><td><code>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;{</code></td></tr>
<tr><td class="green">&nbsp;</td><td class="leftmargin right">1</td><td class="right"><code>513</code></td><td><code>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;string&nbsp;roleName&nbsp;=&nbsp;&quot;roleName&quot;;</code></td></tr>
<tr><td class="green">&nbsp;</td><td class="leftmargin right">1</td><td class="right"><code>514</code></td><td><code>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;var&nbsp;template&nbsp;=&nbsp;this.CreateSingleRoleAndJob(&quot;none&quot;,&nbsp;123,&nbsp;&quot;someRole&quot;);</code></td></tr>
<tr><td class="green">&nbsp;</td><td class="leftmargin right">2</td><td class="right"><code>515</code></td><td><code>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;cache.Expect(x&nbsp;=&gt;&nbsp;x.HasExpired()).Return(true).Repeat.Once();</code></td></tr>
<tr><td class="green">&nbsp;</td><td class="leftmargin right">1</td><td class="right"><code>516</code></td><td><code>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;string&nbsp;configXml&nbsp;=&nbsp;this.Add(Add(Blank,&nbsp;TwoClients),&nbsp;Templates);</code></td></tr>
<tr><td class="green">&nbsp;</td><td class="leftmargin right">2</td><td class="right"><code>517</code></td><td><code>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;genericSerializer.Expect(x&nbsp;=&gt;&nbsp;x.Deserialize&lt;SqlToGraphiteConfig&gt;(configXml)).Return(config);</code></td></tr>
<tr><td class="green">&nbsp;</td><td class="leftmargin right">2</td><td class="right"><code>518</code></td><td><code>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;reader.Expect(x&nbsp;=&gt;&nbsp;x.GetXml()).Return(configXml);</code></td></tr>
<tr><td class="green">&nbsp;</td><td class="leftmargin right">1</td><td class="right"><code>519</code></td><td><code>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;repository.Load();</code></td></tr>
<tr><td class="gray">&nbsp;</td><td class="leftmargin right"></td><td class="right"><code>520</code></td><td class="light"><code></code></td></tr>
<tr><td class="gray">&nbsp;</td><td class="leftmargin right"></td><td class="right"><code>521</code></td><td class="light"><code>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;//Test</code></td></tr>
<tr><td class="green">&nbsp;</td><td class="leftmargin right">1</td><td class="right"><code>522</code></td><td><code>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;repository.AddNewRole(roleName);</code></td></tr>
<tr><td class="green">&nbsp;</td><td class="leftmargin right">1</td><td class="right"><code>523</code></td><td><code>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;Assert.That(template.WorkItems.Count,&nbsp;Is.EqualTo(2));</code></td></tr>
<tr><td class="green">&nbsp;</td><td class="leftmargin right">1</td><td class="right"><code>524</code></td><td><code>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;Assert.That(template.WorkItems[1].RoleName,&nbsp;Is.EqualTo(roleName));</code></td></tr>
<tr><td class="gray">&nbsp;</td><td class="leftmargin right"></td><td class="right"><code>525</code></td><td class="light"><code></code></td></tr>
<tr><td class="green">&nbsp;</td><td class="leftmargin right">1</td><td class="right"><code>526</code></td><td><code>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;cache.VerifyAllExpectations();</code></td></tr>
<tr><td class="green">&nbsp;</td><td class="leftmargin right">1</td><td class="right"><code>527</code></td><td><code>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;genericSerializer.VerifyAllExpectations();</code></td></tr>
<tr><td class="green">&nbsp;</td><td class="leftmargin right">1</td><td class="right"><code>528</code></td><td><code>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;}</code></td></tr>
<tr><td class="gray">&nbsp;</td><td class="leftmargin right"></td><td class="right"><code>529</code></td><td class="light"><code></code></td></tr>
<tr><td class="gray">&nbsp;</td><td class="leftmargin right"></td><td class="right"><code>530</code></td><td class="light"><code>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;[Test]</code></td></tr>
<tr><td class="gray">&nbsp;</td><td class="leftmargin right"></td><td class="right"><code>531</code></td><td class="light"><code>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;public&nbsp;void&nbsp;Should_delete_host()</code></td></tr>
<tr><td class="green">&nbsp;</td><td class="leftmargin right">1</td><td class="right"><code>532</code></td><td><code>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;{</code></td></tr>
<tr><td class="green">&nbsp;</td><td class="leftmargin right">1</td><td class="right"><code>533</code></td><td><code>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;string&nbsp;hostname&nbsp;=&nbsp;&quot;abc&quot;;</code></td></tr>
<tr><td class="green">&nbsp;</td><td class="leftmargin right">1</td><td class="right"><code>534</code></td><td><code>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;config&nbsp;=&nbsp;new&nbsp;SqlToGraphiteConfig&nbsp;{&nbsp;Hosts&nbsp;=&nbsp;CreateTwoHosts()&nbsp;};</code></td></tr>
<tr><td class="green">&nbsp;</td><td class="leftmargin right">2</td><td class="right"><code>535</code></td><td><code>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;cache.Expect(x&nbsp;=&gt;&nbsp;x.HasExpired()).Return(true).Repeat.Once();</code></td></tr>
<tr><td class="green">&nbsp;</td><td class="leftmargin right">1</td><td class="right"><code>536</code></td><td><code>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;string&nbsp;configXml&nbsp;=&nbsp;&quot;&lt;xml&gt;&lt;/xml&gt;&quot;;</code></td></tr>
<tr><td class="green">&nbsp;</td><td class="leftmargin right">2</td><td class="right"><code>537</code></td><td><code>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;genericSerializer.Expect(x&nbsp;=&gt;&nbsp;x.Deserialize&lt;SqlToGraphiteConfig&gt;(configXml)).Return(config);</code></td></tr>
<tr><td class="green">&nbsp;</td><td class="leftmargin right">2</td><td class="right"><code>538</code></td><td><code>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;reader.Expect(x&nbsp;=&gt;&nbsp;x.GetXml()).Return(configXml);</code></td></tr>
<tr><td class="green">&nbsp;</td><td class="leftmargin right">1</td><td class="right"><code>539</code></td><td><code>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;repository.Load();</code></td></tr>
<tr><td class="gray">&nbsp;</td><td class="leftmargin right"></td><td class="right"><code>540</code></td><td class="light"><code>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;//Test</code></td></tr>
<tr><td class="green">&nbsp;</td><td class="leftmargin right">1</td><td class="right"><code>541</code></td><td><code>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;repository.DeleteHost(hostname);</code></td></tr>
<tr><td class="green">&nbsp;</td><td class="leftmargin right">1</td><td class="right"><code>542</code></td><td><code>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;Assert.That(config.Hosts.Count,&nbsp;Is.EqualTo(1));</code></td></tr>
<tr><td class="green">&nbsp;</td><td class="leftmargin right">1</td><td class="right"><code>543</code></td><td><code>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;Assert.That(config.Hosts[0].Name,&nbsp;Is.EqualTo(&quot;def&quot;));</code></td></tr>
<tr><td class="gray">&nbsp;</td><td class="leftmargin right"></td><td class="right"><code>544</code></td><td class="light"><code></code></td></tr>
<tr><td class="green">&nbsp;</td><td class="leftmargin right">1</td><td class="right"><code>545</code></td><td><code>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;cache.VerifyAllExpectations();</code></td></tr>
<tr><td class="green">&nbsp;</td><td class="leftmargin right">1</td><td class="right"><code>546</code></td><td><code>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;genericSerializer.VerifyAllExpectations();</code></td></tr>
<tr><td class="green">&nbsp;</td><td class="leftmargin right">1</td><td class="right"><code>547</code></td><td><code>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;}</code></td></tr>
<tr><td class="gray">&nbsp;</td><td class="leftmargin right"></td><td class="right"><code>548</code></td><td class="light"><code></code></td></tr>
<tr><td class="gray">&nbsp;</td><td class="leftmargin right"></td><td class="right"><code>549</code></td><td class="light"><code>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;[Test]</code></td></tr>
<tr><td class="gray">&nbsp;</td><td class="leftmargin right"></td><td class="right"><code>550</code></td><td class="light"><code>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;public&nbsp;void&nbsp;Should_add_role_to_host()</code></td></tr>
<tr><td class="green">&nbsp;</td><td class="leftmargin right">1</td><td class="right"><code>551</code></td><td><code>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;{</code></td></tr>
<tr><td class="green">&nbsp;</td><td class="leftmargin right">1</td><td class="right"><code>552</code></td><td><code>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;string&nbsp;hostname&nbsp;=&nbsp;&quot;abc&quot;;</code></td></tr>
<tr><td class="green">&nbsp;</td><td class="leftmargin right">1</td><td class="right"><code>553</code></td><td><code>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;string&nbsp;roleName&nbsp;=&nbsp;&quot;newRole&quot;;</code></td></tr>
<tr><td class="green">&nbsp;</td><td class="leftmargin right">1</td><td class="right"><code>554</code></td><td><code>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;config&nbsp;=&nbsp;new&nbsp;SqlToGraphiteConfig&nbsp;{&nbsp;Hosts&nbsp;=&nbsp;CreateTwoHosts()&nbsp;};</code></td></tr>
<tr><td class="green">&nbsp;</td><td class="leftmargin right">2</td><td class="right"><code>555</code></td><td><code>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;cache.Expect(x&nbsp;=&gt;&nbsp;x.HasExpired()).Return(true).Repeat.Once();</code></td></tr>
<tr><td class="green">&nbsp;</td><td class="leftmargin right">1</td><td class="right"><code>556</code></td><td><code>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;string&nbsp;configXml&nbsp;=&nbsp;&quot;&lt;xml&gt;&lt;/xml&gt;&quot;;</code></td></tr>
<tr><td class="green">&nbsp;</td><td class="leftmargin right">2</td><td class="right"><code>557</code></td><td><code>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;genericSerializer.Expect(x&nbsp;=&gt;&nbsp;x.Deserialize&lt;SqlToGraphiteConfig&gt;(configXml)).Return(config);</code></td></tr>
<tr><td class="green">&nbsp;</td><td class="leftmargin right">2</td><td class="right"><code>558</code></td><td><code>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;reader.Expect(x&nbsp;=&gt;&nbsp;x.GetXml()).Return(configXml);</code></td></tr>
<tr><td class="green">&nbsp;</td><td class="leftmargin right">1</td><td class="right"><code>559</code></td><td><code>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;repository.Load();</code></td></tr>
<tr><td class="gray">&nbsp;</td><td class="leftmargin right"></td><td class="right"><code>560</code></td><td class="light"><code>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;//Test</code></td></tr>
<tr><td class="green">&nbsp;</td><td class="leftmargin right">1</td><td class="right"><code>561</code></td><td><code>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;repository.AddRoleToHost(roleName,&nbsp;hostname);</code></td></tr>
<tr><td class="green">&nbsp;</td><td class="leftmargin right">1</td><td class="right"><code>562</code></td><td><code>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;Assert.That(config.Hosts[0].Roles.Count,&nbsp;Is.EqualTo(2));</code></td></tr>
<tr><td class="green">&nbsp;</td><td class="leftmargin right">1</td><td class="right"><code>563</code></td><td><code>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;Assert.That(config.Hosts[0].Roles[1].Name,&nbsp;Is.EqualTo(roleName));</code></td></tr>
<tr><td class="gray">&nbsp;</td><td class="leftmargin right"></td><td class="right"><code>564</code></td><td class="light"><code></code></td></tr>
<tr><td class="green">&nbsp;</td><td class="leftmargin right">1</td><td class="right"><code>565</code></td><td><code>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;cache.VerifyAllExpectations();</code></td></tr>
<tr><td class="green">&nbsp;</td><td class="leftmargin right">1</td><td class="right"><code>566</code></td><td><code>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;genericSerializer.VerifyAllExpectations();</code></td></tr>
<tr><td class="green">&nbsp;</td><td class="leftmargin right">1</td><td class="right"><code>567</code></td><td><code>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;}</code></td></tr>
<tr><td class="gray">&nbsp;</td><td class="leftmargin right"></td><td class="right"><code>568</code></td><td class="light"><code></code></td></tr>
<tr><td class="gray">&nbsp;</td><td class="leftmargin right"></td><td class="right"><code>569</code></td><td class="light"><code>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;[Test]</code></td></tr>
<tr><td class="gray">&nbsp;</td><td class="leftmargin right"></td><td class="right"><code>570</code></td><td class="light"><code>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;public&nbsp;void&nbsp;Should_delete_role_from_host()</code></td></tr>
<tr><td class="green">&nbsp;</td><td class="leftmargin right">1</td><td class="right"><code>571</code></td><td><code>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;{</code></td></tr>
<tr><td class="green">&nbsp;</td><td class="leftmargin right">1</td><td class="right"><code>572</code></td><td><code>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;string&nbsp;hostname&nbsp;=&nbsp;&quot;abc&quot;;</code></td></tr>
<tr><td class="green">&nbsp;</td><td class="leftmargin right">1</td><td class="right"><code>573</code></td><td><code>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;string&nbsp;roleName&nbsp;=&nbsp;&quot;123&quot;;</code></td></tr>
<tr><td class="green">&nbsp;</td><td class="leftmargin right">1</td><td class="right"><code>574</code></td><td><code>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;config&nbsp;=&nbsp;new&nbsp;SqlToGraphiteConfig&nbsp;{&nbsp;Hosts&nbsp;=&nbsp;CreateTwoHosts()&nbsp;};</code></td></tr>
<tr><td class="green">&nbsp;</td><td class="leftmargin right">2</td><td class="right"><code>575</code></td><td><code>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;cache.Expect(x&nbsp;=&gt;&nbsp;x.HasExpired()).Return(true).Repeat.Once();</code></td></tr>
<tr><td class="green">&nbsp;</td><td class="leftmargin right">1</td><td class="right"><code>576</code></td><td><code>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;string&nbsp;configXml&nbsp;=&nbsp;&quot;&lt;xml&gt;&lt;/xml&gt;&quot;;</code></td></tr>
<tr><td class="green">&nbsp;</td><td class="leftmargin right">2</td><td class="right"><code>577</code></td><td><code>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;genericSerializer.Expect(x&nbsp;=&gt;&nbsp;x.Deserialize&lt;SqlToGraphiteConfig&gt;(configXml)).Return(config);</code></td></tr>
<tr><td class="green">&nbsp;</td><td class="leftmargin right">2</td><td class="right"><code>578</code></td><td><code>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;reader.Expect(x&nbsp;=&gt;&nbsp;x.GetXml()).Return(configXml);</code></td></tr>
<tr><td class="green">&nbsp;</td><td class="leftmargin right">1</td><td class="right"><code>579</code></td><td><code>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;repository.Load();</code></td></tr>
<tr><td class="gray">&nbsp;</td><td class="leftmargin right"></td><td class="right"><code>580</code></td><td class="light"><code>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;//Test</code></td></tr>
<tr><td class="green">&nbsp;</td><td class="leftmargin right">1</td><td class="right"><code>581</code></td><td><code>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;repository.DeleteRoleFromHost(roleName,&nbsp;hostname);</code></td></tr>
<tr><td class="green">&nbsp;</td><td class="leftmargin right">1</td><td class="right"><code>582</code></td><td><code>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;Assert.That(config.Hosts[0].Roles.Count,&nbsp;Is.EqualTo(0));</code></td></tr>
<tr><td class="gray">&nbsp;</td><td class="leftmargin right"></td><td class="right"><code>583</code></td><td class="light"><code></code></td></tr>
<tr><td class="green">&nbsp;</td><td class="leftmargin right">1</td><td class="right"><code>584</code></td><td><code>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;cache.VerifyAllExpectations();</code></td></tr>
<tr><td class="green">&nbsp;</td><td class="leftmargin right">1</td><td class="right"><code>585</code></td><td><code>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;genericSerializer.VerifyAllExpectations();</code></td></tr>
<tr><td class="green">&nbsp;</td><td class="leftmargin right">1</td><td class="right"><code>586</code></td><td><code>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;}</code></td></tr>
<tr><td class="gray">&nbsp;</td><td class="leftmargin right"></td><td class="right"><code>587</code></td><td class="light"><code></code></td></tr>
<tr><td class="gray">&nbsp;</td><td class="leftmargin right"></td><td class="right"><code>588</code></td><td class="light"><code>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;[Test]</code></td></tr>
<tr><td class="gray">&nbsp;</td><td class="leftmargin right"></td><td class="right"><code>589</code></td><td class="light"><code>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;public&nbsp;void&nbsp;Should_throw_exception_trying_delete_role_from_host_where_host_does_not_exsist()</code></td></tr>
<tr><td class="green">&nbsp;</td><td class="leftmargin right">1</td><td class="right"><code>590</code></td><td><code>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;{</code></td></tr>
<tr><td class="green">&nbsp;</td><td class="leftmargin right">1</td><td class="right"><code>591</code></td><td><code>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;string&nbsp;hostname&nbsp;=&nbsp;&quot;notFound&quot;;</code></td></tr>
<tr><td class="green">&nbsp;</td><td class="leftmargin right">1</td><td class="right"><code>592</code></td><td><code>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;string&nbsp;roleName&nbsp;=&nbsp;&quot;123&quot;;</code></td></tr>
<tr><td class="green">&nbsp;</td><td class="leftmargin right">1</td><td class="right"><code>593</code></td><td><code>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;config&nbsp;=&nbsp;new&nbsp;SqlToGraphiteConfig&nbsp;{&nbsp;Hosts&nbsp;=&nbsp;CreateTwoHosts()&nbsp;};</code></td></tr>
<tr><td class="green">&nbsp;</td><td class="leftmargin right">2</td><td class="right"><code>594</code></td><td><code>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;cache.Expect(x&nbsp;=&gt;&nbsp;x.HasExpired()).Return(true).Repeat.Once();</code></td></tr>
<tr><td class="green">&nbsp;</td><td class="leftmargin right">1</td><td class="right"><code>595</code></td><td><code>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;string&nbsp;configXml&nbsp;=&nbsp;&quot;&lt;xml&gt;&lt;/xml&gt;&quot;;</code></td></tr>
<tr><td class="green">&nbsp;</td><td class="leftmargin right">2</td><td class="right"><code>596</code></td><td><code>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;genericSerializer.Expect(x&nbsp;=&gt;&nbsp;x.Deserialize&lt;SqlToGraphiteConfig&gt;(configXml)).Return(config);</code></td></tr>
<tr><td class="green">&nbsp;</td><td class="leftmargin right">2</td><td class="right"><code>597</code></td><td><code>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;reader.Expect(x&nbsp;=&gt;&nbsp;x.GetXml()).Return(configXml);</code></td></tr>
<tr><td class="green">&nbsp;</td><td class="leftmargin right">1</td><td class="right"><code>598</code></td><td><code>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;repository.Load();</code></td></tr>
<tr><td class="gray">&nbsp;</td><td class="leftmargin right"></td><td class="right"><code>599</code></td><td class="light"><code>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;//Test</code></td></tr>
<tr><td class="green">&nbsp;</td><td class="leftmargin right">2</td><td class="right"><code>600</code></td><td><code>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;var&nbsp;ex&nbsp;=&nbsp;Assert.Throws&lt;HostNotFoundException&gt;(()&nbsp;=&gt;&nbsp;repository.DeleteRoleFromHost(roleName,&nbsp;hostname));</code></td></tr>
<tr><td class="green">&nbsp;</td><td class="leftmargin right">1</td><td class="right"><code>601</code></td><td><code>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;Assert.That(ex.Message,&nbsp;Is.EqualTo(string.Format(&quot;Host&nbsp;{0}&nbsp;has&nbsp;not&nbsp;been&nbsp;found&quot;,&nbsp;hostname)));</code></td></tr>
<tr><td class="green">&nbsp;</td><td class="leftmargin right">1</td><td class="right"><code>602</code></td><td><code>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;cache.VerifyAllExpectations();</code></td></tr>
<tr><td class="green">&nbsp;</td><td class="leftmargin right">1</td><td class="right"><code>603</code></td><td><code>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;genericSerializer.VerifyAllExpectations();</code></td></tr>
<tr><td class="green">&nbsp;</td><td class="leftmargin right">1</td><td class="right"><code>604</code></td><td><code>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;}</code></td></tr>
<tr><td class="gray">&nbsp;</td><td class="leftmargin right"></td><td class="right"><code>605</code></td><td class="light"><code></code></td></tr>
<tr><td class="gray">&nbsp;</td><td class="leftmargin right"></td><td class="right"><code>606</code></td><td class="light"><code>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;[Test]</code></td></tr>
<tr><td class="gray">&nbsp;</td><td class="leftmargin right"></td><td class="right"><code>607</code></td><td class="light"><code>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;public&nbsp;void&nbsp;Should_throw_exception_trying_delete_role_from_host_where_role_does_not_exsist()</code></td></tr>
<tr><td class="green">&nbsp;</td><td class="leftmargin right">1</td><td class="right"><code>608</code></td><td><code>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;{</code></td></tr>
<tr><td class="green">&nbsp;</td><td class="leftmargin right">1</td><td class="right"><code>609</code></td><td><code>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;string&nbsp;hostname&nbsp;=&nbsp;&quot;abc&quot;;</code></td></tr>
<tr><td class="green">&nbsp;</td><td class="leftmargin right">1</td><td class="right"><code>610</code></td><td><code>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;string&nbsp;roleName&nbsp;=&nbsp;&quot;notFound&quot;;</code></td></tr>
<tr><td class="green">&nbsp;</td><td class="leftmargin right">1</td><td class="right"><code>611</code></td><td><code>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;config&nbsp;=&nbsp;new&nbsp;SqlToGraphiteConfig&nbsp;{&nbsp;Hosts&nbsp;=&nbsp;CreateTwoHosts()&nbsp;};</code></td></tr>
<tr><td class="green">&nbsp;</td><td class="leftmargin right">2</td><td class="right"><code>612</code></td><td><code>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;cache.Expect(x&nbsp;=&gt;&nbsp;x.HasExpired()).Return(true).Repeat.Once();</code></td></tr>
<tr><td class="green">&nbsp;</td><td class="leftmargin right">1</td><td class="right"><code>613</code></td><td><code>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;string&nbsp;configXml&nbsp;=&nbsp;&quot;&lt;xml&gt;&lt;/xml&gt;&quot;;</code></td></tr>
<tr><td class="green">&nbsp;</td><td class="leftmargin right">2</td><td class="right"><code>614</code></td><td><code>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;genericSerializer.Expect(x&nbsp;=&gt;&nbsp;x.Deserialize&lt;SqlToGraphiteConfig&gt;(configXml)).Return(config);</code></td></tr>
<tr><td class="green">&nbsp;</td><td class="leftmargin right">2</td><td class="right"><code>615</code></td><td><code>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;reader.Expect(x&nbsp;=&gt;&nbsp;x.GetXml()).Return(configXml);</code></td></tr>
<tr><td class="green">&nbsp;</td><td class="leftmargin right">1</td><td class="right"><code>616</code></td><td><code>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;repository.Load();</code></td></tr>
<tr><td class="gray">&nbsp;</td><td class="leftmargin right"></td><td class="right"><code>617</code></td><td class="light"><code>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;//Test</code></td></tr>
<tr><td class="green">&nbsp;</td><td class="leftmargin right">2</td><td class="right"><code>618</code></td><td><code>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;var&nbsp;ex&nbsp;=&nbsp;Assert.Throws&lt;RoleNotFoundException&gt;(()&nbsp;=&gt;&nbsp;repository.DeleteRoleFromHost(roleName,&nbsp;hostname));</code></td></tr>
<tr><td class="green">&nbsp;</td><td class="leftmargin right">1</td><td class="right"><code>619</code></td><td><code>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;Assert.That(ex.Message,&nbsp;Is.EqualTo(string.Format(&quot;Role&nbsp;{0}&nbsp;is&nbsp;not&nbsp;found&quot;,&nbsp;roleName)));</code></td></tr>
<tr><td class="green">&nbsp;</td><td class="leftmargin right">1</td><td class="right"><code>620</code></td><td><code>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;cache.VerifyAllExpectations();</code></td></tr>
<tr><td class="green">&nbsp;</td><td class="leftmargin right">1</td><td class="right"><code>621</code></td><td><code>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;genericSerializer.VerifyAllExpectations();</code></td></tr>
<tr><td class="green">&nbsp;</td><td class="leftmargin right">1</td><td class="right"><code>622</code></td><td><code>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;}</code></td></tr>
<tr><td class="gray">&nbsp;</td><td class="leftmargin right"></td><td class="right"><code>623</code></td><td class="light"><code></code></td></tr>
<tr><td class="gray">&nbsp;</td><td class="leftmargin right"></td><td class="right"><code>624</code></td><td class="light"><code>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;[Test]</code></td></tr>
<tr><td class="gray">&nbsp;</td><td class="leftmargin right"></td><td class="right"><code>625</code></td><td class="light"><code>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;public&nbsp;void&nbsp;Should_throw_exception_if_host_not_found_tring_to_add_role_to_host()</code></td></tr>
<tr><td class="green">&nbsp;</td><td class="leftmargin right">1</td><td class="right"><code>626</code></td><td><code>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;{</code></td></tr>
<tr><td class="green">&nbsp;</td><td class="leftmargin right">1</td><td class="right"><code>627</code></td><td><code>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;string&nbsp;hostname&nbsp;=&nbsp;&quot;notFound&quot;;</code></td></tr>
<tr><td class="green">&nbsp;</td><td class="leftmargin right">1</td><td class="right"><code>628</code></td><td><code>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;string&nbsp;roleName&nbsp;=&nbsp;&quot;newRole&quot;;</code></td></tr>
<tr><td class="green">&nbsp;</td><td class="leftmargin right">1</td><td class="right"><code>629</code></td><td><code>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;config&nbsp;=&nbsp;new&nbsp;SqlToGraphiteConfig&nbsp;{&nbsp;Hosts&nbsp;=&nbsp;CreateTwoHosts()&nbsp;};</code></td></tr>
<tr><td class="green">&nbsp;</td><td class="leftmargin right">2</td><td class="right"><code>630</code></td><td><code>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;cache.Expect(x&nbsp;=&gt;&nbsp;x.HasExpired()).Return(true).Repeat.Once();</code></td></tr>
<tr><td class="green">&nbsp;</td><td class="leftmargin right">1</td><td class="right"><code>631</code></td><td><code>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;string&nbsp;configXml&nbsp;=&nbsp;&quot;&lt;xml&gt;&lt;/xml&gt;&quot;;</code></td></tr>
<tr><td class="green">&nbsp;</td><td class="leftmargin right">2</td><td class="right"><code>632</code></td><td><code>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;genericSerializer.Expect(x&nbsp;=&gt;&nbsp;x.Deserialize&lt;SqlToGraphiteConfig&gt;(configXml)).Return(config);</code></td></tr>
<tr><td class="green">&nbsp;</td><td class="leftmargin right">2</td><td class="right"><code>633</code></td><td><code>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;reader.Expect(x&nbsp;=&gt;&nbsp;x.GetXml()).Return(configXml);</code></td></tr>
<tr><td class="green">&nbsp;</td><td class="leftmargin right">1</td><td class="right"><code>634</code></td><td><code>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;repository.Load();</code></td></tr>
<tr><td class="gray">&nbsp;</td><td class="leftmargin right"></td><td class="right"><code>635</code></td><td class="light"><code>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;//Test</code></td></tr>
<tr><td class="green">&nbsp;</td><td class="leftmargin right">2</td><td class="right"><code>636</code></td><td><code>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;var&nbsp;ex&nbsp;=&nbsp;Assert.Throws&lt;HostNotFoundException&gt;(()&nbsp;=&gt;&nbsp;repository.AddRoleToHost(roleName,&nbsp;hostname));</code></td></tr>
<tr><td class="green">&nbsp;</td><td class="leftmargin right">1</td><td class="right"><code>637</code></td><td><code>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;Assert.That(ex.Message,&nbsp;Is.EqualTo(string.Format(&quot;Host&nbsp;{0}&nbsp;has&nbsp;not&nbsp;been&nbsp;found&quot;,&nbsp;hostname)));</code></td></tr>
<tr><td class="gray">&nbsp;</td><td class="leftmargin right"></td><td class="right"><code>638</code></td><td class="light"><code></code></td></tr>
<tr><td class="green">&nbsp;</td><td class="leftmargin right">1</td><td class="right"><code>639</code></td><td><code>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;cache.VerifyAllExpectations();</code></td></tr>
<tr><td class="green">&nbsp;</td><td class="leftmargin right">1</td><td class="right"><code>640</code></td><td><code>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;genericSerializer.VerifyAllExpectations();</code></td></tr>
<tr><td class="green">&nbsp;</td><td class="leftmargin right">1</td><td class="right"><code>641</code></td><td><code>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;}</code></td></tr>
<tr><td class="gray">&nbsp;</td><td class="leftmargin right"></td><td class="right"><code>642</code></td><td class="light"><code></code></td></tr>
<tr><td class="gray">&nbsp;</td><td class="leftmargin right"></td><td class="right"><code>643</code></td><td class="light"><code>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;[Test]</code></td></tr>
<tr><td class="gray">&nbsp;</td><td class="leftmargin right"></td><td class="right"><code>644</code></td><td class="light"><code>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;public&nbsp;void&nbsp;Should_throw_exception_if_host_not_found()</code></td></tr>
<tr><td class="green">&nbsp;</td><td class="leftmargin right">1</td><td class="right"><code>645</code></td><td><code>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;{</code></td></tr>
<tr><td class="green">&nbsp;</td><td class="leftmargin right">1</td><td class="right"><code>646</code></td><td><code>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;string&nbsp;hostname&nbsp;=&nbsp;&quot;notFound&quot;;</code></td></tr>
<tr><td class="green">&nbsp;</td><td class="leftmargin right">1</td><td class="right"><code>647</code></td><td><code>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;config&nbsp;=&nbsp;new&nbsp;SqlToGraphiteConfig&nbsp;{&nbsp;Hosts&nbsp;=&nbsp;CreateTwoHosts()&nbsp;};</code></td></tr>
<tr><td class="green">&nbsp;</td><td class="leftmargin right">2</td><td class="right"><code>648</code></td><td><code>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;cache.Expect(x&nbsp;=&gt;&nbsp;x.HasExpired()).Return(true).Repeat.Once();</code></td></tr>
<tr><td class="green">&nbsp;</td><td class="leftmargin right">1</td><td class="right"><code>649</code></td><td><code>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;string&nbsp;configXml&nbsp;=&nbsp;&quot;&lt;xml&gt;&lt;/xml&gt;&quot;;</code></td></tr>
<tr><td class="green">&nbsp;</td><td class="leftmargin right">2</td><td class="right"><code>650</code></td><td><code>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;genericSerializer.Expect(x&nbsp;=&gt;&nbsp;x.Deserialize&lt;SqlToGraphiteConfig&gt;(configXml)).Return(config);</code></td></tr>
<tr><td class="green">&nbsp;</td><td class="leftmargin right">2</td><td class="right"><code>651</code></td><td><code>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;reader.Expect(x&nbsp;=&gt;&nbsp;x.GetXml()).Return(configXml);</code></td></tr>
<tr><td class="green">&nbsp;</td><td class="leftmargin right">1</td><td class="right"><code>652</code></td><td><code>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;repository.Load();</code></td></tr>
<tr><td class="gray">&nbsp;</td><td class="leftmargin right"></td><td class="right"><code>653</code></td><td class="light"><code>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;//Test</code></td></tr>
<tr><td class="green">&nbsp;</td><td class="leftmargin right">2</td><td class="right"><code>654</code></td><td><code>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;var&nbsp;ex&nbsp;=&nbsp;Assert.Throws&lt;HostNotFoundException&gt;(()&nbsp;=&gt;&nbsp;repository.DeleteHost(hostname));</code></td></tr>
<tr><td class="green">&nbsp;</td><td class="leftmargin right">1</td><td class="right"><code>655</code></td><td><code>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;Assert.That(ex.Message,&nbsp;Is.EqualTo(string.Format(&quot;Host&nbsp;{0}&nbsp;has&nbsp;not&nbsp;been&nbsp;found&quot;,&nbsp;hostname)));</code></td></tr>
<tr><td class="green">&nbsp;</td><td class="leftmargin right">1</td><td class="right"><code>656</code></td><td><code>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;Assert.That(config.Hosts.Count,&nbsp;Is.EqualTo(2));</code></td></tr>
<tr><td class="green">&nbsp;</td><td class="leftmargin right">1</td><td class="right"><code>657</code></td><td><code>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;Assert.That(config.Hosts[0].Name,&nbsp;Is.EqualTo(&quot;abc&quot;));</code></td></tr>
<tr><td class="green">&nbsp;</td><td class="leftmargin right">1</td><td class="right"><code>658</code></td><td><code>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;cache.VerifyAllExpectations();</code></td></tr>
<tr><td class="green">&nbsp;</td><td class="leftmargin right">1</td><td class="right"><code>659</code></td><td><code>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;genericSerializer.VerifyAllExpectations();</code></td></tr>
<tr><td class="green">&nbsp;</td><td class="leftmargin right">1</td><td class="right"><code>660</code></td><td><code>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;}</code></td></tr>
<tr><td class="gray">&nbsp;</td><td class="leftmargin right"></td><td class="right"><code>661</code></td><td class="light"><code></code></td></tr>
<tr><td class="gray">&nbsp;</td><td class="leftmargin right"></td><td class="right"><code>662</code></td><td class="light"><code>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;private&nbsp;static&nbsp;List&lt;Host&gt;&nbsp;CreateTwoHosts()</code></td></tr>
<tr><td class="green">&nbsp;</td><td class="leftmargin right">7</td><td class="right"><code>663</code></td><td><code>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;{</code></td></tr>
<tr><td class="green">&nbsp;</td><td class="leftmargin right">7</td><td class="right"><code>664</code></td><td><code>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;var&nbsp;hosts&nbsp;=&nbsp;new&nbsp;List&lt;Host&gt;();</code></td></tr>
<tr><td class="green">&nbsp;</td><td class="leftmargin right">7</td><td class="right"><code>665</code></td><td><code>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;var&nbsp;host1&nbsp;=&nbsp;new&nbsp;Host&nbsp;{&nbsp;Name&nbsp;=&nbsp;&quot;abc&quot;&nbsp;};</code></td></tr>
<tr><td class="green">&nbsp;</td><td class="leftmargin right">7</td><td class="right"><code>666</code></td><td><code>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;host1.Roles.Add(new&nbsp;Role&nbsp;{&nbsp;Name&nbsp;=&nbsp;&quot;123&quot;&nbsp;});</code></td></tr>
<tr><td class="green">&nbsp;</td><td class="leftmargin right">7</td><td class="right"><code>667</code></td><td><code>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;var&nbsp;host2&nbsp;=&nbsp;new&nbsp;Host&nbsp;{&nbsp;Name&nbsp;=&nbsp;&quot;def&quot;&nbsp;};</code></td></tr>
<tr><td class="green">&nbsp;</td><td class="leftmargin right">7</td><td class="right"><code>668</code></td><td><code>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;host2.Roles.Add(new&nbsp;Role&nbsp;{&nbsp;Name&nbsp;=&nbsp;&quot;456&quot;&nbsp;});</code></td></tr>
<tr><td class="green">&nbsp;</td><td class="leftmargin right">7</td><td class="right"><code>669</code></td><td><code>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;host2.Roles.Add(new&nbsp;Role&nbsp;{&nbsp;Name&nbsp;=&nbsp;&quot;789&quot;&nbsp;});</code></td></tr>
<tr><td class="green">&nbsp;</td><td class="leftmargin right">7</td><td class="right"><code>670</code></td><td><code>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;hosts.Add(host1);</code></td></tr>
<tr><td class="green">&nbsp;</td><td class="leftmargin right">7</td><td class="right"><code>671</code></td><td><code>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;hosts.Add(host2);</code></td></tr>
<tr><td class="green">&nbsp;</td><td class="leftmargin right">7</td><td class="right"><code>672</code></td><td><code>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;return&nbsp;hosts;</code></td></tr>
<tr><td class="green">&nbsp;</td><td class="leftmargin right">7</td><td class="right"><code>673</code></td><td><code>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;}</code></td></tr>
<tr><td class="gray">&nbsp;</td><td class="leftmargin right"></td><td class="right"><code>674</code></td><td class="light"><code></code></td></tr>
<tr><td class="gray">&nbsp;</td><td class="leftmargin right"></td><td class="right"><code>675</code></td><td class="light"><code>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;[Test]</code></td></tr>
<tr><td class="gray">&nbsp;</td><td class="leftmargin right"></td><td class="right"><code>676</code></td><td class="light"><code>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;public&nbsp;void&nbsp;Should_throw_job_not_found_exception()</code></td></tr>
<tr><td class="green">&nbsp;</td><td class="leftmargin right">1</td><td class="right"><code>677</code></td><td><code>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;{</code></td></tr>
<tr><td class="green">&nbsp;</td><td class="leftmargin right">2</td><td class="right"><code>678</code></td><td><code>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;cache.Expect(x&nbsp;=&gt;&nbsp;x.HasExpired()).Return(true).Repeat.Once();</code></td></tr>
<tr><td class="green">&nbsp;</td><td class="leftmargin right">1</td><td class="right"><code>679</code></td><td><code>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;string&nbsp;configXml&nbsp;=&nbsp;this.Add(Add(Blank,&nbsp;TwoClients),&nbsp;Templates);</code></td></tr>
<tr><td class="green">&nbsp;</td><td class="leftmargin right">2</td><td class="right"><code>680</code></td><td><code>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;genericSerializer.Expect(x&nbsp;=&gt;&nbsp;x.Deserialize&lt;SqlToGraphiteConfig&gt;(configXml)).Return(config);</code></td></tr>
<tr><td class="green">&nbsp;</td><td class="leftmargin right">2</td><td class="right"><code>681</code></td><td><code>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;reader.Expect(x&nbsp;=&gt;&nbsp;x.GetXml()).Return(configXml);</code></td></tr>
<tr><td class="green">&nbsp;</td><td class="leftmargin right">1</td><td class="right"><code>682</code></td><td><code>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;repository.Load();</code></td></tr>
<tr><td class="gray">&nbsp;</td><td class="leftmargin right"></td><td class="right"><code>683</code></td><td class="light"><code></code></td></tr>
<tr><td class="gray">&nbsp;</td><td class="leftmargin right"></td><td class="right"><code>684</code></td><td class="light"><code>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;//Test</code></td></tr>
<tr><td class="green">&nbsp;</td><td class="leftmargin right">2</td><td class="right"><code>685</code></td><td><code>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;Assert.Throws&lt;JobNotFoundException&gt;(()&nbsp;=&gt;&nbsp;repository.DeleteJobFromRole(&quot;notFound&quot;,&nbsp;123,&nbsp;&quot;roleName&quot;));</code></td></tr>
<tr><td class="green">&nbsp;</td><td class="leftmargin right">1</td><td class="right"><code>686</code></td><td><code>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;cache.VerifyAllExpectations();</code></td></tr>
<tr><td class="green">&nbsp;</td><td class="leftmargin right">1</td><td class="right"><code>687</code></td><td><code>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;genericSerializer.VerifyAllExpectations();</code></td></tr>
<tr><td class="green">&nbsp;</td><td class="leftmargin right">1</td><td class="right"><code>688</code></td><td><code>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;}</code></td></tr>
<tr><td class="gray">&nbsp;</td><td class="leftmargin right"></td><td class="right"><code>689</code></td><td class="light"><code></code></td></tr>
<tr><td class="gray">&nbsp;</td><td class="leftmargin right"></td><td class="right"><code>690</code></td><td class="light"><code>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;private&nbsp;Template&nbsp;CreateSingleRoleAndJob(string&nbsp;jobName,&nbsp;int&nbsp;frequency,&nbsp;string&nbsp;roleName)</code></td></tr>
<tr><td class="green">&nbsp;</td><td class="leftmargin right">4</td><td class="right"><code>691</code></td><td><code>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;{</code></td></tr>
<tr><td class="green">&nbsp;</td><td class="leftmargin right">4</td><td class="right"><code>692</code></td><td><code>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;var&nbsp;ts&nbsp;=&nbsp;new&nbsp;TaskSet&nbsp;{&nbsp;Frequency&nbsp;=&nbsp;frequency,&nbsp;Tasks&nbsp;=&nbsp;new&nbsp;List&lt;Task&gt;()&nbsp;};</code></td></tr>
<tr><td class="green">&nbsp;</td><td class="leftmargin right">4</td><td class="right"><code>693</code></td><td><code>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;var&nbsp;task&nbsp;=&nbsp;new&nbsp;Task&nbsp;{&nbsp;JobName&nbsp;=&nbsp;jobName&nbsp;};</code></td></tr>
<tr><td class="green">&nbsp;</td><td class="leftmargin right">4</td><td class="right"><code>694</code></td><td><code>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;ts.Tasks.Add(task);</code></td></tr>
<tr><td class="green">&nbsp;</td><td class="leftmargin right">4</td><td class="right"><code>695</code></td><td><code>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;var&nbsp;template&nbsp;=&nbsp;new&nbsp;Template();</code></td></tr>
<tr><td class="green">&nbsp;</td><td class="leftmargin right">4</td><td class="right"><code>696</code></td><td><code>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;var&nbsp;wi&nbsp;=&nbsp;new&nbsp;WorkItems&nbsp;{&nbsp;RoleName&nbsp;=&nbsp;roleName,&nbsp;TaskSet&nbsp;=&nbsp;new&nbsp;List&lt;TaskSet&gt;()&nbsp;};</code></td></tr>
<tr><td class="green">&nbsp;</td><td class="leftmargin right">4</td><td class="right"><code>697</code></td><td><code>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;wi.TaskSet.Add(ts);</code></td></tr>
<tr><td class="green">&nbsp;</td><td class="leftmargin right">4</td><td class="right"><code>698</code></td><td><code>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;var&nbsp;wilist&nbsp;=&nbsp;new&nbsp;List&lt;WorkItems&gt;&nbsp;{&nbsp;wi&nbsp;};</code></td></tr>
<tr><td class="green">&nbsp;</td><td class="leftmargin right">4</td><td class="right"><code>699</code></td><td><code>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;template.WorkItems&nbsp;=&nbsp;wilist;</code></td></tr>
<tr><td class="green">&nbsp;</td><td class="leftmargin right">4</td><td class="right"><code>700</code></td><td><code>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;this.config.Templates.Add(template);</code></td></tr>
<tr><td class="green">&nbsp;</td><td class="leftmargin right">4</td><td class="right"><code>701</code></td><td><code>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;return&nbsp;template;</code></td></tr>
<tr><td class="green">&nbsp;</td><td class="leftmargin right">4</td><td class="right"><code>702</code></td><td><code>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;}</code></td></tr>
<tr><td class="gray">&nbsp;</td><td class="leftmargin right"></td><td class="right"><code>703</code></td><td class="light"><code></code></td></tr>
<tr><td class="gray">&nbsp;</td><td class="leftmargin right"></td><td class="right"><code>704</code></td><td class="light"><code>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;private&nbsp;Template&nbsp;CreateMultipoleRolesAndJobs(string&nbsp;jobName,&nbsp;string&nbsp;jobName1,&nbsp;int&nbsp;frequency,&nbsp;int&nbsp;frequency1,&nbsp;str</code></td></tr>
<tr><td class="green">&nbsp;</td><td class="leftmargin right">2</td><td class="right"><code>705</code></td><td><code>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;{</code></td></tr>
<tr><td class="green">&nbsp;</td><td class="leftmargin right">2</td><td class="right"><code>706</code></td><td><code>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;var&nbsp;ts1&nbsp;=&nbsp;new&nbsp;TaskSet&nbsp;{&nbsp;Frequency&nbsp;=&nbsp;frequency,&nbsp;Tasks&nbsp;=&nbsp;new&nbsp;List&lt;Task&gt;()&nbsp;};</code></td></tr>
<tr><td class="green">&nbsp;</td><td class="leftmargin right">2</td><td class="right"><code>707</code></td><td><code>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;var&nbsp;ts2&nbsp;=&nbsp;new&nbsp;TaskSet&nbsp;{&nbsp;Frequency&nbsp;=&nbsp;frequency1,&nbsp;Tasks&nbsp;=&nbsp;new&nbsp;List&lt;Task&gt;()&nbsp;};</code></td></tr>
<tr><td class="green">&nbsp;</td><td class="leftmargin right">2</td><td class="right"><code>708</code></td><td><code>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;var&nbsp;task&nbsp;=&nbsp;new&nbsp;Task&nbsp;{&nbsp;JobName&nbsp;=&nbsp;jobName&nbsp;};</code></td></tr>
<tr><td class="green">&nbsp;</td><td class="leftmargin right">2</td><td class="right"><code>709</code></td><td><code>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;ts1.Tasks.Add(task);</code></td></tr>
<tr><td class="green">&nbsp;</td><td class="leftmargin right">2</td><td class="right"><code>710</code></td><td><code>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;var&nbsp;task1&nbsp;=&nbsp;new&nbsp;Task&nbsp;{&nbsp;JobName&nbsp;=&nbsp;jobName1&nbsp;};</code></td></tr>
<tr><td class="green">&nbsp;</td><td class="leftmargin right">2</td><td class="right"><code>711</code></td><td><code>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;ts2.Tasks.Add(task1);</code></td></tr>
<tr><td class="green">&nbsp;</td><td class="leftmargin right">2</td><td class="right"><code>712</code></td><td><code>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;var&nbsp;template&nbsp;=&nbsp;new&nbsp;Template();</code></td></tr>
<tr><td class="green">&nbsp;</td><td class="leftmargin right">2</td><td class="right"><code>713</code></td><td><code>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;var&nbsp;wi&nbsp;=&nbsp;new&nbsp;WorkItems&nbsp;{&nbsp;RoleName&nbsp;=&nbsp;roleName,&nbsp;TaskSet&nbsp;=&nbsp;new&nbsp;List&lt;TaskSet&gt;()&nbsp;};</code></td></tr>
<tr><td class="green">&nbsp;</td><td class="leftmargin right">2</td><td class="right"><code>714</code></td><td><code>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;wi.TaskSet.Add(ts1);</code></td></tr>
<tr><td class="green">&nbsp;</td><td class="leftmargin right">2</td><td class="right"><code>715</code></td><td><code>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;wi.TaskSet.Add(ts2);</code></td></tr>
<tr><td class="green">&nbsp;</td><td class="leftmargin right">2</td><td class="right"><code>716</code></td><td><code>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;var&nbsp;wilist&nbsp;=&nbsp;new&nbsp;List&lt;WorkItems&gt;&nbsp;{&nbsp;wi&nbsp;};</code></td></tr>
<tr><td class="green">&nbsp;</td><td class="leftmargin right">2</td><td class="right"><code>717</code></td><td><code>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;template.WorkItems&nbsp;=&nbsp;wilist;</code></td></tr>
<tr><td class="green">&nbsp;</td><td class="leftmargin right">2</td><td class="right"><code>718</code></td><td><code>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;this.config.Templates.Add(template);</code></td></tr>
<tr><td class="green">&nbsp;</td><td class="leftmargin right">2</td><td class="right"><code>719</code></td><td><code>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;return&nbsp;template;</code></td></tr>
<tr><td class="green">&nbsp;</td><td class="leftmargin right">2</td><td class="right"><code>720</code></td><td><code>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;}</code></td></tr>
<tr><td class="gray">&nbsp;</td><td class="leftmargin right"></td><td class="right"><code>721</code></td><td class="light"><code></code></td></tr>
<tr><td class="gray">&nbsp;</td><td class="leftmargin right"></td><td class="right"><code>722</code></td><td class="light"><code>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;[Test]</code></td></tr>
<tr><td class="gray">&nbsp;</td><td class="leftmargin right"></td><td class="right"><code>723</code></td><td class="light"><code>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;public&nbsp;void&nbsp;Should_validate_sucessfully()</code></td></tr>
<tr><td class="green">&nbsp;</td><td class="leftmargin right">1</td><td class="right"><code>724</code></td><td><code>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;{</code></td></tr>
<tr><td class="green">&nbsp;</td><td class="leftmargin right">1</td><td class="right"><code>725</code></td><td><code>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;string&nbsp;configXml&nbsp;=&nbsp;this.Add(Add(Add(Blank,&nbsp;TwoHosts),&nbsp;Templates),&nbsp;TwoClients);</code></td></tr>
<tr><td class="green">&nbsp;</td><td class="leftmargin right">2</td><td class="right"><code>726</code></td><td><code>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;genericSerializer.Expect(x&nbsp;=&gt;&nbsp;x.Deserialize&lt;SqlToGraphiteConfig&gt;(configXml)).Return(config);</code></td></tr>
<tr><td class="green">&nbsp;</td><td class="leftmargin right">1</td><td class="right"><code>727</code></td><td><code>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;this.AddTwoClientsToConfig();</code></td></tr>
<tr><td class="gray">&nbsp;</td><td class="leftmargin right"></td><td class="right"><code>728</code></td><td class="light"><code></code></td></tr>
<tr><td class="green">&nbsp;</td><td class="leftmargin right">2</td><td class="right"><code>729</code></td><td><code>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;reader.Expect(x&nbsp;=&gt;&nbsp;x.GetXml()).Return(configXml);</code></td></tr>
<tr><td class="green">&nbsp;</td><td class="leftmargin right">2</td><td class="right"><code>730</code></td><td><code>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;cache.Expect(x&nbsp;=&gt;&nbsp;x.HasExpired()).Return(true).Repeat.Once();</code></td></tr>
<tr><td class="gray">&nbsp;</td><td class="leftmargin right"></td><td class="right"><code>731</code></td><td class="light"><code>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;//Test</code></td></tr>
<tr><td class="green">&nbsp;</td><td class="leftmargin right">1</td><td class="right"><code>732</code></td><td><code>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;repository.Load();</code></td></tr>
<tr><td class="gray">&nbsp;</td><td class="leftmargin right"></td><td class="right"><code>733</code></td><td class="light"><code></code></td></tr>
<tr><td class="green">&nbsp;</td><td class="leftmargin right">1</td><td class="right"><code>734</code></td><td><code>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;var&nbsp;job&nbsp;=&nbsp;new&nbsp;SqlServerClient();</code></td></tr>
<tr><td class="green">&nbsp;</td><td class="leftmargin right">1</td><td class="right"><code>735</code></td><td><code>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;job.Name&nbsp;=&nbsp;&quot;fred&quot;;</code></td></tr>
<tr><td class="green">&nbsp;</td><td class="leftmargin right">1</td><td class="right"><code>736</code></td><td><code>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;job.ClientName&nbsp;=&nbsp;&quot;ClientName&quot;;</code></td></tr>
<tr><td class="green">&nbsp;</td><td class="leftmargin right">1</td><td class="right"><code>737</code></td><td><code>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;repository.AddJob(job);</code></td></tr>
<tr><td class="green">&nbsp;</td><td class="leftmargin right">1</td><td class="right"><code>738</code></td><td><code>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;repository.AddHost(&quot;hostname&quot;,&nbsp;new&nbsp;List&lt;Role&gt;&nbsp;{&nbsp;new&nbsp;Role&nbsp;{&nbsp;Name&nbsp;=&nbsp;&quot;roleName&quot;&nbsp;}&nbsp;});</code></td></tr>
<tr><td class="green">&nbsp;</td><td class="leftmargin right">1</td><td class="right"><code>739</code></td><td><code>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;repository.AddTask(new&nbsp;TaskDetails(&quot;roleName&quot;,&nbsp;1000,&nbsp;&quot;fred&quot;));</code></td></tr>
<tr><td class="gray">&nbsp;</td><td class="leftmargin right"></td><td class="right"><code>740</code></td><td class="light"><code></code></td></tr>
<tr><td class="gray">&nbsp;</td><td class="leftmargin right"></td><td class="right"><code>741</code></td><td class="light"><code>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;//Assert</code></td></tr>
<tr><td class="green">&nbsp;</td><td class="leftmargin right">1</td><td class="right"><code>742</code></td><td><code>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;Assert.That(repository.Validate(),&nbsp;Is.EqualTo(true));</code></td></tr>
<tr><td class="green">&nbsp;</td><td class="leftmargin right">1</td><td class="right"><code>743</code></td><td><code>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;Assert.That(repository.Errors.Count,&nbsp;Is.EqualTo(0));</code></td></tr>
<tr><td class="green">&nbsp;</td><td class="leftmargin right">1</td><td class="right"><code>744</code></td><td><code>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;reader.VerifyAllExpectations();</code></td></tr>
<tr><td class="green">&nbsp;</td><td class="leftmargin right">1</td><td class="right"><code>745</code></td><td><code>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;cache.VerifyAllExpectations();</code></td></tr>
<tr><td class="green">&nbsp;</td><td class="leftmargin right">1</td><td class="right"><code>746</code></td><td><code>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;genericSerializer.VerifyAllExpectations();</code></td></tr>
<tr><td class="green">&nbsp;</td><td class="leftmargin right">1</td><td class="right"><code>747</code></td><td><code>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;}</code></td></tr>
<tr><td class="gray">&nbsp;</td><td class="leftmargin right"></td><td class="right"><code>748</code></td><td class="light"><code></code></td></tr>
<tr><td class="gray">&nbsp;</td><td class="leftmargin right"></td><td class="right"><code>749</code></td><td class="light"><code>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;[Test]</code></td></tr>
<tr><td class="gray">&nbsp;</td><td class="leftmargin right"></td><td class="right"><code>750</code></td><td class="light"><code>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;public&nbsp;void&nbsp;Should_return_failed_to_load_config_error()</code></td></tr>
<tr><td class="green">&nbsp;</td><td class="leftmargin right">1</td><td class="right"><code>751</code></td><td><code>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;{</code></td></tr>
<tr><td class="green">&nbsp;</td><td class="leftmargin right">1</td><td class="right"><code>752</code></td><td><code>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;var&nbsp;configXml&nbsp;=&nbsp;this.Add(Blank,&nbsp;TwoClients);</code></td></tr>
<tr><td class="green">&nbsp;</td><td class="leftmargin right">1</td><td class="right"><code>753</code></td><td><code>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;this.AddTwoClientsToConfig();</code></td></tr>
<tr><td class="green">&nbsp;</td><td class="leftmargin right">2</td><td class="right"><code>754</code></td><td><code>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;genericSerializer.Expect(x&nbsp;=&gt;&nbsp;x.Deserialize&lt;SqlToGraphiteConfig&gt;(configXml)).Return(new&nbsp;SqlToGraphiteConfig(</code></td></tr>
<tr><td class="green">&nbsp;</td><td class="leftmargin right">2</td><td class="right"><code>755</code></td><td><code>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;reader.Expect(x&nbsp;=&gt;&nbsp;x.GetXml()).Return(Blank).Repeat.Twice();</code></td></tr>
<tr><td class="green">&nbsp;</td><td class="leftmargin right">2</td><td class="right"><code>756</code></td><td><code>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;reader.Expect(x&nbsp;=&gt;&nbsp;x.GetXml()).Return(configXml).Repeat.Once();</code></td></tr>
<tr><td class="green">&nbsp;</td><td class="leftmargin right">2</td><td class="right"><code>757</code></td><td><code>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;sleep.Expect(x&nbsp;=&gt;&nbsp;x.Sleep(sleepTime)).Repeat.Twice();</code></td></tr>
<tr><td class="green">&nbsp;</td><td class="leftmargin right">2</td><td class="right"><code>758</code></td><td><code>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;cache.Expect(x&nbsp;=&gt;&nbsp;x.HasExpired()).Return(true);</code></td></tr>
<tr><td class="green">&nbsp;</td><td class="leftmargin right">1</td><td class="right"><code>759</code></td><td><code>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;repository.Load();</code></td></tr>
<tr><td class="gray">&nbsp;</td><td class="leftmargin right"></td><td class="right"><code>760</code></td><td class="light"><code>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;//Assert.That(repository.Errors.Count,&nbsp;Is.EqualTo(1));</code></td></tr>
<tr><td class="gray">&nbsp;</td><td class="leftmargin right"></td><td class="right"><code>761</code></td><td class="light"><code>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;//Assert.That(repository.Validate(),&nbsp;Is.EqualTo(false));</code></td></tr>
<tr><td class="gray">&nbsp;</td><td class="leftmargin right"></td><td class="right"><code>762</code></td><td class="light"><code>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;//Assert.That(repository.Errors.Count,&nbsp;Is.EqualTo(4));</code></td></tr>
<tr><td class="gray">&nbsp;</td><td class="leftmargin right"></td><td class="right"><code>763</code></td><td class="light"><code>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;//Assert.That(repository.Errors[0],&nbsp;Is.EqualTo(ConfigRepository.FailedToLoadAnyConfiguration));</code></td></tr>
<tr><td class="green">&nbsp;</td><td class="leftmargin right">1</td><td class="right"><code>764</code></td><td><code>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;reader.VerifyAllExpectations();</code></td></tr>
<tr><td class="green">&nbsp;</td><td class="leftmargin right">1</td><td class="right"><code>765</code></td><td><code>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;cache.VerifyAllExpectations();</code></td></tr>
<tr><td class="green">&nbsp;</td><td class="leftmargin right">1</td><td class="right"><code>766</code></td><td><code>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;sleep.VerifyAllExpectations();</code></td></tr>
<tr><td class="green">&nbsp;</td><td class="leftmargin right">1</td><td class="right"><code>767</code></td><td><code>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;genericSerializer.VerifyAllExpectations();</code></td></tr>
<tr><td class="green">&nbsp;</td><td class="leftmargin right">1</td><td class="right"><code>768</code></td><td><code>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;}</code></td></tr>
<tr><td class="gray">&nbsp;</td><td class="leftmargin right"></td><td class="right"><code>769</code></td><td class="light"><code>&nbsp;&nbsp;&nbsp;&nbsp;}</code></td></tr>
<tr><td class="gray">&nbsp;</td><td class="leftmargin right"></td><td class="right"><code>770</code></td><td class="light"><code>}</code></td></tr>
</table>
<div class="footer">Generated by: ReportGenerator 1.6.1.0<br />31/10/2012 - 09:09:45<br /><a href="http://www.palmmedia.de">www.palmmedia.de</a></div></div></body></html>