<!DOCTYPE html PUBLIC "-//W3C//DTD XHTML 1.0 Strict//EN" "http://www.w3.org/TR/xhtml1/DTD/xhtml1-strict.dtd">
<html><head><title>SqlToGraphite.Plugin.Oracle.UnitTests.With_OracleClient - Coverage Report</title>
<meta http-equiv="content-type" content="text/html; charset=UTF-8" />
<link rel="stylesheet" type="text/css" href="report.css" />

</head><body><div class="container">
<h1>Summary</h1>
<table class="overview">
<colgroup>
<col width="130" />
<col />
</colgroup>
<tr><th>Class:</th><td>SqlToGraphite.Plugin.Oracle.UnitTests.With_OracleClient</td></tr>
<tr><th>Assembly:</th><td>SqlToGraphite.Plugin.Oracle.UnitTests</td></tr>
<tr><th>File(s):</th><td><a href="#CgitperryOfPeekSqlToGraphitetestSqlToGraphitePluginOracleUnitTestsWith_OracleClientcs">C:\git\perryOfPeek\SqlToGraphite\test\SqlToGraphite.Plugin.Oracle.UnitTests\With_OracleClient.cs</a></td></tr>
<tr><th>Coverage:</th><td>0%</td></tr>
<tr><th>Covered lines:</th><td>0</td></tr>
<tr><th>Coverable lines:</th><td>53</td></tr>
<tr><th>Total lines:</th><td>112</td></tr>
</table>
<h1>Metrics</h1>
<table class="overview">
<tr><th>Method</th><th>Cyclomatic Complexity</th><th>Sequence Coverage</th><th>Branch Coverage</th></tr>
<tr><td title="System.Void SqlToGraphite.Plugin.Oracle.UnitTests.With_OracleClient::SetUp()">SetUp()</td><td>1</td><td>0</td><td>0</td></tr>
<tr><td title="System.Void SqlToGraphite.Plugin.Oracle.UnitTests.With_OracleClient::Should_get_result()">Should_get_result()</td><td>1</td><td>0</td><td>0</td></tr>
<tr><td title="System.Void SqlToGraphite.Plugin.Oracle.UnitTests.With_OracleClient::Should_get_result_with_different_order()">Should_get_result_with_different_order()</td><td>1</td><td>0</td><td>0</td></tr>
<tr><td title="System.Void SqlToGraphite.Plugin.Oracle.UnitTests.With_OracleClient::Should_get_result_with_date()">Should_get_result_with_date()</td><td>1</td><td>0</td><td>0</td></tr>
<tr><td title="System.Void SqlToGraphite.Plugin.Oracle.UnitTests.With_OracleClient::Should_get_result_with_date_and_name_set_in_select()">Should_get_result_with_date_and_name_set_in_select()</td><td>1</td><td>0</td><td>0</td></tr>
<tr><td title="System.Void SqlToGraphite.Plugin.Oracle.UnitTests.With_OracleClient::Should_get_multiple_results()">Should_get_multiple_results()</td><td>1</td><td>0</td><td>0</td></tr>
</table>
<h1>File(s)</h1>
<h2 id="CgitperryOfPeekSqlToGraphitetestSqlToGraphitePluginOracleUnitTestsWith_OracleClientcs">C:\git\perryOfPeek\SqlToGraphite\test\SqlToGraphite.Plugin.Oracle.UnitTests\With_OracleClient.cs</h2>
<table>
<tr><th></th><th>#</th><th>Line</th><th>Coverage</th></tr>
<tr><td class="gray">&nbsp;</td><td class="leftmargin right"></td><td class="right"><code>1</code></td><td class="light"><code>using&nbsp;System;</code></td></tr>
<tr><td class="gray">&nbsp;</td><td class="leftmargin right"></td><td class="right"><code>2</code></td><td class="light"><code></code></td></tr>
<tr><td class="gray">&nbsp;</td><td class="leftmargin right"></td><td class="right"><code>3</code></td><td class="light"><code>using&nbsp;SqlToGraphiteInterfaces;</code></td></tr>
<tr><td class="gray">&nbsp;</td><td class="leftmargin right"></td><td class="right"><code>4</code></td><td class="light"><code></code></td></tr>
<tr><td class="gray">&nbsp;</td><td class="leftmargin right"></td><td class="right"><code>5</code></td><td class="light"><code>using&nbsp;log4net;</code></td></tr>
<tr><td class="gray">&nbsp;</td><td class="leftmargin right"></td><td class="right"><code>6</code></td><td class="light"><code>using&nbsp;NUnit.Framework;</code></td></tr>
<tr><td class="gray">&nbsp;</td><td class="leftmargin right"></td><td class="right"><code>7</code></td><td class="light"><code>using&nbsp;Rhino.Mocks;</code></td></tr>
<tr><td class="gray">&nbsp;</td><td class="leftmargin right"></td><td class="right"><code>8</code></td><td class="light"><code></code></td></tr>
<tr><td class="gray">&nbsp;</td><td class="leftmargin right"></td><td class="right"><code>9</code></td><td class="light"><code>namespace&nbsp;SqlToGraphite.Plugin.Oracle.UnitTests</code></td></tr>
<tr><td class="gray">&nbsp;</td><td class="leftmargin right"></td><td class="right"><code>10</code></td><td class="light"><code>{</code></td></tr>
<tr><td class="gray">&nbsp;</td><td class="leftmargin right"></td><td class="right"><code>11</code></td><td class="light"><code>&nbsp;&nbsp;&nbsp;&nbsp;//&nbsp;ReSharper&nbsp;disable&nbsp;InconsistentNaming</code></td></tr>
<tr><td class="gray">&nbsp;</td><td class="leftmargin right"></td><td class="right"><code>12</code></td><td class="light"><code>&nbsp;&nbsp;&nbsp;&nbsp;[TestFixture,&nbsp;Ignore()]</code></td></tr>
<tr><td class="gray">&nbsp;</td><td class="leftmargin right"></td><td class="right"><code>13</code></td><td class="light"><code>&nbsp;&nbsp;&nbsp;&nbsp;public&nbsp;class&nbsp;With_OracleClient</code></td></tr>
<tr><td class="gray">&nbsp;</td><td class="leftmargin right"></td><td class="right"><code>14</code></td><td class="light"><code>&nbsp;&nbsp;&nbsp;&nbsp;{</code></td></tr>
<tr><td class="gray">&nbsp;</td><td class="leftmargin right"></td><td class="right"><code>15</code></td><td class="light"><code>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;private&nbsp;const&nbsp;string&nbsp;Cs&nbsp;=&nbsp;&quot;Data&nbsp;Source=localhost:1521/XE;User&nbsp;Id=owain;Password=abcd1234;&quot;;</code></td></tr>
<tr><td class="gray">&nbsp;</td><td class="leftmargin right"></td><td class="right"><code>16</code></td><td class="light"><code></code></td></tr>
<tr><td class="gray">&nbsp;</td><td class="leftmargin right"></td><td class="right"><code>17</code></td><td class="light"><code>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;private&nbsp;const&nbsp;string&nbsp;SimpleQuery&nbsp;=&nbsp;&quot;SELECT&nbsp;234&nbsp;,&nbsp;DATEADD(day,11,GETDATE())&quot;;</code></td></tr>
<tr><td class="gray">&nbsp;</td><td class="leftmargin right"></td><td class="right"><code>18</code></td><td class="light"><code></code></td></tr>
<tr><td class="gray">&nbsp;</td><td class="leftmargin right"></td><td class="right"><code>19</code></td><td class="light"><code>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;private&nbsp;const&nbsp;string&nbsp;SimplePath&nbsp;=&nbsp;&quot;Some.Path&quot;;</code></td></tr>
<tr><td class="gray">&nbsp;</td><td class="leftmargin right"></td><td class="right"><code>20</code></td><td class="light"><code></code></td></tr>
<tr><td class="gray">&nbsp;</td><td class="leftmargin right"></td><td class="right"><code>21</code></td><td class="light"><code>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;private&nbsp;OracleClient&nbsp;param;</code></td></tr>
<tr><td class="gray">&nbsp;</td><td class="leftmargin right"></td><td class="right"><code>22</code></td><td class="light"><code></code></td></tr>
<tr><td class="gray">&nbsp;</td><td class="leftmargin right"></td><td class="right"><code>23</code></td><td class="light"><code>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;private&nbsp;ILog&nbsp;log;</code></td></tr>
<tr><td class="gray">&nbsp;</td><td class="leftmargin right"></td><td class="right"><code>24</code></td><td class="light"><code></code></td></tr>
<tr><td class="gray">&nbsp;</td><td class="leftmargin right"></td><td class="right"><code>25</code></td><td class="light"><code>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;private&nbsp;IEncryption&nbsp;encryption;</code></td></tr>
<tr><td class="gray">&nbsp;</td><td class="leftmargin right"></td><td class="right"><code>26</code></td><td class="light"><code></code></td></tr>
<tr><td class="gray">&nbsp;</td><td class="leftmargin right"></td><td class="right"><code>27</code></td><td class="light"><code>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;private&nbsp;OracleClient&nbsp;client;</code></td></tr>
<tr><td class="gray">&nbsp;</td><td class="leftmargin right"></td><td class="right"><code>28</code></td><td class="light"><code></code></td></tr>
<tr><td class="gray">&nbsp;</td><td class="leftmargin right"></td><td class="right"><code>29</code></td><td class="light"><code>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;[SetUp]</code></td></tr>
<tr><td class="gray">&nbsp;</td><td class="leftmargin right"></td><td class="right"><code>30</code></td><td class="light"><code>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;public&nbsp;void&nbsp;SetUp()</code></td></tr>
<tr><td class="red">&nbsp;</td><td class="leftmargin right">0</td><td class="right"><code>31</code></td><td><code>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;{</code></td></tr>
<tr><td class="red">&nbsp;</td><td class="leftmargin right">0</td><td class="right"><code>32</code></td><td><code>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;var&nbsp;e&nbsp;=&nbsp;new&nbsp;Encryption();</code></td></tr>
<tr><td class="gray">&nbsp;</td><td class="leftmargin right"></td><td class="right"><code>33</code></td><td class="light"><code></code></td></tr>
<tr><td class="red">&nbsp;</td><td class="leftmargin right">0</td><td class="right"><code>34</code></td><td><code>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;param&nbsp;=&nbsp;new&nbsp;OracleClient&nbsp;{&nbsp;Name&nbsp;=&nbsp;&quot;TestName&quot;,&nbsp;ClientName&nbsp;=&nbsp;&quot;TestClientName&quot;,&nbsp;ConnectionString&nbsp;=&nbsp;&quot;&quot;,&nbsp;Path&nbsp;=&nbsp;&quot;</code></td></tr>
<tr><td class="red">&nbsp;</td><td class="leftmargin right">0</td><td class="right"><code>35</code></td><td><code>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;param.ConnectionString&nbsp;=&nbsp;e.Encrypt(Cs);</code></td></tr>
<tr><td class="red">&nbsp;</td><td class="leftmargin right">0</td><td class="right"><code>36</code></td><td><code>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;log&nbsp;=&nbsp;MockRepository.GenerateMock&lt;ILog&gt;();</code></td></tr>
<tr><td class="red">&nbsp;</td><td class="leftmargin right">0</td><td class="right"><code>37</code></td><td><code>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;encryption&nbsp;=&nbsp;MockRepository.GenerateMock&lt;IEncryption&gt;();</code></td></tr>
<tr><td class="red">&nbsp;</td><td class="leftmargin right">0</td><td class="right"><code>38</code></td><td><code>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;encryption.Expect(x&nbsp;=&gt;&nbsp;x.Decrypt(e.Encrypt(Cs))).Return(Cs);</code></td></tr>
<tr><td class="gray">&nbsp;</td><td class="leftmargin right"></td><td class="right"><code>39</code></td><td class="light"><code>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;//encryption.Expect(x&nbsp;=&gt;&nbsp;x.Encrypt(&quot;abc&quot;)).Return(ConnectionString);</code></td></tr>
<tr><td class="gray">&nbsp;</td><td class="leftmargin right"></td><td class="right"><code>40</code></td><td class="light"><code></code></td></tr>
<tr><td class="red">&nbsp;</td><td class="leftmargin right">0</td><td class="right"><code>41</code></td><td><code>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;}</code></td></tr>
<tr><td class="gray">&nbsp;</td><td class="leftmargin right"></td><td class="right"><code>42</code></td><td class="light"><code></code></td></tr>
<tr><td class="gray">&nbsp;</td><td class="leftmargin right"></td><td class="right"><code>43</code></td><td class="light"><code>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;[Test]</code></td></tr>
<tr><td class="gray">&nbsp;</td><td class="leftmargin right"></td><td class="right"><code>44</code></td><td class="light"><code>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;public&nbsp;void&nbsp;Should_get_result()</code></td></tr>
<tr><td class="red">&nbsp;</td><td class="leftmargin right">0</td><td class="right"><code>45</code></td><td><code>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;{</code></td></tr>
<tr><td class="red">&nbsp;</td><td class="leftmargin right">0</td><td class="right"><code>46</code></td><td><code>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;var&nbsp;name&nbsp;=&nbsp;Guid.NewGuid().ToString();</code></td></tr>
<tr><td class="red">&nbsp;</td><td class="leftmargin right">0</td><td class="right"><code>47</code></td><td><code>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;param.Sql&nbsp;=&nbsp;string.Format(&quot;SELECT&nbsp;level,&nbsp;&#39;{0}&#39;,&nbsp;&nbsp;to_date(&#39;2012-FEB-03&nbsp;00:00:01&#39;,&nbsp;&#39;YYYY-MON-DD&nbsp;HH24:MI:SS&#39;)&nbsp;F</code></td></tr>
<tr><td class="red">&nbsp;</td><td class="leftmargin right">0</td><td class="right"><code>48</code></td><td><code>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;client&nbsp;=&nbsp;new&nbsp;OracleClient(log,&nbsp;param,&nbsp;encryption);</code></td></tr>
<tr><td class="gray">&nbsp;</td><td class="leftmargin right"></td><td class="right"><code>49</code></td><td class="light"><code></code></td></tr>
<tr><td class="gray">&nbsp;</td><td class="leftmargin right"></td><td class="right"><code>50</code></td><td class="light"><code>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;//Test</code></td></tr>
<tr><td class="red">&nbsp;</td><td class="leftmargin right">0</td><td class="right"><code>51</code></td><td><code>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;var&nbsp;results&nbsp;=&nbsp;client.Get();</code></td></tr>
<tr><td class="gray">&nbsp;</td><td class="leftmargin right"></td><td class="right"><code>52</code></td><td class="light"><code>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;//Asset</code></td></tr>
<tr><td class="red">&nbsp;</td><td class="leftmargin right">0</td><td class="right"><code>53</code></td><td><code>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;Assert.That(results.Count,&nbsp;Is.EqualTo(100));</code></td></tr>
<tr><td class="red">&nbsp;</td><td class="leftmargin right">0</td><td class="right"><code>54</code></td><td><code>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;Assert.That(results[0].Name,&nbsp;Is.EqualTo(name));</code></td></tr>
<tr><td class="red">&nbsp;</td><td class="leftmargin right">0</td><td class="right"><code>55</code></td><td><code>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;Assert.That(results[0].TimeStamp,&nbsp;Is.EqualTo(new&nbsp;DateTime(2012,&nbsp;02,&nbsp;03,&nbsp;00,&nbsp;00,&nbsp;01)));</code></td></tr>
<tr><td class="red">&nbsp;</td><td class="leftmargin right">0</td><td class="right"><code>56</code></td><td><code>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;}</code></td></tr>
<tr><td class="gray">&nbsp;</td><td class="leftmargin right"></td><td class="right"><code>57</code></td><td class="light"><code></code></td></tr>
<tr><td class="gray">&nbsp;</td><td class="leftmargin right"></td><td class="right"><code>58</code></td><td class="light"><code>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;[Test]</code></td></tr>
<tr><td class="gray">&nbsp;</td><td class="leftmargin right"></td><td class="right"><code>59</code></td><td class="light"><code>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;public&nbsp;void&nbsp;Should_get_result_with_different_order()</code></td></tr>
<tr><td class="red">&nbsp;</td><td class="leftmargin right">0</td><td class="right"><code>60</code></td><td><code>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;{</code></td></tr>
<tr><td class="red">&nbsp;</td><td class="leftmargin right">0</td><td class="right"><code>61</code></td><td><code>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;var&nbsp;name&nbsp;=&nbsp;Guid.NewGuid().ToString();</code></td></tr>
<tr><td class="red">&nbsp;</td><td class="leftmargin right">0</td><td class="right"><code>62</code></td><td><code>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;param.Sql&nbsp;=&nbsp;string.Format(&quot;SELECT&nbsp;&nbsp;&#39;{0}&#39;,&nbsp;&nbsp;to_date(&#39;2012-FEB-03&nbsp;00:00:01&#39;,&nbsp;&#39;YYYY-MON-DD&nbsp;HH24:MI:SS&#39;),level&nbsp;F</code></td></tr>
<tr><td class="red">&nbsp;</td><td class="leftmargin right">0</td><td class="right"><code>63</code></td><td><code>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;client&nbsp;=&nbsp;new&nbsp;OracleClient(log,&nbsp;param,&nbsp;encryption);</code></td></tr>
<tr><td class="gray">&nbsp;</td><td class="leftmargin right"></td><td class="right"><code>64</code></td><td class="light"><code>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;//Test</code></td></tr>
<tr><td class="red">&nbsp;</td><td class="leftmargin right">0</td><td class="right"><code>65</code></td><td><code>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;var&nbsp;results&nbsp;=&nbsp;client.Get();</code></td></tr>
<tr><td class="gray">&nbsp;</td><td class="leftmargin right"></td><td class="right"><code>66</code></td><td class="light"><code>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;//Asset</code></td></tr>
<tr><td class="red">&nbsp;</td><td class="leftmargin right">0</td><td class="right"><code>67</code></td><td><code>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;Assert.That(results.Count,&nbsp;Is.EqualTo(100));</code></td></tr>
<tr><td class="red">&nbsp;</td><td class="leftmargin right">0</td><td class="right"><code>68</code></td><td><code>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;Assert.That(results[0].Name,&nbsp;Is.EqualTo(name));</code></td></tr>
<tr><td class="red">&nbsp;</td><td class="leftmargin right">0</td><td class="right"><code>69</code></td><td><code>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;Assert.That(results[0].TimeStamp,&nbsp;Is.EqualTo(new&nbsp;DateTime(2012,&nbsp;02,&nbsp;03,&nbsp;00,&nbsp;00,&nbsp;01)));</code></td></tr>
<tr><td class="red">&nbsp;</td><td class="leftmargin right">0</td><td class="right"><code>70</code></td><td><code>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;}</code></td></tr>
<tr><td class="gray">&nbsp;</td><td class="leftmargin right"></td><td class="right"><code>71</code></td><td class="light"><code></code></td></tr>
<tr><td class="gray">&nbsp;</td><td class="leftmargin right"></td><td class="right"><code>72</code></td><td class="light"><code>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;[Test]</code></td></tr>
<tr><td class="gray">&nbsp;</td><td class="leftmargin right"></td><td class="right"><code>73</code></td><td class="light"><code>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;public&nbsp;void&nbsp;Should_get_result_with_date()</code></td></tr>
<tr><td class="red">&nbsp;</td><td class="leftmargin right">0</td><td class="right"><code>74</code></td><td><code>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;{</code></td></tr>
<tr><td class="red">&nbsp;</td><td class="leftmargin right">0</td><td class="right"><code>75</code></td><td><code>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;var&nbsp;name&nbsp;=&nbsp;Guid.NewGuid().ToString();</code></td></tr>
<tr><td class="red">&nbsp;</td><td class="leftmargin right">0</td><td class="right"><code>76</code></td><td><code>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;param.Sql&nbsp;=&nbsp;string.Format(&quot;SELECT&nbsp;&nbsp;&#39;{0}&#39;,&nbsp;&nbsp;to_date(&#39;2012-FEB-03&nbsp;00:00:01&#39;,&nbsp;&#39;YYYY-MON-DD&nbsp;HH24:MI:SS&#39;)&nbsp;,&nbsp;234&nbsp;F</code></td></tr>
<tr><td class="red">&nbsp;</td><td class="leftmargin right">0</td><td class="right"><code>77</code></td><td><code>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;client&nbsp;=&nbsp;new&nbsp;OracleClient(log,&nbsp;param,&nbsp;encryption);</code></td></tr>
<tr><td class="gray">&nbsp;</td><td class="leftmargin right"></td><td class="right"><code>78</code></td><td class="light"><code>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;//Test</code></td></tr>
<tr><td class="red">&nbsp;</td><td class="leftmargin right">0</td><td class="right"><code>79</code></td><td><code>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;var&nbsp;results&nbsp;=&nbsp;client.Get();</code></td></tr>
<tr><td class="gray">&nbsp;</td><td class="leftmargin right"></td><td class="right"><code>80</code></td><td class="light"><code>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;//Asset</code></td></tr>
<tr><td class="red">&nbsp;</td><td class="leftmargin right">0</td><td class="right"><code>81</code></td><td><code>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;var&nbsp;futureDate&nbsp;=&nbsp;DateTime.Now.Add(new&nbsp;TimeSpan(11,&nbsp;0,&nbsp;0,&nbsp;0));</code></td></tr>
<tr><td class="red">&nbsp;</td><td class="leftmargin right">0</td><td class="right"><code>82</code></td><td><code>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;Assert.That(results.Count,&nbsp;Is.EqualTo(1));</code></td></tr>
<tr><td class="red">&nbsp;</td><td class="leftmargin right">0</td><td class="right"><code>83</code></td><td><code>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;Assert.That(results[0].Name,&nbsp;Is.EqualTo(name));</code></td></tr>
<tr><td class="red">&nbsp;</td><td class="leftmargin right">0</td><td class="right"><code>84</code></td><td><code>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;Assert.That(results[0].Value,&nbsp;Is.EqualTo(234));</code></td></tr>
<tr><td class="red">&nbsp;</td><td class="leftmargin right">0</td><td class="right"><code>85</code></td><td><code>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;Assert.That(results[0].TimeStamp,&nbsp;Is.EqualTo(new&nbsp;DateTime(2012,&nbsp;02,&nbsp;03,&nbsp;00,&nbsp;00,&nbsp;01)));</code></td></tr>
<tr><td class="red">&nbsp;</td><td class="leftmargin right">0</td><td class="right"><code>86</code></td><td><code>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;}</code></td></tr>
<tr><td class="gray">&nbsp;</td><td class="leftmargin right"></td><td class="right"><code>87</code></td><td class="light"><code></code></td></tr>
<tr><td class="gray">&nbsp;</td><td class="leftmargin right"></td><td class="right"><code>88</code></td><td class="light"><code>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;[Test]</code></td></tr>
<tr><td class="gray">&nbsp;</td><td class="leftmargin right"></td><td class="right"><code>89</code></td><td class="light"><code>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;public&nbsp;void&nbsp;Should_get_result_with_date_and_name_set_in_select()</code></td></tr>
<tr><td class="red">&nbsp;</td><td class="leftmargin right">0</td><td class="right"><code>90</code></td><td><code>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;{</code></td></tr>
<tr><td class="red">&nbsp;</td><td class="leftmargin right">0</td><td class="right"><code>91</code></td><td><code>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;var&nbsp;name&nbsp;=&nbsp;Guid.NewGuid().ToString();</code></td></tr>
<tr><td class="red">&nbsp;</td><td class="leftmargin right">0</td><td class="right"><code>92</code></td><td><code>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;param.Sql&nbsp;=&nbsp;string.Format(&quot;SELECT&nbsp;&nbsp;&#39;{0}&#39;,&nbsp;&nbsp;to_date(&#39;2012-FEB-03&nbsp;00:00:01&#39;,&nbsp;&#39;YYYY-MON-DD&nbsp;HH24:MI:SS&#39;)&nbsp;,&nbsp;234&nbsp;F</code></td></tr>
<tr><td class="red">&nbsp;</td><td class="leftmargin right">0</td><td class="right"><code>93</code></td><td><code>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;client&nbsp;=&nbsp;new&nbsp;OracleClient(log,&nbsp;param,&nbsp;encryption);</code></td></tr>
<tr><td class="gray">&nbsp;</td><td class="leftmargin right"></td><td class="right"><code>94</code></td><td class="light"><code>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;//Test</code></td></tr>
<tr><td class="red">&nbsp;</td><td class="leftmargin right">0</td><td class="right"><code>95</code></td><td><code>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;var&nbsp;results&nbsp;=&nbsp;client.Get();</code></td></tr>
<tr><td class="gray">&nbsp;</td><td class="leftmargin right"></td><td class="right"><code>96</code></td><td class="light"><code>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;//Asset</code></td></tr>
<tr><td class="red">&nbsp;</td><td class="leftmargin right">0</td><td class="right"><code>97</code></td><td><code>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;Assert.That(results.Count,&nbsp;Is.EqualTo(1));</code></td></tr>
<tr><td class="red">&nbsp;</td><td class="leftmargin right">0</td><td class="right"><code>98</code></td><td><code>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;Assert.That(results[0].Name,&nbsp;Is.EqualTo(name));</code></td></tr>
<tr><td class="red">&nbsp;</td><td class="leftmargin right">0</td><td class="right"><code>99</code></td><td><code>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;Assert.That(results[0].Path,&nbsp;Is.EqualTo(&quot;path&quot;));</code></td></tr>
<tr><td class="red">&nbsp;</td><td class="leftmargin right">0</td><td class="right"><code>100</code></td><td><code>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;Assert.That(results[0].Value,&nbsp;Is.EqualTo(234));</code></td></tr>
<tr><td class="red">&nbsp;</td><td class="leftmargin right">0</td><td class="right"><code>101</code></td><td><code>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;}</code></td></tr>
<tr><td class="gray">&nbsp;</td><td class="leftmargin right"></td><td class="right"><code>102</code></td><td class="light"><code></code></td></tr>
<tr><td class="gray">&nbsp;</td><td class="leftmargin right"></td><td class="right"><code>103</code></td><td class="light"><code>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;[Test]</code></td></tr>
<tr><td class="gray">&nbsp;</td><td class="leftmargin right"></td><td class="right"><code>104</code></td><td class="light"><code>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;public&nbsp;void&nbsp;Should_get_multiple_results()</code></td></tr>
<tr><td class="red">&nbsp;</td><td class="leftmargin right">0</td><td class="right"><code>105</code></td><td><code>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;{</code></td></tr>
<tr><td class="red">&nbsp;</td><td class="leftmargin right">0</td><td class="right"><code>106</code></td><td><code>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;param.Sql&nbsp;=&nbsp;&quot;SELECT&nbsp;&nbsp;23&nbsp;,&nbsp;&#39;name&#39;&nbsp;FROM&nbsp;&nbsp;&nbsp;&nbsp;dual&nbsp;CONNECT&nbsp;BY&nbsp;&nbsp;level&nbsp;&lt;=&nbsp;8&quot;;</code></td></tr>
<tr><td class="red">&nbsp;</td><td class="leftmargin right">0</td><td class="right"><code>107</code></td><td><code>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;client&nbsp;=&nbsp;new&nbsp;OracleClient(log,&nbsp;param,&nbsp;encryption);</code></td></tr>
<tr><td class="red">&nbsp;</td><td class="leftmargin right">0</td><td class="right"><code>108</code></td><td><code>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;var&nbsp;results&nbsp;=&nbsp;client.Get();</code></td></tr>
<tr><td class="red">&nbsp;</td><td class="leftmargin right">0</td><td class="right"><code>109</code></td><td><code>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;Assert.That(results.Count,&nbsp;Is.EqualTo(8));</code></td></tr>
<tr><td class="red">&nbsp;</td><td class="leftmargin right">0</td><td class="right"><code>110</code></td><td><code>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;}</code></td></tr>
<tr><td class="gray">&nbsp;</td><td class="leftmargin right"></td><td class="right"><code>111</code></td><td class="light"><code>&nbsp;&nbsp;&nbsp;&nbsp;}</code></td></tr>
<tr><td class="gray">&nbsp;</td><td class="leftmargin right"></td><td class="right"><code>112</code></td><td class="light"><code>}</code></td></tr>
</table>
<div class="footer">Generated by: ReportGenerator 1.6.1.0<br />31/10/2012 - 09:09:45<br /><a href="http://www.palmmedia.de">www.palmmedia.de</a></div></div></body></html>