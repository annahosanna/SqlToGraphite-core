<!DOCTYPE html PUBLIC "-//W3C//DTD XHTML 1.0 Strict//EN" "http://www.w3.org/TR/xhtml1/DTD/xhtml1-strict.dtd">
<html><head><title>SqlToGraphite.UnitTests.With_result - Coverage Report</title>
<meta http-equiv="content-type" content="text/html; charset=UTF-8" />
<link rel="stylesheet" type="text/css" href="report.css" />

</head><body><div class="container">
<h1>Summary</h1>
<table class="overview">
<colgroup>
<col width="130" />
<col />
</colgroup>
<tr><th>Class:</th><td>SqlToGraphite.UnitTests.With_result</td></tr>
<tr><th>Assembly:</th><td>SqlToGraphite.UnitTests</td></tr>
<tr><th>File(s):</th><td><a href="#CgitperryOfPeekSqlToGraphitetestSqlToGraphiteUnitTestsWith_resultcs">C:\git\perryOfPeek\SqlToGraphite\test\SqlToGraphite.UnitTests\With_result.cs</a></td></tr>
<tr><th>Coverage:</th><td>100%</td></tr>
<tr><th>Covered lines:</th><td>56</td></tr>
<tr><th>Coverable lines:</th><td>56</td></tr>
<tr><th>Total lines:</th><td>97</td></tr>
</table>
<h1>Metrics</h1>
<table class="overview">
<tr><th>Method</th><th>Cyclomatic Complexity</th><th>Sequence Coverage</th><th>Branch Coverage</th></tr>
<tr><td title="System.Void SqlToGraphite.UnitTests.With_result::Should_create_result_using_constructor()">Should_create_result_using_constructor()</td><td>1</td><td>100</td><td>100</td></tr>
<tr><td title="System.Void SqlToGraphite.UnitTests.With_result::Should_create_result_with_integer_and_date()">Should_create_result_with_integer_and_date()</td><td>1</td><td>100</td><td>100</td></tr>
<tr><td title="System.Void SqlToGraphite.UnitTests.With_result::Should_create_result_with_integer_and_date_and_name()">Should_create_result_with_integer_and_date_and_name()</td><td>1</td><td>100</td><td>100</td></tr>
<tr><td title="System.Void SqlToGraphite.UnitTests.With_result::Should_create_result_with_integer_and_date_and_name_remove_special_characters()">Should_create_result_with_integer_and_date_and_name_remove_special_characters()</td><td>1</td><td>100</td><td>100</td></tr>
<tr><td title="System.Void SqlToGraphite.UnitTests.With_result::Should_create_full_path()">Should_create_full_path()</td><td>1</td><td>100</td><td>100</td></tr>
<tr><td title="System.Void SqlToGraphite.UnitTests.With_result::Should_create_full_path_replace_spaces_with_underscore()">Should_create_full_path_replace_spaces_with_underscore()</td><td>1</td><td>100</td><td>100</td></tr>
<tr><td title="System.Void SqlToGraphite.UnitTests.With_result::Should_create_insert_hostname_into_full_path()">Should_create_insert_hostname_into_full_path()</td><td>1</td><td>100</td><td>100</td></tr>
</table>
<h1>File(s)</h1>
<h2 id="CgitperryOfPeekSqlToGraphitetestSqlToGraphiteUnitTestsWith_resultcs">C:\git\perryOfPeek\SqlToGraphite\test\SqlToGraphite.UnitTests\With_result.cs</h2>
<table>
<tr><th></th><th>#</th><th>Line</th><th>Coverage</th></tr>
<tr><td class="gray">&nbsp;</td><td class="leftmargin right"></td><td class="right"><code>1</code></td><td class="light"><code>using&nbsp;System;</code></td></tr>
<tr><td class="gray">&nbsp;</td><td class="leftmargin right"></td><td class="right"><code>2</code></td><td class="light"><code></code></td></tr>
<tr><td class="gray">&nbsp;</td><td class="leftmargin right"></td><td class="right"><code>3</code></td><td class="light"><code>using&nbsp;NUnit.Framework;</code></td></tr>
<tr><td class="gray">&nbsp;</td><td class="leftmargin right"></td><td class="right"><code>4</code></td><td class="light"><code></code></td></tr>
<tr><td class="gray">&nbsp;</td><td class="leftmargin right"></td><td class="right"><code>5</code></td><td class="light"><code>using&nbsp;SqlToGraphiteInterfaces;</code></td></tr>
<tr><td class="gray">&nbsp;</td><td class="leftmargin right"></td><td class="right"><code>6</code></td><td class="light"><code></code></td></tr>
<tr><td class="gray">&nbsp;</td><td class="leftmargin right"></td><td class="right"><code>7</code></td><td class="light"><code>namespace&nbsp;SqlToGraphite.UnitTests</code></td></tr>
<tr><td class="gray">&nbsp;</td><td class="leftmargin right"></td><td class="right"><code>8</code></td><td class="light"><code>{</code></td></tr>
<tr><td class="gray">&nbsp;</td><td class="leftmargin right"></td><td class="right"><code>9</code></td><td class="light"><code>&nbsp;&nbsp;&nbsp;&nbsp;//&nbsp;ReSharper&nbsp;disable&nbsp;InconsistentNaming</code></td></tr>
<tr><td class="gray">&nbsp;</td><td class="leftmargin right"></td><td class="right"><code>10</code></td><td class="light"><code>&nbsp;&nbsp;&nbsp;&nbsp;[TestFixture]</code></td></tr>
<tr><td class="gray">&nbsp;</td><td class="leftmargin right"></td><td class="right"><code>11</code></td><td class="light"><code>&nbsp;&nbsp;&nbsp;&nbsp;public&nbsp;class&nbsp;With_result</code></td></tr>
<tr><td class="gray">&nbsp;</td><td class="leftmargin right"></td><td class="right"><code>12</code></td><td class="light"><code>&nbsp;&nbsp;&nbsp;&nbsp;{</code></td></tr>
<tr><td class="gray">&nbsp;</td><td class="leftmargin right"></td><td class="right"><code>13</code></td><td class="light"><code>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;[Test]</code></td></tr>
<tr><td class="gray">&nbsp;</td><td class="leftmargin right"></td><td class="right"><code>14</code></td><td class="light"><code>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;public&nbsp;void&nbsp;Should_create_result_using_constructor()</code></td></tr>
<tr><td class="green">&nbsp;</td><td class="leftmargin right">1</td><td class="right"><code>15</code></td><td><code>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;{</code></td></tr>
<tr><td class="gray">&nbsp;</td><td class="leftmargin right"></td><td class="right"><code>16</code></td><td class="light"><code>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;const&nbsp;int&nbsp;Value&nbsp;=&nbsp;13;</code></td></tr>
<tr><td class="green">&nbsp;</td><td class="leftmargin right">1</td><td class="right"><code>17</code></td><td><code>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;var&nbsp;d&nbsp;=&nbsp;DateTime.Now;</code></td></tr>
<tr><td class="green">&nbsp;</td><td class="leftmargin right">1</td><td class="right"><code>18</code></td><td><code>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;var&nbsp;name&nbsp;=&nbsp;&quot;name&quot;;</code></td></tr>
<tr><td class="green">&nbsp;</td><td class="leftmargin right">1</td><td class="right"><code>19</code></td><td><code>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;var&nbsp;path&nbsp;=&nbsp;&quot;path&quot;;</code></td></tr>
<tr><td class="green">&nbsp;</td><td class="leftmargin right">1</td><td class="right"><code>20</code></td><td><code>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;var&nbsp;result&nbsp;=&nbsp;new&nbsp;Result(Value,&nbsp;name,&nbsp;d,&nbsp;path);</code></td></tr>
<tr><td class="green">&nbsp;</td><td class="leftmargin right">1</td><td class="right"><code>21</code></td><td><code>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;Assert.That(result.Value,&nbsp;Is.EqualTo(Value));</code></td></tr>
<tr><td class="green">&nbsp;</td><td class="leftmargin right">1</td><td class="right"><code>22</code></td><td><code>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;Assert.That(result.Name,&nbsp;Is.EqualTo(name));</code></td></tr>
<tr><td class="green">&nbsp;</td><td class="leftmargin right">1</td><td class="right"><code>23</code></td><td><code>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;Assert.That(result.Path,&nbsp;Is.EqualTo(path));</code></td></tr>
<tr><td class="green">&nbsp;</td><td class="leftmargin right">1</td><td class="right"><code>24</code></td><td><code>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;Assert.That(result.TimeStamp.Day,&nbsp;Is.EqualTo(DateTime.Now.Day));</code></td></tr>
<tr><td class="green">&nbsp;</td><td class="leftmargin right">1</td><td class="right"><code>25</code></td><td><code>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;Assert.That(result.TimeStamp.Hour,&nbsp;Is.EqualTo(DateTime.Now.Hour));</code></td></tr>
<tr><td class="green">&nbsp;</td><td class="leftmargin right">1</td><td class="right"><code>26</code></td><td><code>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;Assert.That(result.TimeStamp.Minute,&nbsp;Is.EqualTo(DateTime.Now.Minute));</code></td></tr>
<tr><td class="green">&nbsp;</td><td class="leftmargin right">1</td><td class="right"><code>27</code></td><td><code>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;Assert.That(result.TimeStamp.Month,&nbsp;Is.EqualTo(DateTime.Now.Month));</code></td></tr>
<tr><td class="green">&nbsp;</td><td class="leftmargin right">1</td><td class="right"><code>28</code></td><td><code>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;}</code></td></tr>
<tr><td class="gray">&nbsp;</td><td class="leftmargin right"></td><td class="right"><code>29</code></td><td class="light"><code></code></td></tr>
<tr><td class="gray">&nbsp;</td><td class="leftmargin right"></td><td class="right"><code>30</code></td><td class="light"><code>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;[Test]</code></td></tr>
<tr><td class="gray">&nbsp;</td><td class="leftmargin right"></td><td class="right"><code>31</code></td><td class="light"><code>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;public&nbsp;void&nbsp;Should_create_result_with_integer_and_date()</code></td></tr>
<tr><td class="green">&nbsp;</td><td class="leftmargin right">1</td><td class="right"><code>32</code></td><td><code>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;{</code></td></tr>
<tr><td class="gray">&nbsp;</td><td class="leftmargin right"></td><td class="right"><code>33</code></td><td class="light"><code>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;const&nbsp;int&nbsp;Value&nbsp;=&nbsp;13;</code></td></tr>
<tr><td class="green">&nbsp;</td><td class="leftmargin right">1</td><td class="right"><code>34</code></td><td><code>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;var&nbsp;name&nbsp;=&nbsp;&quot;name&quot;;</code></td></tr>
<tr><td class="green">&nbsp;</td><td class="leftmargin right">1</td><td class="right"><code>35</code></td><td><code>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;var&nbsp;date&nbsp;=&nbsp;new&nbsp;DateTime(2001,&nbsp;12,&nbsp;11,&nbsp;9,&nbsp;8,&nbsp;7);</code></td></tr>
<tr><td class="green">&nbsp;</td><td class="leftmargin right">1</td><td class="right"><code>36</code></td><td><code>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;var&nbsp;result&nbsp;=&nbsp;new&nbsp;Result(Value,&nbsp;name,&nbsp;date,&nbsp;&quot;path&quot;);</code></td></tr>
<tr><td class="green">&nbsp;</td><td class="leftmargin right">1</td><td class="right"><code>37</code></td><td><code>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;Assert.That(result.Value,&nbsp;Is.EqualTo(Value));</code></td></tr>
<tr><td class="green">&nbsp;</td><td class="leftmargin right">1</td><td class="right"><code>38</code></td><td><code>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;Assert.That(result.TimeStamp,&nbsp;Is.EqualTo(date));</code></td></tr>
<tr><td class="green">&nbsp;</td><td class="leftmargin right">1</td><td class="right"><code>39</code></td><td><code>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;Assert.That(result.Name,&nbsp;Is.EqualTo(name));</code></td></tr>
<tr><td class="green">&nbsp;</td><td class="leftmargin right">1</td><td class="right"><code>40</code></td><td><code>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;}</code></td></tr>
<tr><td class="gray">&nbsp;</td><td class="leftmargin right"></td><td class="right"><code>41</code></td><td class="light"><code></code></td></tr>
<tr><td class="gray">&nbsp;</td><td class="leftmargin right"></td><td class="right"><code>42</code></td><td class="light"><code>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;[Test]</code></td></tr>
<tr><td class="gray">&nbsp;</td><td class="leftmargin right"></td><td class="right"><code>43</code></td><td class="light"><code>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;public&nbsp;void&nbsp;Should_create_result_with_integer_and_date_and_name()</code></td></tr>
<tr><td class="green">&nbsp;</td><td class="leftmargin right">1</td><td class="right"><code>44</code></td><td><code>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;{</code></td></tr>
<tr><td class="gray">&nbsp;</td><td class="leftmargin right"></td><td class="right"><code>45</code></td><td class="light"><code>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;const&nbsp;int&nbsp;Value&nbsp;=&nbsp;13;</code></td></tr>
<tr><td class="green">&nbsp;</td><td class="leftmargin right">1</td><td class="right"><code>46</code></td><td><code>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;var&nbsp;name&nbsp;=&nbsp;&quot;name&quot;;</code></td></tr>
<tr><td class="green">&nbsp;</td><td class="leftmargin right">1</td><td class="right"><code>47</code></td><td><code>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;var&nbsp;date&nbsp;=&nbsp;new&nbsp;DateTime(2001,&nbsp;12,&nbsp;11,&nbsp;9,&nbsp;8,&nbsp;7);</code></td></tr>
<tr><td class="green">&nbsp;</td><td class="leftmargin right">1</td><td class="right"><code>48</code></td><td><code>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;var&nbsp;result&nbsp;=&nbsp;new&nbsp;Result(Value,&nbsp;name,&nbsp;date,&nbsp;&quot;path&quot;);</code></td></tr>
<tr><td class="green">&nbsp;</td><td class="leftmargin right">1</td><td class="right"><code>49</code></td><td><code>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;Assert.That(result.Value,&nbsp;Is.EqualTo(Value));</code></td></tr>
<tr><td class="green">&nbsp;</td><td class="leftmargin right">1</td><td class="right"><code>50</code></td><td><code>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;Assert.That(result.TimeStamp,&nbsp;Is.EqualTo(date));</code></td></tr>
<tr><td class="green">&nbsp;</td><td class="leftmargin right">1</td><td class="right"><code>51</code></td><td><code>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;Assert.That(result.Name,&nbsp;Is.EqualTo(name));</code></td></tr>
<tr><td class="green">&nbsp;</td><td class="leftmargin right">1</td><td class="right"><code>52</code></td><td><code>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;}</code></td></tr>
<tr><td class="gray">&nbsp;</td><td class="leftmargin right"></td><td class="right"><code>53</code></td><td class="light"><code></code></td></tr>
<tr><td class="gray">&nbsp;</td><td class="leftmargin right"></td><td class="right"><code>54</code></td><td class="light"><code>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;[Test]</code></td></tr>
<tr><td class="gray">&nbsp;</td><td class="leftmargin right"></td><td class="right"><code>55</code></td><td class="light"><code>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;public&nbsp;void&nbsp;Should_create_result_with_integer_and_date_and_name_remove_special_characters()</code></td></tr>
<tr><td class="green">&nbsp;</td><td class="leftmargin right">1</td><td class="right"><code>56</code></td><td><code>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;{</code></td></tr>
<tr><td class="gray">&nbsp;</td><td class="leftmargin right"></td><td class="right"><code>57</code></td><td class="light"><code>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;const&nbsp;int&nbsp;Value&nbsp;=&nbsp;13;</code></td></tr>
<tr><td class="green">&nbsp;</td><td class="leftmargin right">1</td><td class="right"><code>58</code></td><td><code>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;var&nbsp;name&nbsp;=&nbsp;&quot;D:&quot;;</code></td></tr>
<tr><td class="green">&nbsp;</td><td class="leftmargin right">1</td><td class="right"><code>59</code></td><td><code>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;var&nbsp;date&nbsp;=&nbsp;new&nbsp;DateTime(2001,&nbsp;12,&nbsp;11,&nbsp;9,&nbsp;8,&nbsp;7);</code></td></tr>
<tr><td class="green">&nbsp;</td><td class="leftmargin right">1</td><td class="right"><code>60</code></td><td><code>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;var&nbsp;result&nbsp;=&nbsp;new&nbsp;Result(Value,&nbsp;name,&nbsp;date,&nbsp;&quot;path&quot;);</code></td></tr>
<tr><td class="green">&nbsp;</td><td class="leftmargin right">1</td><td class="right"><code>61</code></td><td><code>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;Assert.That(result.Value,&nbsp;Is.EqualTo(Value));</code></td></tr>
<tr><td class="green">&nbsp;</td><td class="leftmargin right">1</td><td class="right"><code>62</code></td><td><code>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;Assert.That(result.TimeStamp,&nbsp;Is.EqualTo(date));</code></td></tr>
<tr><td class="green">&nbsp;</td><td class="leftmargin right">1</td><td class="right"><code>63</code></td><td><code>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;Assert.That(result.Name,&nbsp;Is.EqualTo(&quot;D&quot;));</code></td></tr>
<tr><td class="green">&nbsp;</td><td class="leftmargin right">1</td><td class="right"><code>64</code></td><td><code>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;}</code></td></tr>
<tr><td class="gray">&nbsp;</td><td class="leftmargin right"></td><td class="right"><code>65</code></td><td class="light"><code></code></td></tr>
<tr><td class="gray">&nbsp;</td><td class="leftmargin right"></td><td class="right"><code>66</code></td><td class="light"><code>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;[Test]</code></td></tr>
<tr><td class="gray">&nbsp;</td><td class="leftmargin right"></td><td class="right"><code>67</code></td><td class="light"><code>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;public&nbsp;void&nbsp;Should_create_full_path()</code></td></tr>
<tr><td class="green">&nbsp;</td><td class="leftmargin right">1</td><td class="right"><code>68</code></td><td><code>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;{</code></td></tr>
<tr><td class="gray">&nbsp;</td><td class="leftmargin right"></td><td class="right"><code>69</code></td><td class="light"><code>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;const&nbsp;int&nbsp;Value&nbsp;=&nbsp;13;</code></td></tr>
<tr><td class="green">&nbsp;</td><td class="leftmargin right">1</td><td class="right"><code>70</code></td><td><code>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;var&nbsp;name&nbsp;=&nbsp;&quot;D:&quot;;</code></td></tr>
<tr><td class="green">&nbsp;</td><td class="leftmargin right">1</td><td class="right"><code>71</code></td><td><code>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;var&nbsp;date&nbsp;=&nbsp;new&nbsp;DateTime(2001,&nbsp;12,&nbsp;11,&nbsp;9,&nbsp;8,&nbsp;7);</code></td></tr>
<tr><td class="green">&nbsp;</td><td class="leftmargin right">1</td><td class="right"><code>72</code></td><td><code>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;var&nbsp;result&nbsp;=&nbsp;new&nbsp;Result(Value,&nbsp;name,&nbsp;date,&nbsp;&quot;path&quot;);</code></td></tr>
<tr><td class="green">&nbsp;</td><td class="leftmargin right">1</td><td class="right"><code>73</code></td><td><code>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;Assert.That(result.FullPath,&nbsp;Is.EqualTo(&quot;path.D&quot;));</code></td></tr>
<tr><td class="green">&nbsp;</td><td class="leftmargin right">1</td><td class="right"><code>74</code></td><td><code>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;}</code></td></tr>
<tr><td class="gray">&nbsp;</td><td class="leftmargin right"></td><td class="right"><code>75</code></td><td class="light"><code></code></td></tr>
<tr><td class="gray">&nbsp;</td><td class="leftmargin right"></td><td class="right"><code>76</code></td><td class="light"><code>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;[Test]</code></td></tr>
<tr><td class="gray">&nbsp;</td><td class="leftmargin right"></td><td class="right"><code>77</code></td><td class="light"><code>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;public&nbsp;void&nbsp;Should_create_full_path_replace_spaces_with_underscore()</code></td></tr>
<tr><td class="green">&nbsp;</td><td class="leftmargin right">1</td><td class="right"><code>78</code></td><td><code>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;{</code></td></tr>
<tr><td class="gray">&nbsp;</td><td class="leftmargin right"></td><td class="right"><code>79</code></td><td class="light"><code>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;const&nbsp;int&nbsp;Value&nbsp;=&nbsp;13;</code></td></tr>
<tr><td class="green">&nbsp;</td><td class="leftmargin right">1</td><td class="right"><code>80</code></td><td><code>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;var&nbsp;name&nbsp;=&nbsp;&quot;name&quot;;</code></td></tr>
<tr><td class="green">&nbsp;</td><td class="leftmargin right">1</td><td class="right"><code>81</code></td><td><code>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;var&nbsp;date&nbsp;=&nbsp;new&nbsp;DateTime(2001,&nbsp;12,&nbsp;11,&nbsp;9,&nbsp;8,&nbsp;7);</code></td></tr>
<tr><td class="green">&nbsp;</td><td class="leftmargin right">1</td><td class="right"><code>82</code></td><td><code>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;var&nbsp;result&nbsp;=&nbsp;new&nbsp;Result(Value,&nbsp;name,&nbsp;date,&nbsp;&quot;some.path.with&nbsp;a&nbsp;space&quot;);</code></td></tr>
<tr><td class="green">&nbsp;</td><td class="leftmargin right">1</td><td class="right"><code>83</code></td><td><code>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;Assert.That(result.FullPath,&nbsp;Is.EqualTo(&quot;some.path.with_a_space.name&quot;));</code></td></tr>
<tr><td class="green">&nbsp;</td><td class="leftmargin right">1</td><td class="right"><code>84</code></td><td><code>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;}</code></td></tr>
<tr><td class="gray">&nbsp;</td><td class="leftmargin right"></td><td class="right"><code>85</code></td><td class="light"><code></code></td></tr>
<tr><td class="gray">&nbsp;</td><td class="leftmargin right"></td><td class="right"><code>86</code></td><td class="light"><code>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;[Test]</code></td></tr>
<tr><td class="gray">&nbsp;</td><td class="leftmargin right"></td><td class="right"><code>87</code></td><td class="light"><code>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;public&nbsp;void&nbsp;Should_create_insert_hostname_into_full_path()</code></td></tr>
<tr><td class="green">&nbsp;</td><td class="leftmargin right">1</td><td class="right"><code>88</code></td><td><code>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;{</code></td></tr>
<tr><td class="gray">&nbsp;</td><td class="leftmargin right"></td><td class="right"><code>89</code></td><td class="light"><code>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;const&nbsp;int&nbsp;Value&nbsp;=&nbsp;13;</code></td></tr>
<tr><td class="green">&nbsp;</td><td class="leftmargin right">1</td><td class="right"><code>90</code></td><td><code>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;var&nbsp;machinecName&nbsp;=&nbsp;Environment.MachineName;</code></td></tr>
<tr><td class="green">&nbsp;</td><td class="leftmargin right">1</td><td class="right"><code>91</code></td><td><code>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;var&nbsp;name&nbsp;=&nbsp;&quot;D:&quot;;</code></td></tr>
<tr><td class="green">&nbsp;</td><td class="leftmargin right">1</td><td class="right"><code>92</code></td><td><code>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;var&nbsp;date&nbsp;=&nbsp;new&nbsp;DateTime(2001,&nbsp;12,&nbsp;11,&nbsp;9,&nbsp;8,&nbsp;7);</code></td></tr>
<tr><td class="green">&nbsp;</td><td class="leftmargin right">1</td><td class="right"><code>93</code></td><td><code>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;var&nbsp;result&nbsp;=&nbsp;new&nbsp;Result(Value,&nbsp;name,&nbsp;date,&nbsp;&quot;path.%h&quot;);</code></td></tr>
<tr><td class="green">&nbsp;</td><td class="leftmargin right">1</td><td class="right"><code>94</code></td><td><code>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;Assert.That(result.FullPath,&nbsp;Is.EqualTo(string.Format(&quot;path.{0}.D&quot;,&nbsp;machinecName)));</code></td></tr>
<tr><td class="green">&nbsp;</td><td class="leftmargin right">1</td><td class="right"><code>95</code></td><td><code>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;}</code></td></tr>
<tr><td class="gray">&nbsp;</td><td class="leftmargin right"></td><td class="right"><code>96</code></td><td class="light"><code>&nbsp;&nbsp;&nbsp;&nbsp;}</code></td></tr>
<tr><td class="gray">&nbsp;</td><td class="leftmargin right"></td><td class="right"><code>97</code></td><td class="light"><code>}</code></td></tr>
</table>
<div class="footer">Generated by: ReportGenerator 1.6.1.0<br />31/10/2012 - 09:09:45<br /><a href="http://www.palmmedia.de">www.palmmedia.de</a></div></div></body></html>